{
  "id": "564120365483261963",
  "repoSource": "github.com",
  "repoOwner": "estafette",
  "repoName": "estafette-ci-web",
  "repoBranch": "master",
  "repoRevision": "852a1a896b992feb724a30260d560b20b7b2bdc6",
  "buildVersion": "0.1.899",
  "buildStatus": "succeeded",
  "labels": [
    {
      "key": "app-group",
      "value": "estafette-ci"
    },
    {
      "key": "language",
      "value": "nodejs"
    },
    {
      "key": "team",
      "value": "estafette-team"
    },
    {
      "key": "type",
      "value": "web"
    }
  ],
  "releaseTargets": [
    {
      "name": "tooling-estafette",
      "activeReleases": [
        {
          "name": "tooling-estafette",
          "id": "564109334453813260",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-web",
          "releaseVersion": "0.1.896",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-06-15T12:08:26.851871Z",
          "startedAt": "2020-06-15T12:08:29.391236Z",
          "updatedAt": "2020-06-15T12:09:40.682356Z",
          "duration": 71000000000,
          "pendingDuration": 2000000000
        }
      ]
    }
  ],
  "manifest": "builder:\n  track: dev\n\nlabels:\n  type: web\n  app-group: estafette-ci\n  team: estafette-team\n  language: nodejs\n\nversion:\n  semver:\n    major: 0\n    minor: 1\n\nstages:\n  audit-and-restore:\n    parallelStages:\n      audit:\n        image: extensions/npm-audit:dev\n        action: audit\n        dev-level: moderate\n        workspace: estafette\n        channels:\n        - '#npm-audit'\n\n      restore:\n        image: node:13.6.0-alpine\n        commands:\n        - npm ci\n\n  lint-and-build:\n    parallelStages:\n      lint:\n        image: node:13.6.0-alpine\n        commands:\n        - npm run lint\n\n      build:\n        image: node:13.6.0-alpine\n        commands:\n        - npm run build\n\n  bake:\n    image: extensions/docker:dev\n    action: build\n    repositories:\n    - estafette\n    path: ./dist\n    copy:\n    - favicon.ico\n    - nginx.vh.default.conf\n    - docker-entrypoint.sh\n    - package-lock.json\n\n  check-container:\n    parallelStages:\n      check-efficiency:\n        image: extensions/docker:dev\n        action: dive\n        repositories:\n        - estafette\n\n      vulnerability-scan:\n        image: extensions/docker:dev\n        action: trivy\n        repositories:\n        - estafette\n\n  test:\n    services:\n    - name: ci.estafette.io\n      image: estafette/estafette-ci-web:${ESTAFETTE_BUILD_VERSION}\n      readiness:\n        path: /robots.txt\n        port: 5000\n\n    image: node:13.6.0-alpine\n    commands:\n    - apk add curl\n    - curl --fail http://ci.estafette.io:5000/manifest/encrypt\n\n  push-to-docker-hub:\n    image: extensions/docker:dev\n    retries: 5\n    action: push\n    repositories:\n    - estafette\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: estafette\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n\nreleases:\n  tooling-estafette:\n    clone: true\n    stages:\n      deploy:\n        image: extensions/gke:dev\n        namespace: estafette-ci\n        visibility: iap\n        iapOauthClientID: ***\n        iapOauthClientSecret: ***\n        container:\n          repository: estafette\n          cpu:\n            request: 10m\n            limit: 200m\n          memory:\n            request: 15Mi\n            limit: 512Mi\n          liveness:\n            path: /robots.txt\n          readiness:\n            path: /robots.txt\n          metrics:\n            scrape: false\n        hosts:\n        - ***\n        - ***\n        chaosproof: true\n        manifests:\n          files:\n          - gke/ingress.yaml\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: estafette\n        channels:\n        - '#build-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'",
  "manifestWithDefaults": "builder:\n  track: dev\n  os: linux\nlabels:\n  app-group: estafette-ci\n  language: nodejs\n  team: estafette-team\n  type: web\nversion:\n  semver:\n    major: 0\n    minor: 1\n    patch: '{{auto}}'\n    labelTemplate: '{{branch}}'\n    releaseBranch: master\nstages:\n  audit-and-restore:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/npm-audit:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: audit\n      channels:\n      - '#npm-audit'\n      dev-level: moderate\n      workspace: estafette\n    - image: node:13.6.0-alpine\n      shell: /bin/sh\n      workDir: /estafette-work\n      commands:\n      - npm ci\n      when: status == 'succeeded'\n  lint-and-build:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: node:13.6.0-alpine\n      shell: /bin/sh\n      workDir: /estafette-work\n      commands:\n      - npm run lint\n      when: status == 'succeeded'\n    - image: node:13.6.0-alpine\n      shell: /bin/sh\n      workDir: /estafette-work\n      commands:\n      - npm run build\n      when: status == 'succeeded'\n  bake:\n    image: extensions/docker:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    action: build\n    copy:\n    - favicon.ico\n    - nginx.vh.default.conf\n    - docker-entrypoint.sh\n    - package-lock.json\n    path: ./dist\n    repositories:\n    - estafette\n  check-container:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: dive\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: trivy\n      repositories:\n      - estafette\n  test:\n    image: node:13.6.0-alpine\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - apk add curl\n    - curl --fail http://ci.estafette.io:5000/manifest/encrypt\n    when: status == 'succeeded'\n    services:\n    - name: ci.estafette.io\n      image: estafette/estafette-ci-web:${ESTAFETTE_BUILD_VERSION}\n      shell: /bin/sh\n      multiStage: false\n      when: status == 'succeeded'\n      readiness:\n        path: /robots.txt\n        timeoutSeconds: 60\n        port: 5000\n        protocol: http\n        hostname: ci.estafette.io\n  push-to-docker-hub:\n    image: extensions/docker:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    retries: 5\n    action: push\n    repositories:\n    - estafette\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: estafette\nreleases:\n  tooling-estafette:\n    stages:\n      deploy:\n        image: extensions/gke:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded'\n        chaosproof: true\n        container:\n          cpu:\n            limit: 200m\n            request: 10m\n          liveness:\n            path: /robots.txt\n          memory:\n            limit: 512Mi\n            request: 15Mi\n          metrics:\n            scrape: false\n          readiness:\n            path: /robots.txt\n          repository: estafette\n        hosts:\n        - ***\n        - ***\n        iapOauthClientID: ***\n        iapOauthClientSecret: ***\n        manifests:\n          files:\n          - gke/ingress.yaml\n        namespace: estafette-ci\n        visibility: iap\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#build-status'\n        workspace: estafette\n",
  "commits": [
    {
      "message": "use GET.js to return index.json after 100ms delay",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    }
  ],
  "triggerEvents": [
    {
      "git": {
        "event": "push",
        "repository": "github.com/estafette/estafette-ci-web",
        "branch": "master"
      }
    }
  ],
  "insertedAt": "2020-06-15T13:04:33.255085Z",
  "startedAt": "2020-06-15T13:04:35.399659Z",
  "updatedAt": "2020-06-15T13:06:54.581373Z",
  "duration": 139000000000,
  "pendingDuration": 2000000000
}