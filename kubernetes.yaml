apiVersion: v1
kind: Namespace
metadata:
  name: estafette
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: estafette-ci-web
  namespace: estafette
  labels:
    app: estafette-ci-web
    team: tooling
---
apiVersion: v1
kind: Service
metadata:
  name: estafette-ci-web
  namespace: estafette
  labels:
    app: estafette-ci-web
    team: tooling
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "/robots.txt"
    service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  selector:
    app: estafette-ci-web
---
apiVersion: v1
kind: Secret
metadata:
  name: estafette-ci-web-letsencrypt-certificate
  namespace: estafette
  labels:
    app: estafette-ci-web
    team: tooling
  annotations:
    estafette.io/letsencrypt-certificate: "true"
    estafette.io/letsencrypt-certificate-hostnames: "${HOSTNAMES}"
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: estafette-ci-web
  namespace: estafette
  labels:
    app: estafette-ci-web
    team: tooling
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: estafette-ci-web
  template:
    metadata:
      labels:
        app: estafette-ci-web
        team: tooling
        version: ${VERSION}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9001"
        prometheus.io/scrape-nginx-sidecar: "true"
    spec:
      serviceAccount: estafette-ci-web
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - estafette-ci-web
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            preference:
              matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: In
                values:
                - "true"
      containers:
      - name: estafette-ci-web
        image: estafette/estafette-ci-web:${GO_PIPELINE_LABEL}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
        ports:
        - name: web
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /robots.txt
            port: web
          initialDelaySeconds: 30
          timeoutSeconds: 1
      - name: estafette-ci-web-openresty
        image: estafette/openresty-sidecar:1.13.6.1-alpine
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: nginx-liveness
          containerPort: 82
        - name: nginx-readiness
          containerPort: 81
        - name: nginx-prom
          containerPort: 9101
        env:
        - name: "OFFLOAD_TO_HOST"
          value: "localhost"
        - name: "OFFLOAD_TO_PORT"
          value: "8080"
        - name: "SERVICE_NAME"
          value: "estafette-ci-web"
        - name: "NAMESPACE"
          value: "estafette"
        - name: "HEALT_CHECK_PATH"
          value: "/robots.txt"
        volumeMounts:
        - name: ssl-certificate
          mountPath: /etc/ssl/private
        livenessProbe:
          httpGet:
            path: /liveness
            port: nginx-liveness
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /robots.txt
            port: https
            scheme: HTTPS
      volumes:
      - name: ssl-certificate
        secret:
          secretName: estafette-ci-web-letsencrypt-certificate
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: estafette-ci-web
  namespace: estafette
  labels:
    app: estafette-ci-web
    team: tooling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: estafette-ci-web
  minReplicas: 3
  maxReplicas: ${MAX_PODS}
  targetCPUUtilizationPercentage: 80
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: estafette-ci-web
  namespace: estafette
  labels:
    app: estafette-ci-web
    team: tooling
spec:
  selector:
    matchLabels:
      app: estafette-ci-web
  maxUnavailable: 1
