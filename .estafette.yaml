builder:
  track: dev

labels:
  app-group: estafette-ci
  team: estafette-team
  language: nodejs

version:
  semver:
    major: 1
    minor: 0
    patch: 0
    labelTemplate: '{{branch}}-{{auto}}'
    releaseBranch: 1.0.0

stages:
  audit-and-restore:
    parallelStages:
      audit:
        image: extensions/npm-audit:dev
        action: audit
        workspace: estafette
        channels:
        - '#npm-audit'

      restore:
        image: node:12.12.0-alpine
        commands:
        - npm ci

  build-lint-and-package:
    parallelStages:
      lint:
        image: node:12.12.0-alpine
        commands:
        - npm run lint

      build:
        image: node:12.12.0-alpine
        commands:
        - npm run build

      lint-helm-chart:
        image: extensions/helm:dev
        action: lint

      package-helm-chart:
        image: extensions/helm:dev
        action: package

  bake:
    image: extensions/docker:dev
    action: build
    repositories:
    - estafette
    path: ./dist
    copy:
    - favicon.ico
    - nginx.vh.default.conf
    - docker-entrypoint.sh

  push-to-docker-hub:
    image: extensions/docker:dev
    retries: 5
    action: push
    repositories:
    - estafette

  test-helm-chart:
    services:
    - name: kubernetes
      image: bsycorp/kind:latest-1.12
      ports:
      - port: 8443
      - port: 10080
        readiness:
          path: /kubernetes-ready
          timeoutSeconds: 180
    image: extensions/helm:dev
    action: test
    values: |-
      secret:
        valuesAreBase64Encoded: true
        # generated with
        # > openssl req -x509 -sha256 -newkey rsa:2048 -keyout certificate.key -out certificate.crt -days 1024 -nodes
        certificatePemFile: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZRQ0NRRGhIUFhaRklYN1BEQU5CZ2txaGtpRzl3MEJBUXNGQURCSU1Rc3dDUVlEVlFRR0V3SkoKVHpFU01CQUdBMVVFQ2d3SlJYTjBZV1psZEhSbE1Rc3dDUVlEVlFRTERBSkRTVEVZTUJZR0ExVUVBd3dQWTJrdQpaWE4wWVdabGRIUmxMbWx2TUI0WERURTVNVEV4TWpFME16UXlNVm9YRFRJeU1Ea3dNVEUwTXpReU1Wb3dTREVMCk1Ba0dBMVVFQmhNQ1NVOHhFakFRQmdOVkJBb01DVVZ6ZEdGbVpYUjBaVEVMTUFrR0ExVUVDd3dDUTBreEdEQVcKQmdOVkJBTU1EMk5wTG1WemRHRm1aWFIwWlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQwpBUW9DZ2dFQkFPWmVZMUoxUm43WFp5T24vOVY3dGdPS3hMdnpPM0ViWkxTOFFBOEJVbDd2Q2d4c2E3b0swSFprClNJbWtTdk5lUWxKL1JjcUQybTVyallpdHBLcXB2Y1JGdGJDZ1M1Um5JUlpkMkdWZjRPdFRYNER1aE1OZEhIYWMKeFQ2eGwyeXcxOEc5d3hXZG1sWjhmK0xPZkdHa0VXQ3FSdmU1eFFNM05NV2V1WWNpQmdpTHBKajdtdis5azVmSgpxOXlORG9oVEQyY0ttM0JNenNGS2N3eVJHZmk2T0FSM1RGdncyNzBsVTRDVmkwdStqRzRndStta2QrYTBSOWl0CmZRdVRHS0RoYWFtZ2VBbzgyMExMcnExSXQxVkdNOEt2OVViVlVETmYwZHU2WHZ0cnJzZXg5UjNwSlRzTktPbVUKQzFISGNkZGNXVkhuczhSNVpqWUw3blRFZitqU3NGc0NBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQowaFdpemxQTmlaOElHa3lCWnM1YVJiTlh6R3hNMFpTdVlTbU9XNVVMU1pDc3dISFhaNGs2Z0p2Sk1NM0J4SnVOCjZyZDRtODl3NE1nQ2sxTk9NNllFWmUwUnlrK241bzFBNlVpd0ZQbStUMmRsR3FyY25wNlBKM0paaUdqa2FUbUoKN1FOdDBidHBNcXdPdllCTFlqcjZaZkZ6Snp3OEF1MlVLNXcvM1Y1TmcycHpKWWdVbWFZTDQyRlJGZGtkdFFRZApKdU5waE9kMXBWa21pbGxNT1Z4RDNla2ZnTy8xZnJSeGh1STlMY0lrbG9KdzJxK2Q0N1ZWQ0JXRG9yTC8xcmd1CitmUTZERWk5SHFONkl4b3B2MUU4Nk1rQzRrRmJvQkdoZUZaOFRxY1BJOU15ZjlqazdmYWlNT0thTWhQRWx5WWwKR1VyalF1T0tlSGdjV2s5azJLcHFiUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        certificateKeyFile: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRG1YbU5TZFVaKzEyY2oKcC8vVmU3WURpc1M3OHp0eEcyUzB2RUFQQVZKZTd3b01iR3U2Q3RCMlpFaUpwRXJ6WGtKU2YwWEtnOXB1YTQySQpyYVNxcWIzRVJiV3dvRXVVWnlFV1hkaGxYK0RyVTErQTdvVERYUngybk1VK3NaZHNzTmZCdmNNVm5acFdmSC9pCnpueGhwQkZncWtiM3VjVUROelRGbnJtSElnWUlpNlNZKzVyL3ZaT1h5YXZjalE2SVV3OW5DcHR3VE03QlNuTU0Ka1JuNHVqZ0VkMHhiOE51OUpWT0FsWXRMdm94dUlMdnBwSGZtdEVmWXJYMExreGlnNFdtcG9IZ0tQTnRDeTY2dApTTGRWUmpQQ3IvVkcxVkF6WDlIYnVsNzdhNjdIc2ZVZDZTVTdEU2pwbEF0UngzSFhYRmxSNTdQRWVXWTJDKzUwCnhIL28wckJiQWdNQkFBRUNnZ0VBUElUMWNOY3dZdWd4eDFNK1NaWkxkZGpCNEdLQTdqRDFIdW9KcGllQnZVRHQKRWVCMTJKVTR1TEdWd05zeGVZZjh3bkYvSXpuS2E1SER4L0ZlUGh1RHFBbHNOdStWaTNJZ1ppRFhWYUova3pMKwo5djh5VDZTcGNwdXkwY3FUN2xEekRZbk5zMk1KQmNtRlMwOVZxODBQWjZhMEtDWmNsSUN2VTI5a2JCVExJdmtVCjgyUEoxYTBkcVRaVENZMDFwdWZ5eHJ6TFBkMXpPNmM4U29FMW5IY0RIT0ZOZVk0SlJpS0JKOXRBT2VJSjU3MHAKYkhSeHVRa081NDRpSG1SeEFuaWZIRVlFRU5NY2tPUy9pc2FoNzZBRlVFL3VUSnpmVkIzSUVSakF2cUpOMDhHcwpxdzJjaDBraDRzWXZrb1EyT1dxOEdOc1hURzRtYTM1M2ZRTUZYb2VYVVFLQmdRRDJmTTFMQ0xPSGFiYVhtUDJOCk8wWENzUFlPT2ZKd1ZrbUt2R0xOLy93dCtDaUJ2NTN0ME1VY3NHR3J0Vk5oN1lHU2xHNWU5Z2NkWWlwSWxOY2IKR1dPMWFwOUkrd3l0L3pscExMWGl4bnVPbnhUWStsY1R4dGczZlljY211LzY1d3diZnJGaWJ1aC9uSjVQcHkzawpvRXllQVZLUU9kbiswOS96Y1R0ZlhOY1U0d0tCZ1FEdlFsYTFTbDJ5R1RwMnAzSnU0R1Vpdlp4QzhsVHdydHZhCnpSYU1tT2IzRDlyMDJ3eDdoTDMxZ00rVW9YMzZmbUFoRmhSVHhRM1F2NzN0ZE5adnRiV2VLc3UxczJKYW5VbFIKVE9wOHpBWGF2S244UDNycnplUHpxSVN2TmwrWDVLUGhqUnBxYXVBRit3dWRlTXF5bGlKMWdzTkNuL2ZKblJIWApUbUQxMGVYSUtRS0JnUUNDMHZxak9Kc1E1Q3JsaTI0SDU4Mis1KzJ3MzFDdUR4NDVaSU9Na3JGbU5MQkxMVWpGClVHbE9NTSttTXpkdVlvRERLOFRvNGV3a3pGVms4SnE2NTE3a2l4Sy95WCtSV2tVK2JWeWNZSHh6MWp0YWJvU0oKR3FEbjB0aERkbmlvMHJpNlh5UUcrcGFzSkpSaDhubUpQd3RyVVloZ3hGUFB6T1N3Y1FqeU5IUnp3UUtCZ0ZFNQp1MGdXdEJKbmdES1NERVphQmR1eWRWOUE5OWN4OWMrbE9wZUd2VHA0OW9PVDdmdnRCN1JXQTZMWTVIVHEvR1dmCklrMkNJM3VQN01HMW5hc1ZERkJqQlA5dG8rRlJibmVjWGlyNTlLN2F4L2FyOG1ZbFl0THdqZ01SdVloT2hkaG4KMStUeTNaVUtNbHBHak1IdU9FcWVsdjJDWTFQZDhCV2hOVWVlOTV4cEFvR0JBSThsVGsrR3hpNFpqdWpvNkRqRwp3eFp5c1prSy9rZXgwVlcwVmIzN1dnem1OQ2dJM2lVNVhram9GZklOZUJVRVV6SnpQTm8vSGVvcnA4bVNmWmkvCmx3SE8wbXUwTlNTVndBQzJIQ2pCMmtDRTd4alNGbzBWTW9peHlXVlNBNnorYk1sRWtmd1p5ZVI1WTNydENQVDUKQmFyWTV0WGRXRnFNL3d4cGpQbExYZ2NlCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

  clone-charts-repo:
    image: extensions/git-clone:dev
    repo: helm-charts
    branch: master

  publish-helm-chart:
    image: extensions/helm:dev
    action: publish

  slack-notify:
    image: extensions/slack-build-status:dev
    workspace: estafette
    channels:
    - '#build-status'
    when:
      status == 'succeeded' ||
      status == 'failed'

releases:
  release:
    stages:
      clone-charts-repo:
        image: extensions/git-clone:dev
        repo: helm-charts
        branch: master

      purge-prerelease-helm-charts:
        image: extensions/helm:dev
        action: purge

      create-github-release:
        image: extensions/github-release:dev

  tooling:
    clone: true
    stages:
      deploy:
        image: extensions/gke:dev
        namespace: estafette
        visibility: iap
        iapOauthClientID: estafette.secret(vvhB3V2t9OVQAeSA.vXxiMmme6sb5A_F1JFbGFXIHaGBFs3_9zNjU7_T97xS0regbyPN5qBo_AzUJuAvIL5XVj6znw1EnKvWj5vjiBEMn2fnuEi6sAJgKVR8H8ul-asiTGHng7coGqiW84alwwEkSxqEtV0S3kZrXIsCVl8p_RSs=)
        iapOauthClientSecret: estafette.secret(zhD1Yzqpq0vmnIqj.EXrL8ypjScc3vpBW8jyR58_mGbbXVh71QtliNXPlZ6qB1yxyA_yQNfHjRX1QShID)
        container:
          repository: estafette
          cpu:
            request: 10m
            limit: 200m
          memory:
            request: 15Mi
            limit: 512Mi
          liveness:
            path: /robots.txt
          readiness:
            path: /robots.txt
          metrics:
            scrape: false
        hosts:
        - estafette.secret(z6C9Piz4EhMxWMc8.uxcITmg39HiLJuuqSyPRM06PTWNd6S1x1QxfYYeyGoBLcgkM)
        chaosproof: true
        manifests:
          files:
          - gke/ingress.yaml

      purge-cloudflare-cache:
        image: extensions/cloudflare-purge:dev
        hosts:
        - estafette.secret(z6C9Piz4EhMxWMc8.uxcITmg39HiLJuuqSyPRM06PTWNd6S1x1QxfYYeyGoBLcgkM)

      slack-notify:
        image: extensions/slack-build-status:dev
        workspace: estafette
        channels:
        - '#build-status'
        when:
          status == 'succeeded' ||
          status == 'failed'