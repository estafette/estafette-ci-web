{
  "id": "591047539920928778",
  "repoSource": "github.com",
  "repoOwner": "estafette",
  "repoName": "estafette-ci-api",
  "repoBranch": "fix-templates-path",
  "repoRevision": "e7703dd51f60f894cacdbfc877caf8e3ad40c484",
  "buildVersion": "0.1.1472-fix-templates-path",
  "buildStatus": "succeeded",
  "labels": [
    {
      "key": "app-group",
      "value": "estafette-ci"
    },
    {
      "key": "language",
      "value": "golang"
    },
    {
      "key": "team",
      "value": "estafette"
    },
    {
      "key": "type",
      "value": "service"
    }
  ],
  "releaseTargets": [
    {
      "name": "tooling-estafette",
      "actions": [
        {
          "name": "deploy-canary"
        },
        {
          "name": "deploy-stable"
        },
        {
          "name": "rollback-canary"
        },
        {
          "name": "restart-stable"
        }
      ],
      "activeReleases": [
        {
          "name": "tooling-estafette",
          "action": "deploy-stable",
          "id": "592650992061874186",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-api",
          "releaseVersion": "0.1.1479",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-09-24T07:38:49.51071Z",
          "startedAt": "2020-09-24T07:38:51.263323Z",
          "updatedAt": "2020-09-24T07:40:05.311153Z",
          "duration": 74000000000,
          "pendingDuration": 1000000000
        },
        {
          "name": "tooling-estafette",
          "action": "deploy-canary",
          "id": "592645792065716235",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-api",
          "releaseVersion": "0.1.1479",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-09-24T07:12:22.59776Z",
          "startedAt": "2020-09-24T07:12:24.517492Z",
          "updatedAt": "2020-09-24T07:13:14.869706Z",
          "duration": 50000000000,
          "pendingDuration": 1000000000
        },
        {
          "name": "tooling-estafette",
          "action": "restart-stable",
          "id": "568915176051081227",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-api",
          "releaseVersion": "0.1.1415",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-07-02T11:32:13.316032Z",
          "startedAt": "2020-07-02T11:32:18.441645Z",
          "updatedAt": "2020-07-02T11:33:44.817023Z",
          "duration": 86000000000,
          "pendingDuration": 5000000000
        },
        {
          "name": "tooling-estafette",
          "action": "rollback-canary",
          "id": "568585507784818700",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-api",
          "releaseVersion": "0.1.1401",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-07-01T07:35:26.545313Z",
          "startedAt": "2020-07-01T07:35:31.04694Z",
          "updatedAt": "2020-07-01T07:36:04.275219Z",
          "duration": 33000000000,
          "pendingDuration": 4000000000
        }
      ]
    }
  ],
  "manifest": "builder:\n  track: dev\n\nlabels:\n  type: service\n  app-group: estafette-ci\n  team: estafette\n  language: golang\n\nversion:\n  semver:\n    major: 0\n    minor: 1\n    releaseBranch: main\n\ntriggers:\n- pipeline:\n    name: github.com/estafette/estafette-ci-db-migrator\n    branch: master\n  builds:\n    branch: master\n\nstages:\n  build:\n    image: golang:1.15.1-alpine3.12\n    env:\n      CGO_ENABLED: 0\n      GOOS: linux\n      GOGC: off\n    commands:\n    - go test -short ./...\n    - go build -a -installsuffix cgo -ldflags \"-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\" -o ./publish/${ESTAFETTE_GIT_NAME} .\n\n  integration-tests-prepare:\n    services:\n    - name: cockroachdb\n      multiStage: true\n      image: cockroachdb/cockroach:v20.1.4\n      shell: /bin/bash\n      env:\n        COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING: \"true\"\n      readiness:\n        path: /health?ready=1\n        port: 8080\n        timeoutSeconds: 120\n      commands:\n      - /cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\n\n    image: estafette/estafette-ci-db-migrator:0.1\n    env:\n      COCKROACH_CONNECTION_STRING: postgresql://root@cockroachdb:26257/defaultdb?sslmode=disable\n      ESTAFETTE_LOG_FORMAT: console\n\n  integration-tests:\n    image: golang:1.15.1-alpine3.12\n    env:\n      CGO_ENABLED: 0\n      GOOS: linux\n      GOGC: off\n    commands:\n    - go test -run TestIntegration ./...\n\n  bake:\n    image: extensions/docker:dev\n    action: build\n    inline: |\n      FROM scratch\n\n      LABEL maintainer=\"estafette.io\" \\\n            description=\"The ${ESTAFETTE_GIT_NAME} is the component that handles api requests and starts build jobs using the estafette-ci-builder\"\n\n      COPY ca-certificates.crt /etc/ssl/certs/\n      COPY ${ESTAFETTE_GIT_NAME} /\n\n      ENV GRACEFUL_SHUTDOWN_DELAY_SECONDS=\"20\"\n\n      ENTRYPOINT [\"/${ESTAFETTE_GIT_NAME}\"]\n    repositories:\n    - estafette\n    path: ./publish\n    copy:\n    - /etc/ssl/certs/ca-certificates.crt\n\n  check-container:\n    parallelStages:\n      check-efficiency:\n        image: extensions/docker:dev\n        action: dive\n        repositories:\n        - estafette\n\n      vulnerability-scan:\n        image: extensions/docker:dev\n        action: trivy\n        repositories:\n        - estafette\n\n  push-to-docker-hub:\n    image: extensions/docker:dev\n    action: push\n    repositories:\n    - estafette\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: estafette\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n\nreleases:\n  tooling-estafette:\n    actions:\n    - name: deploy-canary\n    - name: deploy-stable\n    - name: rollback-canary\n      hideBadge: true\n    - name: restart-stable\n      hideBadge: true\n    clone: true\n    stages:\n      deploy:\n        image: extensions/gke:dev\n        namespace: estafette-ci\n        visibility: iap\n        iapOauthClientID: ***\n        iapOauthClientSecret: ***\n        container:\n          repository: estafette\n          env:\n            ESTAFETTE_LOG_FORMAT: v3\n          cpu:\n            request: 158m\n            limit: 316m\n          memory:\n            request: 483Mi\n            limit: 976Mi\n          metrics:\n            port: 9001\n          lifecycle:\n            prestopsleep: false\n        sidecars:\n        - type: openresty\n          image: estafette/openresty-sidecar:1.15.8.2\n          cpu:\n            request: 43m\n            limit: 85m\n          memory:\n            request: 34Mi\n            limit: 68Mi\n        request:\n          timeout: 120s\n          maxbodysize: 128M\n          clientbodybuffersize: 1m\n          proxybuffersnumber: 64\n        hosts:\n        - ***\n        - ***\n        internalhosts:\n        - ***\n        - ***\n        basepath: /api\n        chaosproof: true\n        useGoogleCloudCredentials: true\n        disableServiceAccountKeyRotation: false\n        manifests:\n          files:\n          - gke/ingress.yaml\n          - gke/ingress-github.yaml\n          - gke/ingress-bitbucket.yaml\n          - gke/ingress-slack.yaml\n          - gke/ingress-pubsub.yaml\n          - gke/ingress-cloudsource.yaml\n          - gke/integrations-certificate-secret.yaml\n          data:\n            IntegrationsHostname: ***\n            IntegrationsHostname2: ***\n        volumemounts:\n        - name: client-certs\n          mountpath: /cockroach-certs\n          volume:\n            secret:\n              secretName: estafette-ci.client.api\n              defaultMode: 0400\n        - name: app-secrets\n          mountpath: /secrets\n          volume:\n            secret:\n              secretName: estafette-ci-config-secrets\n        - name: app-configs\n          mountpath: /configs\n          volume:\n            configMap:\n              name: estafette-ci-config-configs\n        - name: app-templates\n          mountpath: /templates\n          volume:\n            configMap:\n              name: estafette-ci-manifest-templates-configs\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: estafette\n        channels:\n        - '#release-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'",
  "manifestWithDefaults": "builder:\n  track: dev\n  os: linux\nlabels:\n  app-group: estafette-ci\n  language: golang\n  team: estafette\n  type: service\nversion:\n  semver:\n    major: 0\n    minor: 1\n    patch: '{{auto}}'\n    labelTemplate: '{{branch}}'\n    releaseBranch: main\ntriggers:\n- pipeline:\n    event: finished\n    status: succeeded\n    name: github.com/estafette/estafette-ci-db-migrator\n    branch: master\n  builds:\n    branch: master\nstages:\n  build:\n    image: golang:1.15.1-alpine3.12\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - go test -short ./...\n    - go build -a -installsuffix cgo -ldflags \"-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP}\n      -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION}\n      -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH}\n      -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\" -o ./publish/${ESTAFETTE_GIT_NAME}\n      .\n    when: status == 'succeeded'\n    env:\n      CGO_ENABLED: \"0\"\n      GOGC: \"false\"\n      GOOS: linux\n  integration-tests-prepare:\n    image: estafette/estafette-ci-db-migrator:0.1\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    env:\n      COCKROACH_CONNECTION_STRING: postgresql://root@cockroachdb:26257/defaultdb?sslmode=disable\n      ESTAFETTE_LOG_FORMAT: console\n    services:\n    - name: cockroachdb\n      image: cockroachdb/cockroach:v20.1.4\n      shell: /bin/bash\n      commands:\n      - /cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\n      multiStage: true\n      when: status == 'succeeded'\n      env:\n        COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING: \"true\"\n      readiness:\n        path: /health?ready=1\n        timeoutSeconds: 120\n        port: 8080\n        protocol: http\n        hostname: cockroachdb\n  integration-tests:\n    image: golang:1.15.1-alpine3.12\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - go test -run TestIntegration ./...\n    when: status == 'succeeded'\n    env:\n      CGO_ENABLED: \"0\"\n      GOGC: \"false\"\n      GOOS: linux\n  bake:\n    image: extensions/docker:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    action: build\n    copy:\n    - /etc/ssl/certs/ca-certificates.crt\n    inline: |\n      FROM scratch\n\n      LABEL maintainer=\"estafette.io\" \\\n            description=\"The ${ESTAFETTE_GIT_NAME} is the component that handles api requests and starts build jobs using the estafette-ci-builder\"\n\n      COPY ca-certificates.crt /etc/ssl/certs/\n      COPY ${ESTAFETTE_GIT_NAME} /\n\n      ENV GRACEFUL_SHUTDOWN_DELAY_SECONDS=\"20\"\n\n      ENTRYPOINT [\"/${ESTAFETTE_GIT_NAME}\"]\n    path: ./publish\n    repositories:\n    - estafette\n  check-container:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: dive\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: trivy\n      repositories:\n      - estafette\n  push-to-docker-hub:\n    image: extensions/docker:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    action: push\n    repositories:\n    - estafette\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: estafette\nreleases:\n  tooling-estafette:\n    builder:\n      track: dev\n      os: linux\n    clone: true\n    actions:\n    - name: deploy-canary\n    - name: deploy-stable\n    - name: rollback-canary\n      hideBadge: true\n    - name: restart-stable\n      hideBadge: true\n    stages:\n      deploy:\n        image: extensions/gke:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded'\n        basepath: /api\n        chaosproof: true\n        container:\n          cpu:\n            limit: 316m\n            request: 158m\n          env:\n            ESTAFETTE_LOG_FORMAT: v3\n          lifecycle:\n            prestopsleep: false\n          memory:\n            limit: 976Mi\n            request: 483Mi\n          metrics:\n            port: 9001\n          repository: estafette\n        disableServiceAccountKeyRotation: false\n        hosts:\n        - ***\n        - ***\n        iapOauthClientID: ***\n        iapOauthClientSecret: ***\n        internalhosts:\n        - ***\n        - ***\n        manifests:\n          data:\n            IntegrationsHostname: ***\n            IntegrationsHostname2: ***\n          files:\n          - gke/ingress.yaml\n          - gke/ingress-github.yaml\n          - gke/ingress-bitbucket.yaml\n          - gke/ingress-slack.yaml\n          - gke/ingress-pubsub.yaml\n          - gke/ingress-cloudsource.yaml\n          - gke/integrations-certificate-secret.yaml\n        namespace: estafette-ci\n        request:\n          clientbodybuffersize: 1m\n          maxbodysize: 128M\n          proxybuffersnumber: 64\n          timeout: 120s\n        sidecars:\n        - cpu:\n            limit: 85m\n            request: 43m\n          image: estafette/openresty-sidecar:1.15.8.2\n          memory:\n            limit: 68Mi\n            request: 34Mi\n          type: openresty\n        useGoogleCloudCredentials: true\n        visibility: iap\n        volumemounts:\n        - mountpath: /cockroach-certs\n          name: client-certs\n          volume:\n            secret:\n              defaultMode: 256\n              secretName: estafette-ci.client.api\n        - mountpath: /secrets\n          name: app-secrets\n          volume:\n            secret:\n              secretName: estafette-ci-config-secrets\n        - mountpath: /configs\n          name: app-configs\n          volume:\n            configMap:\n              name: estafette-ci-config-configs\n        - mountpath: /templates\n          name: app-templates\n          volume:\n            configMap:\n              name: estafette-ci-manifest-templates-configs\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#release-status'\n        workspace: estafette\n",
  "commits": [
    {
      "message": "Fix read directory from templatesPath",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    }
  ],
  "triggers": [
    {
      "pipeline": {
        "event": "finished",
        "status": "succeeded",
        "name": "github.com/estafette/estafette-ci-db-migrator",
        "branch": "master"
      },
      "builds": {
        "branch": "master"
      }
    }
  ],
  "triggerEvents": [
    {
      "git": {
        "event": "push",
        "repository": "github.com/estafette/estafette-ci-api",
        "branch": "fix-templates-path"
      }
    }
  ],
  "insertedAt": "2020-09-18T15:43:14.750833Z",
  "startedAt": "2020-09-18T15:43:16.797406Z",
  "updatedAt": "2020-09-18T15:47:05.652873Z",
  "duration": 228000000000,
  "pendingDuration": 2000000000
}