[{"step":"builder-info","image":null,"duration":0,"logLines":[{"line":1,"timestamp":"2019-12-12T11:39:01.905116313Z","streamType":"stdout","text":"Starting \u001b[1mestafette-ci-builder\u001b[0m version \u001b[1m0.0.621\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2019-12-05T18:16:15Z \u001b[36mgoVersion=\u001b[0mgo1.13.4 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mb784b13bc454c09b71aaa5f73b02023f32a78a30"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"initialize","image":null,"duration":6350387571,"logLines":null,"exitCode":0,"status":"SUCCEEDED","autoInjected":true,"nestedSteps":[{"step":"git-clone","depth":1,"image":{"name":"extensions/git-clone","tag":"dev","isPulled":false,"imageSize":33047711,"pullDuration":2640978084,"isTrusted":true},"duration":3707771825,"logLines":[{"line":1,"timestamp":"2019-12-12T11:39:05.340258388Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-git-clone\u001b[0m version \u001b[1m0.1.75\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2019-11-29T10:18:11Z \u001b[36mgoVersion=\u001b[0mgo1.13 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mcaa300dc8723758392d39e04cf13f268246c1b4f\n"},{"line":2,"timestamp":"2019-12-12T11:39:05.340266141Z","streamType":"stdout","text":"Unmarshalling injected github api token credentials\n"},{"line":3,"timestamp":"2019-12-12T11:39:05.340268134Z","streamType":"stdout","text":"Cloning git repository estafette-ci-manifest to branch master and revision ba7e2bee70a7ac6cfe132a6d00f407e7ebbb0a21 with shallow clone is true and depth 50...\n"},{"line":4,"timestamp":"2019-12-12T11:39:05.340269681Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e git clone --depth=50 --branch=master https://x-access-token:v1.60a1dcfe8c6d0095c36ca0cde3fdd283a425e0bf@github.com/estafette/estafette-ci-manifest /estafette-work\u001b[0m\n"},{"line":5,"timestamp":"2019-12-12T11:39:05.340271143Z","streamType":"stderr","text":"Cloning into '/estafette-work'...\n"},{"line":6,"timestamp":"2019-12-12T11:39:07.989629334Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e git checkout --quiet --force ba7e2bee70a7ac6cfe132a6d00f407e7ebbb0a21\u001b[0m\n"},{"line":7,"timestamp":"2019-12-12T11:39:07.995203794Z","streamType":"stdout","text":"Finished cloning git repository estafette-ci-manifest to branch master and revision ba7e2bee70a7ac6cfe132a6d00f407e7ebbb0a21 with shallow clone is true and depth 50\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"set-pending-build-status","depth":1,"image":{"name":"extensions/github-status","tag":"dev","isPulled":false,"imageSize":12712386,"pullDuration":1936572620,"isTrusted":true},"duration":1965751472,"logLines":[{"line":1,"timestamp":"2019-12-12T11:39:04.724037792Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-github-status\u001b[0m version \u001b[1m0.1.43\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2019-11-29T10:32:17Z \u001b[36mgoVersion=\u001b[0mgo1.13 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0me8c4cac6525c155a6a437d320d4d100db04f7dbd\n"},{"line":2,"timestamp":"2019-12-12T11:39:04.724046683Z","streamType":"stdout","text":"Setting logs url https://estafette.travix.com/pipelines/github.com/estafette/estafette-ci-manifest/builds/511444054629482502/logs\n"},{"line":3,"timestamp":"2019-12-12T11:39:05.53121073Z","streamType":"stdout","text":"Received successful response for 'https://api.github.com/repos/estafette/estafette-ci-manifest/statuses/ba7e2bee70a7ac6cfe132a6d00f407e7ebbb0a21' Github api call with status code 201\n"},{"line":4,"timestamp":"2019-12-12T11:39:05.531221443Z","streamType":"stdout","text":"Finished estafette-extension-github-status...\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true}]},{"step":"build","image":{"name":"golang","tag":"1.13.0-alpine3.10","isPulled":false,"imageSize":359127383,"pullDuration":7335224019},"duration":7339569682,"logLines":[{"line":1,"timestamp":"2019-12-12T11:39:17.784652682Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e exec go test ./...\u001b[0m\n"},{"line":2,"timestamp":"2019-12-12T11:39:17.893810405Z","streamType":"stderr","text":"go: downloading gopkg.in/yaml.v2 v2.2.2\n"},{"line":3,"timestamp":"2019-12-12T11:39:17.893859516Z","streamType":"stderr","text":"go: downloading github.com/rs/zerolog v1.8.0\n"},{"line":4,"timestamp":"2019-12-12T11:39:17.893862449Z","streamType":"stderr","text":"go: downloading github.com/robfig/cron v0.0.0-20180505203441-b41be1df6967\n"},{"line":5,"timestamp":"2019-12-12T11:39:17.898510534Z","streamType":"stderr","text":"go: downloading github.com/stretchr/testify v1.1.4\n"},{"line":6,"timestamp":"2019-12-12T11:39:17.91076146Z","streamType":"stderr","text":"go: extracting github.com/robfig/cron v0.0.0-20180505203441-b41be1df6967\n"},{"line":7,"timestamp":"2019-12-12T11:39:17.913060017Z","streamType":"stderr","text":"go: extracting gopkg.in/yaml.v2 v2.2.2\n"},{"line":8,"timestamp":"2019-12-12T11:39:17.972211819Z","streamType":"stderr","text":"go: extracting github.com/stretchr/testify v1.1.4\n"},{"line":9,"timestamp":"2019-12-12T11:39:17.980058522Z","streamType":"stderr","text":"go: extracting github.com/rs/zerolog v1.8.0\n"},{"line":10,"timestamp":"2019-12-12T11:39:17.981094438Z","streamType":"stderr","text":"go: downloading github.com/davecgh/go-spew v0.0.0-20170711183451-adab96458c51\n"},{"line":11,"timestamp":"2019-12-12T11:39:17.981105849Z","streamType":"stderr","text":"go: downloading github.com/pmezard/go-difflib v1.0.0\n"},{"line":12,"timestamp":"2019-12-12T11:39:17.990646581Z","streamType":"stderr","text":"go: extracting github.com/pmezard/go-difflib v1.0.0\n"},{"line":13,"timestamp":"2019-12-12T11:39:18.02759742Z","streamType":"stderr","text":"go: extracting github.com/davecgh/go-spew v0.0.0-20170711183451-adab96458c51\n"},{"line":14,"timestamp":"2019-12-12T11:39:18.035722644Z","streamType":"stderr","text":"go: finding github.com/rs/zerolog v1.8.0\n"},{"line":15,"timestamp":"2019-12-12T11:39:18.035735546Z","streamType":"stderr","text":"go: finding github.com/robfig/cron v0.0.0-20180505203441-b41be1df6967\n"},{"line":16,"timestamp":"2019-12-12T11:39:18.037923948Z","streamType":"stderr","text":"go: finding gopkg.in/yaml.v2 v2.2.2\n"},{"line":17,"timestamp":"2019-12-12T11:39:18.072349004Z","streamType":"stderr","text":"go: finding github.com/stretchr/testify v1.1.4\n"},{"line":18,"timestamp":"2019-12-12T11:39:18.083279752Z","streamType":"stderr","text":"go: finding github.com/pmezard/go-difflib v1.0.0\n"},{"line":19,"timestamp":"2019-12-12T11:39:18.086404509Z","streamType":"stderr","text":"go: finding github.com/davecgh/go-spew v0.0.0-20170711183451-adab96458c51\n"},{"line":20,"timestamp":"2019-12-12T11:39:22.576528676Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-non-strict-manifest.yaml file...\"}\n"},{"line":21,"timestamp":"2019-12-12T11:39:22.576543601Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":22,"timestamp":"2019-12-12T11:39:22.576546468Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":23,"timestamp":"2019-12-12T11:39:22.576547308Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":24,"timestamp":"2019-12-12T11:39:22.576548288Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":25,"timestamp":"2019-12-12T11:39:22.576549045Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":26,"timestamp":"2019-12-12T11:39:22.576576243Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":27,"timestamp":"2019-12-12T11:39:22.576592645Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":28,"timestamp":"2019-12-12T11:39:22.576593299Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":29,"timestamp":"2019-12-12T11:39:22.576593834Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":30,"timestamp":"2019-12-12T11:39:22.576594425Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":31,"timestamp":"2019-12-12T11:39:22.576594956Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":32,"timestamp":"2019-12-12T11:39:22.576600003Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":33,"timestamp":"2019-12-12T11:39:22.576601379Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":34,"timestamp":"2019-12-12T11:39:22.576602386Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":35,"timestamp":"2019-12-12T11:39:22.576603131Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":36,"timestamp":"2019-12-12T11:39:22.576604094Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":37,"timestamp":"2019-12-12T11:39:22.576604971Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":38,"timestamp":"2019-12-12T11:39:22.57660612Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":39,"timestamp":"2019-12-12T11:39:22.576606899Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":40,"timestamp":"2019-12-12T11:39:22.576607802Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":41,"timestamp":"2019-12-12T11:39:22.576617711Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":42,"timestamp":"2019-12-12T11:39:22.576618646Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":43,"timestamp":"2019-12-12T11:39:22.576619446Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":44,"timestamp":"2019-12-12T11:39:22.57662092Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":45,"timestamp":"2019-12-12T11:39:22.576621746Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":46,"timestamp":"2019-12-12T11:39:22.576622648Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":47,"timestamp":"2019-12-12T11:39:22.576635543Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":48,"timestamp":"2019-12-12T11:39:22.576644906Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":49,"timestamp":"2019-12-12T11:39:22.576645746Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":50,"timestamp":"2019-12-12T11:39:22.576646581Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":51,"timestamp":"2019-12-12T11:39:22.576650669Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":52,"timestamp":"2019-12-12T11:39:22.576654383Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":53,"timestamp":"2019-12-12T11:39:22.5767024Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":54,"timestamp":"2019-12-12T11:39:22.576703845Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":55,"timestamp":"2019-12-12T11:39:22.576704573Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":56,"timestamp":"2019-12-12T11:39:22.576714514Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":57,"timestamp":"2019-12-12T11:39:22.576715379Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":58,"timestamp":"2019-12-12T11:39:22.576716248Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":59,"timestamp":"2019-12-12T11:39:22.576717006Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":60,"timestamp":"2019-12-12T11:39:22.576717897Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":61,"timestamp":"2019-12-12T11:39:22.576718655Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":62,"timestamp":"2019-12-12T11:39:22.576719537Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":63,"timestamp":"2019-12-12T11:39:22.576734072Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest-with-triggers.yaml file...\"}\n"},{"line":64,"timestamp":"2019-12-12T11:39:22.576739811Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest-with-triggers.yaml file successfully\"}\n"},{"line":65,"timestamp":"2019-12-12T11:39:22.576740671Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest-with-triggers.yaml file...\"}\n"},{"line":66,"timestamp":"2019-12-12T11:39:22.576741484Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest-with-triggers.yaml file successfully\"}\n"},{"line":67,"timestamp":"2019-12-12T11:39:22.576742279Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest-with-triggers.yaml file...\"}\n"},{"line":68,"timestamp":"2019-12-12T11:39:22.576748029Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest-with-triggers.yaml file successfully\"}\n"},{"line":69,"timestamp":"2019-12-12T11:39:22.576748808Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":70,"timestamp":"2019-12-12T11:39:22.576749593Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":71,"timestamp":"2019-12-12T11:39:22.576754027Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":72,"timestamp":"2019-12-12T11:39:22.57675485Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":73,"timestamp":"2019-12-12T11:39:22.576758383Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":74,"timestamp":"2019-12-12T11:39:22.576766871Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":75,"timestamp":"2019-12-12T11:39:22.576770688Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":76,"timestamp":"2019-12-12T11:39:22.576775742Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":77,"timestamp":"2019-12-12T11:39:22.576776549Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":78,"timestamp":"2019-12-12T11:39:22.576780203Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":79,"timestamp":"2019-12-12T11:39:22.576904012Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":80,"timestamp":"2019-12-12T11:39:22.576909278Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":81,"timestamp":"2019-12-12T11:39:22.576913098Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":82,"timestamp":"2019-12-12T11:39:22.576916869Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":83,"timestamp":"2019-12-12T11:39:22.577180565Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":84,"timestamp":"2019-12-12T11:39:22.577198629Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":85,"timestamp":"2019-12-12T11:39:22.577199577Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":86,"timestamp":"2019-12-12T11:39:22.577200475Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":87,"timestamp":"2019-12-12T11:39:22.577201295Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":88,"timestamp":"2019-12-12T11:39:22.577202578Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2019-12-12T11:39:22Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":89,"timestamp":"2019-12-12T11:39:22.577203733Z","streamType":"stdout","text":"--- FAIL: TestEstafetteTriggerReleaseActionSetDefaults (0.00s)\n"},{"line":90,"timestamp":"2019-12-12T11:39:22.577204476Z","streamType":"stdout","text":"    --- FAIL: TestEstafetteTriggerReleaseActionSetDefaults/SetsVersionToLatestIfEmpty (0.00s)\n"},{"line":91,"timestamp":"2019-12-12T11:39:22.577205598Z","streamType":"stdout","text":"        assertions.go:237: \r                        \r\tError Trace:\ttrigger_setDefaults_test.go:145\n"},{"line":92,"timestamp":"2019-12-12T11:39:22.577206482Z","streamType":"stdout","text":"            \r\tError:\t\tNot equal: \"latest\" (expected)\n"},{"line":93,"timestamp":"2019-12-12T11:39:22.577207783Z","streamType":"stdout","text":"            \t        != \"same\" (actual)\n"},{"line":94,"timestamp":"2019-12-12T11:39:22.57720857Z","streamType":"stdout","text":"            \r\n"},{"line":95,"timestamp":"2019-12-12T11:39:22.577213798Z","streamType":"stdout","text":"    --- FAIL: TestEstafetteTriggerReleaseActionSetDefaults/SetsVersionToSameIfPipelineTriggerIsTheSelfPipeline (0.00s)\n"},{"line":96,"timestamp":"2019-12-12T11:39:22.577218194Z","streamType":"stdout","text":"        assertions.go:237: \r                        \r\tError Trace:\ttrigger_setDefaults_test.go:181\n"},{"line":97,"timestamp":"2019-12-12T11:39:22.577218771Z","streamType":"stdout","text":"            \r\tError:\t\tNot equal: \"same\" (expected)\n"},{"line":98,"timestamp":"2019-12-12T11:39:22.577219344Z","streamType":"stdout","text":"            \t        != \"\" (actual)\n"},{"line":99,"timestamp":"2019-12-12T11:39:22.577219982Z","streamType":"stdout","text":"            \r\n"},{"line":100,"timestamp":"2019-12-12T11:39:22.577220584Z","streamType":"stdout","text":"FAIL\n"},{"line":101,"timestamp":"2019-12-12T11:39:22.577221349Z","streamType":"stdout","text":"FAIL\tgithub.com/estafette/estafette-ci-manifest\t0.052s\n"},{"line":102,"timestamp":"2019-12-12T11:39:22.577222156Z","streamType":"stdout","text":"FAIL\n"},{"line":10000,"timestamp":"2019-12-12T11:39:22.932736169Z","streamType":"stderr","text":"Failed with exit code: 1"}],"exitCode":0,"status":"FAILED"},{"step":"tag-revision","image":{"name":"golang","tag":"1.13.0-alpine3.10","isPulled":false,"imageSize":0,"pullDuration":0},"duration":0,"logLines":null,"exitCode":0,"status":"SKIPPED"},{"step":"slack-notify","image":{"name":"extensions/slack-build-status","tag":"dev","isPulled":false,"imageSize":12721143,"pullDuration":1802293254,"isTrusted":true},"duration":1228561647,"logLines":[{"line":1,"timestamp":"2019-12-12T11:39:25.460907322Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-slack-build-status\u001b[0m version \u001b[1m0.1.63\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2019-11-28T01:32:04Z \u001b[36mgoVersion=\u001b[0mgo1.13 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m6b6164702f2f94beef2f9019845ec40bff0ebcf2\n"},{"line":2,"timestamp":"2019-12-12T11:39:25.460916939Z","streamType":"stdout","text":"Unmarshalling credentials...\n"},{"line":3,"timestamp":"2019-12-12T11:39:25.461014963Z","streamType":"stdout","text":"Checking if credential estafette exists...\n"},{"line":4,"timestamp":"2019-12-12T11:39:25.461018038Z","streamType":"stdout","text":"Checking credential slack-webhook-estafette for workspace estafette...\n"},{"line":5,"timestamp":"2019-12-12T11:39:25.461018929Z","streamType":"stdout","text":"Found credential slack-webhook-estafette for workspace estafette\n"},{"line":6,"timestamp":"2019-12-12T11:39:25.690751609Z","streamType":"stdout","text":"Finished estafette-extension-slack-build-status...\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"set-build-status","image":null,"duration":1418686534,"logLines":[{"line":1,"timestamp":"2019-12-12T11:39:26.680683458Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-github-status\u001b[0m version \u001b[1m0.1.43\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2019-11-29T10:32:17Z \u001b[36mgoVersion=\u001b[0mgo1.13 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0me8c4cac6525c155a6a437d320d4d100db04f7dbd\n"},{"line":2,"timestamp":"2019-12-12T11:39:26.680691759Z","streamType":"stdout","text":"Setting logs url https://estafette.travix.com/pipelines/github.com/estafette/estafette-ci-manifest/builds/511444054629482502/logs\n"},{"line":3,"timestamp":"2019-12-12T11:39:27.119020018Z","streamType":"stdout","text":"Received successful response for 'https://api.github.com/repos/estafette/estafette-ci-manifest/statuses/ba7e2bee70a7ac6cfe132a6d00f407e7ebbb0a21' Github api call with status code 201\n"},{"line":4,"timestamp":"2019-12-12T11:39:27.119049785Z","streamType":"stdout","text":"Finished estafette-extension-github-status...\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true}]