{"id":"556694877523476491","repoSource":"github.com","repoOwner":"estafette","repoName":"estafette-ci-manifest","repoBranch":"master","repoRevision":"54a36f9768eeaf811d75a35f64e4725fb0662cdf","buildVersion":"0.1.152","buildStatus":"succeeded","labels":[{"key":"app-group","value":"estafette-ci"},{"key":"language","value":"golang"},{"key":"team","value":"estafette"},{"key":"type","value":"library"}],"manifest":"# selects the dev track for builder in order to dogfood estafette's components\nbuilder:\n  track: dev\n\n# these turn into ESTAFETTE_LABEL_... envvars, automatically injected into all pipeline steps\nlabels:\n  app-group: estafette-ci\n  type: library\n  team: estafette\n  language: golang\n\n# generates a 0.0.x-\u003cbranch\u003e version made available as ESTAFETTE_BUILD_VERSION envvar, automatically injected into all pipeline steps\nversion:\n  semver:\n    major: 0\n    minor: 1\n\n# global environments variables that are automatically injected into all pipeline steps and can be overridden by defining an envvar in a pipeline step with the same name\nenv:\n  VAR1: somevalue\n  VAR2: another value\n\n# pipeline stages to be executed sequentially; for each step the 'when' is evaluated to see whether it should be executed or skipped\nstages:\n  build:\n    image: golang:1.14.0-alpine3.11\n    env:\n      CGO_ENABLED: 0\n      GOOS: linux\n    commands:\n    - go test ./...\n\n  tag-revision:\n    image: golang:1.14.0-alpine3.11\n    commands:\n    - apk add git\n    - git tag v${ESTAFETTE_BUILD_VERSION}\n    - git push origin v${ESTAFETTE_BUILD_VERSION}\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: estafette\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n","manifestWithDefaults":"builder:\n  track: dev\n  os: linux\nlabels:\n  app-group: estafette-ci\n  language: golang\n  team: estafette\n  type: library\nversion:\n  semver:\n    major: 0\n    minor: 1\n    patch: '{{auto}}'\n    labelTemplate: '{{branch}}'\n    releaseBranch: master\nenv:\n  VAR1: somevalue\n  VAR2: another value\nstages:\n  build:\n    image: golang:1.14.0-alpine3.11\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - go test ./...\n    when: status == 'succeeded'\n    env:\n      CGO_ENABLED: \"0\"\n      GOOS: linux\n  tag-revision:\n    image: golang:1.14.0-alpine3.11\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - apk add git\n    - git tag v${ESTAFETTE_BUILD_VERSION}\n    - git push origin v${ESTAFETTE_BUILD_VERSION}\n    when: status == 'succeeded'\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: estafette\n","commits":[{"message":"remove debug logs from ReadManifest (too noisy)","author":{"email":"jsalverda@travix.com","name":"Jorrit Salverda","username":"JorritSalverda"}}],"triggerEvents":[{"git":{"event":"push","repository":"github.com/estafette/estafette-ci-manifest","branch":"master"}}],"insertedAt":"2020-05-20T07:36:34.165604Z","updatedAt":"2020-05-20T07:37:21.550967Z","duration":47000000000,"pendingDuration":0}
