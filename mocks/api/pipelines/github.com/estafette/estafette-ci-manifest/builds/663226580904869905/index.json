{
  "id": "663226580904869905",
  "repoSource": "github.com",
  "repoOwner": "estafette",
  "repoName": "estafette-ci-manifest",
  "repoBranch": "main",
  "repoRevision": "ec9991f012f1ec7c5a06f5dbcd695fe9acac4633",
  "buildVersion": "0.1.190",
  "buildStatus": "succeeded",
  "labels": [
    {
      "key": "app-group",
      "value": "estafette-ci"
    },
    {
      "key": "language",
      "value": "golang"
    },
    {
      "key": "team",
      "value": "estafette"
    },
    {
      "key": "type",
      "value": "library"
    }
  ],
  "manifest": "# selects the dev track for builder in order to dogfood estafette's components\nbuilder:\n  track: dev\n\n# these turn into ESTAFETTE_LABEL_... envvars, automatically injected into all pipeline steps\nlabels:\n  app-group: estafette-ci\n  type: library\n  team: estafette\n  language: golang\n\n# generates a 0.0.x-\u003cbranch\u003e version made available as ESTAFETTE_BUILD_VERSION envvar, automatically injected into all pipeline steps\nversion:\n  semver:\n    major: 0\n    minor: 1\n    releaseBranch: main\n\n# global environments variables that are automatically injected into all pipeline steps and can be overridden by defining an envvar in a pipeline step with the same name\nenv:\n  VAR1: somevalue\n  VAR2: another value\n\n# pipeline stages to be executed sequentially; for each step the 'when' is evaluated to see whether it should be executed or skipped\nstages:\n  build:\n    image: golang:1.16-alpine\n    env:\n      CGO_ENABLED: 0\n      GOOS: linux\n    commands:\n    - go test ./...\n\n  tag-revision:\n    image: golang:1.16-alpine\n    commands:\n    - apk add git\n    - git tag v${ESTAFETTE_BUILD_VERSION}\n    - git push origin v${ESTAFETTE_BUILD_VERSION}\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: estafette\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n",
  "manifestWithDefaults": "builder:\n  track: dev\n  os: linux\n  type: docker\nlabels:\n  app-group: estafette-ci\n  language: golang\n  team: estafette\n  type: library\nversion:\n  semver:\n    major: 0\n    minor: 1\n    patch: '{{auto}}'\n    labelTemplate: '{{branch}}'\n    releaseBranch: main\nenv:\n  VAR1: somevalue\n  VAR2: another value\nstages:\n  build:\n    image: golang:1.16-alpine\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - go test ./...\n    when: status == 'succeeded'\n    env:\n      CGO_ENABLED: \"0\"\n      GOOS: linux\n  tag-revision:\n    image: golang:1.16-alpine\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - apk add git\n    - git tag v${ESTAFETTE_BUILD_VERSION}\n    - git push origin v${ESTAFETTE_BUILD_VERSION}\n    when: status == 'succeeded'\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: estafette\n",
  "commits": [
    {
      "message": "add bots definition to manifest to act on any github or bitbucket event",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    },
    {
      "message": "add builder, clone and triggers to bots",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    },
    {
      "message": "add bitbucket and github triggers instead of events property on bots to reuse trigger system",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    },
    {
      "message": "match github and bitbucket events on repository by default if the event is repo specific",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    },
    {
      "message": "set bot on botaction to trigger correct bot",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    },
    {
      "message": "add event body property to bitbucket/github events",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    }
  ],
  "triggerEvents": [
    {
      "fired": true,
      "git": {
        "event": "push",
        "repository": "github.com/estafette/estafette-ci-manifest",
        "branch": "main"
      }
    }
  ],
  "insertedAt": "2021-05-31T14:24:49.972942Z",
  "startedAt": "2021-05-31T14:25:03.378744Z",
  "updatedAt": "2021-05-31T14:25:39.835556Z",
  "duration": 36000000000,
  "pendingDuration": 13000000000,
  "organizations": [
    {
      "name": "Estafette"
    }
  ]
}