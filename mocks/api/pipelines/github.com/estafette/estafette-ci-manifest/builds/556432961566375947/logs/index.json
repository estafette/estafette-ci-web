[{"step":"builder-info","image":null,"duration":0,"logLines":[{"line":1,"timestamp":"2020-05-19T09:24:26.440290984Z","streamType":"stdout","text":"Starting \u001b[1mestafette-ci-builder\u001b[0m version \u001b[1m0.0.662\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-05-15T13:33:24Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mbe85b6d2373bcf054c5adf715896d02a5f17303b"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"initialize","image":null,"duration":6653275531,"logLines":null,"exitCode":0,"status":"SUCCEEDED","autoInjected":true,"nestedSteps":[{"step":"envvars","depth":1,"image":{"name":"extensions/envvars","tag":"dev","isPulled":false,"imageSize":11158339,"pullDuration":2349141998},"duration":1673135969,"logLines":[{"line":1,"timestamp":"2020-05-19T09:24:30.131884877Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-envvars\u001b[0m version \u001b[1m0.1.15\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:29:44Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0ma1eec2828262801647117796b44ee95ed842ef2f\n"},{"line":2,"timestamp":"2020-05-19T09:24:30.131897475Z","streamType":"stdout","text":"All available estafette environment variables; the _DNS_SAFE suffixed ones can be used to set dns labels. Since leading digits are not allowed some of them are empty.\n"},{"line":3,"timestamp":"2020-05-19T09:24:30.131900872Z","streamType":"stdout","text":"ESTAFETTE_BUILD_DATETIME: 2020-05-19T09:24:26Z\n"},{"line":4,"timestamp":"2020-05-19T09:24:30.131902314Z","streamType":"stdout","text":"ESTAFETTE_BUILD_DATETIME_DNS_SAFE: t09-24-26z\n"},{"line":5,"timestamp":"2020-05-19T09:24:30.131903895Z","streamType":"stdout","text":"ESTAFETTE_BUILD_ID: 556432961566375947\n"},{"line":6,"timestamp":"2020-05-19T09:24:30.131906741Z","streamType":"stdout","text":"ESTAFETTE_BUILD_ID_DNS_SAFE: \n"},{"line":7,"timestamp":"2020-05-19T09:24:30.131908308Z","streamType":"stdout","text":"ESTAFETTE_BUILD_STATUS: succeeded\n"},{"line":8,"timestamp":"2020-05-19T09:24:30.131909723Z","streamType":"stdout","text":"ESTAFETTE_BUILD_STATUS_DNS_SAFE: succeeded\n"},{"line":9,"timestamp":"2020-05-19T09:24:30.131911404Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION: 0.1.150\n"},{"line":10,"timestamp":"2020-05-19T09:24:30.131912528Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_DNS_SAFE: \n"},{"line":11,"timestamp":"2020-05-19T09:24:30.131914057Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_LABEL: master\n"},{"line":12,"timestamp":"2020-05-19T09:24:30.131915543Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_LABEL_DNS_SAFE: master\n"},{"line":13,"timestamp":"2020-05-19T09:24:30.131916623Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MAJOR: 0\n"},{"line":14,"timestamp":"2020-05-19T09:24:30.131917752Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MAJOR_DNS_SAFE: \n"},{"line":15,"timestamp":"2020-05-19T09:24:30.131918798Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MINOR: 1\n"},{"line":16,"timestamp":"2020-05-19T09:24:30.131920105Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MINOR_DNS_SAFE: \n"},{"line":17,"timestamp":"2020-05-19T09:24:30.131921267Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_PATCH: 150\n"},{"line":18,"timestamp":"2020-05-19T09:24:30.131922511Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_PATCH_DNS_SAFE: \n"},{"line":19,"timestamp":"2020-05-19T09:24:30.131924751Z","streamType":"stdout","text":"ESTAFETTE_CI_SERVER_BASE_URL: https://estafette.***.com/\n"},{"line":20,"timestamp":"2020-05-19T09:24:30.131926712Z","streamType":"stdout","text":"ESTAFETTE_CI_SERVER_BASE_URL_DNS_SAFE: https-estafette-***-com\n"},{"line":21,"timestamp":"2020-05-19T09:24:30.131928224Z","streamType":"stdout","text":"ESTAFETTE_EXTENSION_CUSTOM_PROPERTIES: null\n"},{"line":22,"timestamp":"2020-05-19T09:24:30.131929677Z","streamType":"stdout","text":"ESTAFETTE_EXTENSION_CUSTOM_PROPERTIES_YAML: {}\n"},{"line":23,"timestamp":"2020-05-19T09:24:30.131930943Z","streamType":"stdout","text":"\n"},{"line":24,"timestamp":"2020-05-19T09:24:30.131938456Z","streamType":"stdout","text":"ESTAFETTE_GIT_BRANCH: master\n"},{"line":25,"timestamp":"2020-05-19T09:24:30.131940152Z","streamType":"stdout","text":"ESTAFETTE_GIT_BRANCH_DNS_SAFE: master\n"},{"line":26,"timestamp":"2020-05-19T09:24:30.131941843Z","streamType":"stdout","text":"ESTAFETTE_GIT_FULLNAME: estafette/estafette-ci-manifest\n"},{"line":27,"timestamp":"2020-05-19T09:24:30.131943628Z","streamType":"stdout","text":"ESTAFETTE_GIT_FULLNAME_DNS_SAFE: estafette-estafette-ci-manifest\n"},{"line":28,"timestamp":"2020-05-19T09:24:30.131945069Z","streamType":"stdout","text":"ESTAFETTE_GIT_NAME: estafette-ci-manifest\n"},{"line":29,"timestamp":"2020-05-19T09:24:30.13195286Z","streamType":"stdout","text":"ESTAFETTE_GIT_NAME_DNS_SAFE: estafette-ci-manifest\n"},{"line":30,"timestamp":"2020-05-19T09:24:30.131954567Z","streamType":"stdout","text":"ESTAFETTE_GIT_OWNER: estafette\n"},{"line":31,"timestamp":"2020-05-19T09:24:30.13195571Z","streamType":"stdout","text":"ESTAFETTE_GIT_OWNER_DNS_SAFE: estafette\n"},{"line":32,"timestamp":"2020-05-19T09:24:30.131957346Z","streamType":"stdout","text":"ESTAFETTE_GIT_REVISION: 79167d6cf8d27534b807a87afcf09fa853144a0e\n"},{"line":33,"timestamp":"2020-05-19T09:24:30.131986753Z","streamType":"stdout","text":"ESTAFETTE_GIT_REVISION_DNS_SAFE: d6cf8d27534b807a87afcf09fa853144a0e\n"},{"line":34,"timestamp":"2020-05-19T09:24:30.131988089Z","streamType":"stdout","text":"ESTAFETTE_GIT_SOURCE: github.com\n"},{"line":35,"timestamp":"2020-05-19T09:24:30.131989191Z","streamType":"stdout","text":"ESTAFETTE_GIT_SOURCE_DNS_SAFE: github-com\n"},{"line":36,"timestamp":"2020-05-19T09:24:30.131990206Z","streamType":"stdout","text":"ESTAFETTE_LABEL_APP_GROUP: estafette-ci\n"},{"line":37,"timestamp":"2020-05-19T09:24:30.131991398Z","streamType":"stdout","text":"ESTAFETTE_LABEL_APP_GROUP_DNS_SAFE: estafette-ci\n"},{"line":38,"timestamp":"2020-05-19T09:24:30.132000947Z","streamType":"stdout","text":"ESTAFETTE_LABEL_LANGUAGE: golang\n"},{"line":39,"timestamp":"2020-05-19T09:24:30.13200221Z","streamType":"stdout","text":"ESTAFETTE_LABEL_LANGUAGE_DNS_SAFE: golang\n"},{"line":40,"timestamp":"2020-05-19T09:24:30.132003464Z","streamType":"stdout","text":"ESTAFETTE_LABEL_TEAM: estafette-team\n"},{"line":41,"timestamp":"2020-05-19T09:24:30.132005249Z","streamType":"stdout","text":"ESTAFETTE_LABEL_TEAM_DNS_SAFE: estafette-team\n"},{"line":42,"timestamp":"2020-05-19T09:24:30.132006964Z","streamType":"stdout","text":"ESTAFETTE_LABEL_TYPE: library\n"},{"line":43,"timestamp":"2020-05-19T09:24:30.132008835Z","streamType":"stdout","text":"ESTAFETTE_LABEL_TYPE_DNS_SAFE: library\n"},{"line":44,"timestamp":"2020-05-19T09:24:30.132010675Z","streamType":"stdout","text":"ESTAFETTE_LOG_FORMAT: console\n"},{"line":45,"timestamp":"2020-05-19T09:24:30.132089899Z","streamType":"stdout","text":"ESTAFETTE_STAGES: [{\"Name\":\"initialize\",\"ContainerImage\":\"\",\"Shell\":\"\",\"WorkingDirectory\":\"\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":[{\"Name\":\"git-clone\",\"ContainerImage\":\"extensions/git-clone:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":null},{\"Name\":\"set-pending-build-status\",\"ContainerImage\":\"extensions/github-status:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"status\":\"pending\"}},{\"Name\":\"envvars\",\"ContainerImage\":\"extensions/envvars:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":null}],\"Services\":null,\"CustomProperties\":null},{\"Name\":\"build\",\"ContainerImage\":\"golang:1.14.0-alpine3.11\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":[\"go test ./...\"],\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":{\"CGO_ENABLED\":\"0\",\"GOOS\":\"linux\"},\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"tag-revision\",\"ContainerImage\":\"golang:1.14.0-alpine3.11\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":[\"apk add git\",\"git tag v0.1.150\",\"git push origin v0.1.150\"],\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"slack-notify\",\"ContainerImage\":\"extensions/slack-build-status:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded' || status == 'failed'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"channels\":[\"#build-status\"],\"workspace\":\"estafette\"}},{\"Name\":\"set-build-status\",\"ContainerImage\":\"extensions/github-status:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded' || status == 'failed'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":null}]\n"},{"line":46,"timestamp":"2020-05-19T09:24:30.13209267Z","streamType":"stdout","text":"ESTAFETTE_STAGES_DNS_SAFE: name-initialize-containerimage-shell-workingdirectory-commands\n"},{"line":47,"timestamp":"2020-05-19T09:24:30.132094287Z","streamType":"stdout","text":"ESTAFETTE_STAGE_NAME: envvars\n"},{"line":48,"timestamp":"2020-05-19T09:24:30.132589436Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_BRANCH: master\n"},{"line":49,"timestamp":"2020-05-19T09:24:30.132594481Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_BRANCH_DNS_SAFE: master\n"},{"line":50,"timestamp":"2020-05-19T09:24:30.132596746Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_EVENT: push\n"},{"line":51,"timestamp":"2020-05-19T09:24:30.132598736Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_EVENT_DNS_SAFE: push\n"},{"line":52,"timestamp":"2020-05-19T09:24:30.13260163Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_REPOSITORY: github.com/estafette/estafette-ci-manifest\n"},{"line":53,"timestamp":"2020-05-19T09:24:30.132604294Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_REPOSITORY_DNS_SAFE: github-com-estafette-estafette-ci-manifest\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"set-pending-build-status","depth":1,"image":{"name":"extensions/github-status","tag":"dev","isPulled":false,"imageSize":12649209,"pullDuration":2767770788,"isTrusted":true},"duration":2091332713,"logLines":[{"line":1,"timestamp":"2020-05-19T09:24:30.322886963Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-github-status\u001b[0m version \u001b[1m0.1.46\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:32:11Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m6db9d43ca763f9104293785ed2c594320dd7946a\n"},{"line":2,"timestamp":"2020-05-19T09:24:30.322897127Z","streamType":"stdout","text":"Setting logs url https://estafette.***.com/pipelines/github.com/estafette/estafette-ci-manifest/builds/556432961566375947/logs\n"},{"line":3,"timestamp":"2020-05-19T09:24:31.019865851Z","streamType":"stdout","text":"Received successful response for 'https://api.github.com/repos/estafette/estafette-ci-manifest/statuses/79167d6cf8d27534b807a87afcf09fa853144a0e' Github api call with status code 201\n"},{"line":4,"timestamp":"2020-05-19T09:24:31.019877564Z","streamType":"stdout","text":"Finished estafette-extension-github-status...\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"git-clone","depth":1,"image":{"name":"extensions/git-clone","tag":"dev","isPulled":false,"imageSize":33645729,"pullDuration":2344519189,"isTrusted":true},"duration":4301993084,"logLines":[{"line":1,"timestamp":"2020-05-19T09:24:30.265575381Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-git-clone\u001b[0m version \u001b[1m0.1.81\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-04-01T15:00:17Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m50245b030d6c4f5911a8332aeef550ca39da8115\n"},{"line":2,"timestamp":"2020-05-19T09:24:30.265580797Z","streamType":"stdout","text":"Unmarshalling injected github api token credentials\n"},{"line":3,"timestamp":"2020-05-19T09:24:30.265584944Z","streamType":"stdout","text":"Cloning git repository estafette-ci-manifest to branch master and revision 79167d6cf8d27534b807a87afcf09fa853144a0e with shallow clone is true and depth 50...\n"},{"line":4,"timestamp":"2020-05-19T09:24:30.265589114Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e git clone --depth=50 --branch=master https://x-access-token:***@github.com/estafette/estafette-ci-manifest /estafette-work\u001b[0m\n"},{"line":5,"timestamp":"2020-05-19T09:24:30.266837329Z","streamType":"stderr","text":"Cloning into '/estafette-work'...\n"},{"line":6,"timestamp":"2020-05-19T09:24:32.835482297Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e git checkout --quiet --force 79167d6cf8d27534b807a87afcf09fa853144a0e\u001b[0m\n"},{"line":7,"timestamp":"2020-05-19T09:24:32.841829226Z","streamType":"stdout","text":"Finished cloning git repository estafette-ci-manifest to branch master and revision 79167d6cf8d27534b807a87afcf09fa853144a0e with shallow clone is true and depth 50\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true}]},{"step":"build","image":{"name":"golang","tag":"1.14.0-alpine3.11","isPulled":false,"imageSize":369193709,"pullDuration":7999985009},"duration":13864899233,"logLines":[{"line":1,"timestamp":"2020-05-19T09:24:45.603567625Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e exec go test ./...\u001b[0m\n"},{"line":2,"timestamp":"2020-05-19T09:24:45.824535028Z","streamType":"stderr","text":"go: downloading github.com/rs/zerolog v1.17.2\n"},{"line":3,"timestamp":"2020-05-19T09:24:45.824544594Z","streamType":"stderr","text":"go: downloading gopkg.in/yaml.v2 v2.2.2\n"},{"line":4,"timestamp":"2020-05-19T09:24:45.82550297Z","streamType":"stderr","text":"go: downloading github.com/estafette/estafette-foundation v0.0.54\n"},{"line":5,"timestamp":"2020-05-19T09:24:45.82761336Z","streamType":"stderr","text":"go: downloading github.com/robfig/cron v0.0.0-20180505203441-b41be1df6967\n"},{"line":6,"timestamp":"2020-05-19T09:24:45.833097624Z","streamType":"stderr","text":"go: downloading github.com/stretchr/testify v1.3.0\n"},{"line":7,"timestamp":"2020-05-19T09:24:45.850994558Z","streamType":"stderr","text":"go: downloading github.com/logrusorgru/aurora v0.0.0-20191116043053-66b7ad493a23\n"},{"line":8,"timestamp":"2020-05-19T09:24:45.851265745Z","streamType":"stderr","text":"go: downloading github.com/uber/jaeger-client-go v2.20.1+incompatible\n"},{"line":9,"timestamp":"2020-05-19T09:24:45.85205159Z","streamType":"stderr","text":"go: downloading github.com/google/uuid v1.1.1\n"},{"line":10,"timestamp":"2020-05-19T09:24:45.86329568Z","streamType":"stderr","text":"go: downloading github.com/prometheus/client_golang v0.9.2\n"},{"line":11,"timestamp":"2020-05-19T09:24:45.883276271Z","streamType":"stderr","text":"go: downloading github.com/pmezard/go-difflib v1.0.0\n"},{"line":12,"timestamp":"2020-05-19T09:24:45.884232833Z","streamType":"stderr","text":"go: downloading github.com/davecgh/go-spew v1.1.1\n"},{"line":13,"timestamp":"2020-05-19T09:24:45.885158152Z","streamType":"stderr","text":"go: downloading github.com/fsnotify/fsnotify v1.4.7\n"},{"line":14,"timestamp":"2020-05-19T09:24:45.917352947Z","streamType":"stderr","text":"go: downloading golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a\n"},{"line":15,"timestamp":"2020-05-19T09:24:45.947118598Z","streamType":"stderr","text":"go: downloading github.com/prometheus/client_model v0.0.0-20190115171406-56726106282f\n"},{"line":16,"timestamp":"2020-05-19T09:24:45.947530793Z","streamType":"stderr","text":"go: downloading github.com/prometheus/common v0.2.0\n"},{"line":17,"timestamp":"2020-05-19T09:24:45.951598529Z","streamType":"stderr","text":"go: downloading github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973\n"},{"line":18,"timestamp":"2020-05-19T09:24:45.951711683Z","streamType":"stderr","text":"go: downloading github.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1\n"},{"line":19,"timestamp":"2020-05-19T09:24:45.951954311Z","streamType":"stderr","text":"go: downloading github.com/golang/protobuf v1.2.0\n"},{"line":20,"timestamp":"2020-05-19T09:24:46.000149827Z","streamType":"stderr","text":"go: downloading github.com/pkg/errors v0.8.1\n"},{"line":21,"timestamp":"2020-05-19T09:24:46.000557362Z","streamType":"stderr","text":"go: downloading github.com/uber/jaeger-lib v2.2.0+incompatible\n"},{"line":22,"timestamp":"2020-05-19T09:24:46.004759927Z","streamType":"stderr","text":"go: downloading github.com/opentracing/opentracing-go v1.1.0\n"},{"line":23,"timestamp":"2020-05-19T09:24:46.030488657Z","streamType":"stderr","text":"go: downloading go.uber.org/atomic v1.5.1\n"},{"line":24,"timestamp":"2020-05-19T09:24:46.031289754Z","streamType":"stderr","text":"go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1\n"},{"line":25,"timestamp":"2020-05-19T09:24:54.619681057Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-non-strict-manifest.yaml file...\"}\n"},{"line":26,"timestamp":"2020-05-19T09:24:54.619693769Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":27,"timestamp":"2020-05-19T09:24:54.619696537Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":28,"timestamp":"2020-05-19T09:24:54.619698064Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest-archived.yaml file...\"}\n"},{"line":29,"timestamp":"2020-05-19T09:24:54.619699645Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":30,"timestamp":"2020-05-19T09:24:54.619700746Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":31,"timestamp":"2020-05-19T09:24:54.619701672Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":32,"timestamp":"2020-05-19T09:24:54.619703146Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":33,"timestamp":"2020-05-19T09:24:54.619704012Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":34,"timestamp":"2020-05-19T09:24:54.619705659Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":35,"timestamp":"2020-05-19T09:24:54.619706584Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":36,"timestamp":"2020-05-19T09:24:54.619707642Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":37,"timestamp":"2020-05-19T09:24:54.619726181Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":38,"timestamp":"2020-05-19T09:24:54.619727707Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":39,"timestamp":"2020-05-19T09:24:54.61973138Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":40,"timestamp":"2020-05-19T09:24:54.61973307Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":41,"timestamp":"2020-05-19T09:24:54.619792325Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":42,"timestamp":"2020-05-19T09:24:54.619794504Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":43,"timestamp":"2020-05-19T09:24:54.619795797Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":44,"timestamp":"2020-05-19T09:24:54.619797018Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":45,"timestamp":"2020-05-19T09:24:54.61979787Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":46,"timestamp":"2020-05-19T09:24:54.61979891Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":47,"timestamp":"2020-05-19T09:24:54.619799778Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":48,"timestamp":"2020-05-19T09:24:54.619800681Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":49,"timestamp":"2020-05-19T09:24:54.619801764Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":50,"timestamp":"2020-05-19T09:24:54.619802607Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":51,"timestamp":"2020-05-19T09:24:54.619803701Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":52,"timestamp":"2020-05-19T09:24:54.619804545Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":53,"timestamp":"2020-05-19T09:24:54.619805492Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":54,"timestamp":"2020-05-19T09:24:54.619806385Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":55,"timestamp":"2020-05-19T09:24:54.619807215Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":56,"timestamp":"2020-05-19T09:24:54.619808081Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":57,"timestamp":"2020-05-19T09:24:54.619809274Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":58,"timestamp":"2020-05-19T09:24:54.619820927Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":59,"timestamp":"2020-05-19T09:24:54.619821869Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":60,"timestamp":"2020-05-19T09:24:54.619822787Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":61,"timestamp":"2020-05-19T09:24:54.619823589Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":62,"timestamp":"2020-05-19T09:24:54.619824483Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":63,"timestamp":"2020-05-19T09:24:54.619825265Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":64,"timestamp":"2020-05-19T09:24:54.619826089Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":65,"timestamp":"2020-05-19T09:24:54.619827228Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":66,"timestamp":"2020-05-19T09:24:54.619828054Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":67,"timestamp":"2020-05-19T09:24:54.619829153Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":68,"timestamp":"2020-05-19T09:24:54.619830144Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":69,"timestamp":"2020-05-19T09:24:54.619831514Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest-with-triggers.yaml file...\"}\n"},{"line":70,"timestamp":"2020-05-19T09:24:54.619832534Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest-with-triggers.yaml file successfully\"}\n"},{"line":71,"timestamp":"2020-05-19T09:24:54.61987659Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest-with-triggers.yaml file...\"}\n"},{"line":72,"timestamp":"2020-05-19T09:24:54.619877614Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest-with-triggers.yaml file successfully\"}\n"},{"line":73,"timestamp":"2020-05-19T09:24:54.619890082Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest-with-triggers.yaml file...\"}\n"},{"line":74,"timestamp":"2020-05-19T09:24:54.619891146Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest-with-triggers.yaml file successfully\"}\n"},{"line":75,"timestamp":"2020-05-19T09:24:54.619892431Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":76,"timestamp":"2020-05-19T09:24:54.619893388Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":77,"timestamp":"2020-05-19T09:24:54.619895167Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading test-manifest.yaml file...\"}\n"},{"line":78,"timestamp":"2020-05-19T09:24:54.619896123Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished reading test-manifest.yaml file successfully\"}\n"},{"line":79,"timestamp":"2020-05-19T09:24:54.61989755Z","streamType":"stdout","text":"--- FAIL: TestReadManifestFromFile (0.04s)\n"},{"line":80,"timestamp":"2020-05-19T09:24:54.619898741Z","streamType":"stdout","text":"    --- FAIL: TestReadManifestFromFile/ReturnsManifestWithArchivedTrueWithoutErrors (0.00s)\n"},{"line":81,"timestamp":"2020-05-19T09:24:54.61990005Z","streamType":"stdout","text":"        manifest_test.go:35: \n"},{"line":82,"timestamp":"2020-05-19T09:24:54.61990119Z","streamType":"stdout","text":"            \tError Trace:\tmanifest_test.go:35\n"},{"line":83,"timestamp":"2020-05-19T09:24:54.619902696Z","streamType":"stdout","text":"            \tError:      \tExpected nil, but got: \u0026os.PathError{Op:\"open\", Path:\"test-manifest-archived.yaml\", Err:0x2}\n"},{"line":84,"timestamp":"2020-05-19T09:24:54.619903798Z","streamType":"stdout","text":"            \tTest:       \tTestReadManifestFromFile/ReturnsManifestWithArchivedTrueWithoutErrors\n"},{"line":85,"timestamp":"2020-05-19T09:24:54.6199048Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":86,"timestamp":"2020-05-19T09:24:54.619905802Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":87,"timestamp":"2020-05-19T09:24:54.619906559Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":88,"timestamp":"2020-05-19T09:24:54.619907475Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":89,"timestamp":"2020-05-19T09:24:54.619908156Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":90,"timestamp":"2020-05-19T09:24:54.619909125Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":91,"timestamp":"2020-05-19T09:24:54.619909845Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":92,"timestamp":"2020-05-19T09:24:54.619910805Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":93,"timestamp":"2020-05-19T09:24:54.619911542Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":94,"timestamp":"2020-05-19T09:24:54.619914345Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":95,"timestamp":"2020-05-19T09:24:54.619915093Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":96,"timestamp":"2020-05-19T09:24:54.619915934Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":97,"timestamp":"2020-05-19T09:24:54.619916663Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":98,"timestamp":"2020-05-19T09:24:54.619917608Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":99,"timestamp":"2020-05-19T09:24:54.620356524Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Reading manifest from string...\"}\n"},{"line":100,"timestamp":"2020-05-19T09:24:54.620361582Z","streamType":"stdout","text":"{\"level\":\"debug\",\"time\":\"2020-05-19T09:24:54Z\",\"message\":\"Finished unmarshalling manifest from string successfully\"}\n"},{"line":101,"timestamp":"2020-05-19T09:24:54.620362415Z","streamType":"stdout","text":"FAIL\n"},{"line":102,"timestamp":"2020-05-19T09:24:54.620363929Z","streamType":"stdout","text":"FAIL\tgithub.com/estafette/estafette-ci-manifest\t0.057s\n"},{"line":103,"timestamp":"2020-05-19T09:24:54.620364625Z","streamType":"stdout","text":"FAIL\n"},{"line":10000,"timestamp":"2020-05-19T09:24:54.961103963Z","streamType":"stderr","text":"Failed with exit code: 1"}],"exitCode":0,"status":"FAILED"},{"step":"tag-revision","image":{"name":"golang","tag":"1.14.0-alpine3.11","isPulled":false,"imageSize":0,"pullDuration":0},"duration":0,"logLines":null,"exitCode":0,"status":"SKIPPED"},{"step":"slack-notify","image":{"name":"extensions/slack-build-status","tag":"dev","isPulled":false,"imageSize":12653738,"pullDuration":1976832387,"isTrusted":true},"duration":2605872486,"logLines":[{"line":1,"timestamp":"2020-05-19T09:24:57.755651473Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-slack-build-status\u001b[0m version \u001b[1m0.1.66\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:34:02Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0me3cdae7bc38d796404b561d6f47e0d28009738c2\n"},{"line":2,"timestamp":"2020-05-19T09:24:57.75566174Z","streamType":"stdout","text":"Unmarshalling credentials...\n"},{"line":3,"timestamp":"2020-05-19T09:24:57.755664766Z","streamType":"stdout","text":"Checking if credential estafette exists...\n"},{"line":4,"timestamp":"2020-05-19T09:24:57.75566725Z","streamType":"stdout","text":"Checking credential slack-webhook-estafette for workspace estafette...\n"},{"line":5,"timestamp":"2020-05-19T09:24:57.755669234Z","streamType":"stdout","text":"Found credential slack-webhook-estafette for workspace estafette\n"},{"line":6,"timestamp":"2020-05-19T09:24:57.945728157Z","streamType":"stdout","text":"Finished estafette-extension-slack-build-status...\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"set-build-status","image":null,"duration":3097128431,"logLines":[{"line":1,"timestamp":"2020-05-19T09:25:00.457912313Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-github-status\u001b[0m version \u001b[1m0.1.46\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:32:11Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m6db9d43ca763f9104293785ed2c594320dd7946a\n"},{"line":2,"timestamp":"2020-05-19T09:25:00.45792106Z","streamType":"stdout","text":"Setting logs url https://estafette.***.com/pipelines/github.com/estafette/estafette-ci-manifest/builds/556432961566375947/logs\n"},{"line":3,"timestamp":"2020-05-19T09:25:00.860684847Z","streamType":"stdout","text":"Received successful response for 'https://api.github.com/repos/estafette/estafette-ci-manifest/statuses/79167d6cf8d27534b807a87afcf09fa853144a0e' Github api call with status code 201\n"},{"line":4,"timestamp":"2020-05-19T09:25:00.860697878Z","streamType":"stdout","text":"Finished estafette-extension-github-status...\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true}]