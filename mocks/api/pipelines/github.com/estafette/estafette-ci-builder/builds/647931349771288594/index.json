{
  "id": "647931349771288594",
  "repoSource": "github.com",
  "repoOwner": "estafette",
  "repoName": "estafette-ci-builder",
  "repoBranch": "main",
  "repoRevision": "99e19b72dac998d93c86259a1d3ab00ebed78c79",
  "buildVersion": "0.0.843",
  "buildStatus": "failed",
  "labels": [
    {
      "key": "app-group",
      "value": "estafette-ci"
    },
    {
      "key": "language",
      "value": "golang"
    },
    {
      "key": "team",
      "value": "estafette"
    }
  ],
  "releaseTargets": [
    {
      "name": "dev",
      "activeReleases": [
        {
          "name": "dev",
          "id": "647940448256360465",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.845",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "pipeline": {
                "buildVersion": "0.0.845",
                "repoSource": "github.com",
                "repoOwner": "estafette",
                "repoName": "estafette-ci-builder",
                "repoBranch": "main",
                "status": "succeeded",
                "event": "finished"
              }
            }
          ],
          "insertedAt": "2021-04-07T14:35:32.499777Z",
          "startedAt": "2021-04-07T14:35:33.707102Z",
          "updatedAt": "2021-04-07T14:36:01.70099Z",
          "duration": 27000000000,
          "pendingDuration": 1000000000
        }
      ]
    },
    {
      "name": "beta",
      "activeReleases": [
        {
          "name": "beta",
          "id": "647942678648455186",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.845",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2021-04-07T14:46:53.161314Z",
          "startedAt": "2021-04-07T14:46:54.413844Z",
          "updatedAt": "2021-04-07T14:47:25.274308Z",
          "duration": 30000000000,
          "pendingDuration": 1000000000
        }
      ]
    },
    {
      "name": "stable",
      "activeReleases": [
        {
          "name": "stable",
          "id": "647943527872888848",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.845",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2021-04-07T14:51:12.32415Z",
          "startedAt": "2021-04-07T14:51:13.615148Z",
          "updatedAt": "2021-04-07T14:51:51.808352Z",
          "duration": 38000000000,
          "pendingDuration": 1000000000
        }
      ]
    },
    {
      "name": "nanoserver-1809-dev",
      "activeReleases": [
        {
          "name": "nanoserver-1809-dev",
          "id": "647940448256327697",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.845",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "pipeline": {
                "buildVersion": "0.0.845",
                "repoSource": "github.com",
                "repoOwner": "estafette",
                "repoName": "estafette-ci-builder",
                "repoBranch": "main",
                "status": "succeeded",
                "event": "finished"
              }
            }
          ],
          "insertedAt": "2021-04-07T14:35:32.499708Z",
          "startedAt": "2021-04-07T14:40:17.045453Z",
          "updatedAt": "2021-04-07T14:42:56.85418Z",
          "duration": 159000000000,
          "pendingDuration": 284000000000
        }
      ]
    },
    {
      "name": "nanoserver-1809-beta",
      "activeReleases": [
        {
          "name": "nanoserver-1809-beta",
          "id": "647942688394641424",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.845",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2021-04-07T14:46:56.135657Z",
          "startedAt": "2021-04-07T14:47:03.460768Z",
          "updatedAt": "2021-04-07T14:48:24.639708Z",
          "duration": 81000000000,
          "pendingDuration": 7000000000
        }
      ]
    },
    {
      "name": "nanoserver-1809-stable",
      "activeReleases": [
        {
          "name": "nanoserver-1809-stable",
          "id": "647943534739357712",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.845",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2021-04-07T14:51:14.419615Z",
          "startedAt": "2021-04-07T14:51:21.514106Z",
          "updatedAt": "2021-04-07T14:52:33.705501Z",
          "duration": 72000000000,
          "pendingDuration": 7000000000
        }
      ]
    }
  ],
  "manifest": "builder:\n  track: stable\n  medium: memory\n\nlabels:\n  app-group: estafette-ci\n  team: estafette\n  language: golang\n\nversion:\n  semver:\n    major: 0\n    minor: 0\n    releaseBranch: main\n\nstages:\n  build-and-test:\n    parallelStages:\n      test:\n        image: golang:1.16-alpine\n        commands:\n        - apk add --update --no-cache build-base\n        - go test -race ./...\n\n      build:\n        image: golang:1.16-alpine\n        env:\n          CGO_ENABLED: 0\n        commands:\n        - go build -v -ldflags \"-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\" -o ./publish/${ESTAFETTE_GIT_NAME}\n\n  bake-all:\n    parallelStages:\n      bake:\n        image: extensions/docker:dev\n        action: build\n        no-cache: true\n        dontExpand:\n        - ESTAFETTE_WORKDIR\n        repositories:\n        - estafette\n        path: ./publish\n        copy:\n        - templates\n        - daemon.json\n\n      bake-gocd-agent:\n        image: extensions/docker:dev\n        action: build\n        no-cache: true\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n        path: ./publish\n        copy:\n        - templates\n        dockerfile: Dockerfile.gocd\n\n  dive-and-trivy-all:\n    parallelStages:\n      dive:\n        image: extensions/docker:dev\n        action: dive\n        repositories:\n        - estafette\n\n      dive-gocd-agent:\n        image: extensions/docker:dev\n        action: dive\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n\n      trivy:\n        image: extensions/docker:dev\n        action: trivy\n        repositories:\n        - estafette\n\n      trivy-gocd-agent:\n        image: extensions/docker:dev\n        action: trivy\n        versionTagSuffix: gocd\n        severity: low\n        repositories:\n        - estafette\n\n  clean-working-directory:\n    image: golang:1.16.0-alpine\n    commands:\n    - rm -rf ..?* .[!.]* *\n\n  test:\n    image: estafette/estafette-ci-builder:${ESTAFETTE_BUILD_VERSION}\n    env:\n      BUILDER_CONFIG:\n        '{\n          \"action\":\"build\",\n          \"track\":\"dev\",\n          \"dockerConfig\":{\n            \"runType\":\"dind\",\n            \"mtu\":1460\n          },\n          \"manifest\":{\n            \"Builder\":{\n              \"Track\":\"stable\",\n              \"OperatingSystem\":\"linux\"\n            },\n            \"Labels\":{\n              \"app\":\"estafette-ci-builder\",\n              \"app-group\":\"estafette-ci\",\n              \"language\":\"golang\",\n              \"team\":\"estafette-team\"\n            },\n            \"Version\":{\n              \"SemVer\":{\n                \"Major\":0,\n                \"Minor\":0,\n                \"Patch\":\"{{auto}}\",\n                \"LabelTemplate\":\"{{branch}}\",\n                \"ReleaseBranch\":\"master\"\n              },\n              \"Custom\":null\n            },\n            \"GlobalEnvVars\":null,\n            \"Stages\":[\n              {\n                \"Name\":\"services-test\",\n                \"ContainerImage\":\"alpine:latest\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\": [\n                  \"route\",\n                  \"ip addr show eth0\",\n                  \"cat /etc/hosts\",\n                  \"cat /etc/resolv.conf\",\n                  \"apk add curl\",\n                  \"curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused http://nginx:80/\"\n                ],\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":null,\n                \"AutoInjected\":false,\n                \"Retries\":0,\n                \"Services\": [\n                  {\n                    \"Name\": \"nginx\",\n                    \"ContainerImage\": \"nginx:alpine\",\n                    \"Shell\":\"/bin/sh\",\n                    \"When\":\"status == ''succeeded''\",\n                    \"Readiness\": {\n                      \"Path\": \"/\",\n                      \"TimeoutSeconds\": 30,\n                      \"Hostname\": \"nginx\",\n                      \"Port\": 80,\n                      \"Protocol\": \"http\"\n                    }\n                  },\n                  {\n                    \"Name\": \"cockroachdb\",\n                    \"ContainerImage\": \"cockroachdb/cockroach:v19.2.0\",\n                    \"Commands\":[\n                      \"/cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\"\n                    ],\n                    \"EnvVars\":{\n                      \"COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING\":\"true\"\n                    },\n                    \"Shell\":\"/bin/sh\",\n                    \"When\":\"status == ''succeeded''\",\n                    \"Readiness\": {\n                      \"Path\": \"/health?ready=1\",\n                      \"TimeoutSeconds\": 30,\n                      \"Hostname\": \"cockroachdb\",\n                      \"Port\": 8080,\n                      \"Protocol\": \"http\"\n                    }\n                  }\n                ]\n              },\n              {\n                \"Name\":\"git-clone\",\n                \"ContainerImage\":\"extensions/git-clone:dev\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\":null,\n                \"shallow\": false,\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":null,\n                \"AutoInjected\":true,\n                \"Retries\":0,\n                \"CustomProperties\":null\n              },\n              {\n                \"Name\":\"parallel-builds\",\n                \"ContainerImage\":\"\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\":[],\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":{},\n                \"AutoInjected\":false,\n                \"Retries\":0,\n                \"CustomProperties\":null,\n                \"ParallelStages\":[\n                  {\n                    \"Name\":\"buildA\",\n                    \"ContainerImage\":\n                    \"golang:1.14.0-alpine3.11\",\n                    \"Shell\":\"/bin/sh\",\n                    \"WorkingDirectory\":\"/estafette-work\",\n                    \"Commands\":[\n                      \"go test ./...\",\n                      \"go build -v -ldflags \\\"-X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\\\" -o ./publish/${ESTAFETTE_GIT_NAME}\",\n                      \"echo $PWD\",\n                      \"ls -latr\",\n                      \"ls -latr ./publish\"\n                    ],\n                    \"When\":\"status == ''succeeded''\",\n                    \"EnvVars\":{\n                      \"CGO_ENABLED\":\"0\",\n                      \"GOOS\":\"linux\",\n                      \"GOARCH\":\"amd64\"\n                    },\n                    \"AutoInjected\":false,\n                    \"Retries\":0,\n                    \"CustomProperties\":null\n                  },\n                  {\n                    \"Name\":\"buildB\",\n                    \"ContainerImage\":\"alpine:3.10\",\n                    \"Shell\":\"/bin/sh\",\n                    \"WorkingDirectory\":\"/estafette-work\",\n                    \"Commands\":[\n                      \"echo hi\"\n                    ],\n                    \"When\":\"status == ''succeeded''\"\n                  }\n                ]\n              },\n              {\n                \"Name\":\"bake-estafette\",\n                \"ContainerImage\":\"extensions/docker:dev\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\":null,\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":null,\n                \"AutoInjected\":false,\n                \"Retries\":0,\n                \"CustomProperties\":{\n                  \"action\":\"build\",\n                  \"no-cache\":true,\n                  \"tag\":\"testtag\",\n                  \"expand-variables\":false,\n                  \"path\":\"./publish\",\n                  \"repositories\":[\"estafette\"]\n                }\n              }\n            ],\n            \"Releases\":null\n          },\n          \"jobName\":\"build-estafette-estafette-ci-builder-391855387650326531\",\n          \"ciServer\":{\n            \"baseUrl\":\"https://httpstat.us/200\",\n            \"builderEventsUrl\":\"https://httpstat.us/200\",\n            \"postLogsUrl\":\"https://httpstat.us/200\",\n            \"jwt\":\"\"\n          },\n          \"buildParams\":{\n            \"buildID\":391855387650326531\n          },\n          \"git\":{\n            \"repoSource\":\"github.com\",\n            \"repoOwner\":\"estafette\",\n            \"repoName\":\"estafette-ci-builder\",\n            \"repoBranch\":\"integration-test\",\n            \"repoRevision\":\"4ba7791566e3f6f69e8542183168ec9b1ad03ca7\"\n          },\n          \"buildVersion\":{\n            \"version\":\"0.0.0-integration-test\",\n            \"major\":0,\n            \"minor\":0,\n            \"patch\":\"0\",\n            \"autoincrement\":0\n          },\n          \"credentials\":null,\n          \"trustedImages\":[\n            {\n              \"path\":\"extensions/docker\",\n              \"runDocker\":true\n            },\n            {\n              \"path\":\"estafette/estafette-ci-builder\",\n              \"runPrivileged\":true\n            },\n            {\n              \"path\":\"golang\",\n              \"runDocker\":true,\n              \"allowCommands\":true\n            },\n            {\n              \"path\":\"extensions/git-clone\"\n            },\n            {\n              \"path\":\"bsycorp/kind\",\n              \"runPrivileged\":true\n            }\n          ]\n        }'\n      SECRET_DECRYPTION_KEY: \"8c6E5e7R8ameE2L6qxEcN5Yc3Q7P4Yd4\"\n      ESTAFETTE_LOG_FORMAT: console\n\n  push-all:\n    parallelStages:\n      push-to-docker-hub:\n        image: extensions/docker:dev\n        action: push\n        repositories:\n        - estafette\n\n      push-gocd-agent-to-docker-hub:\n        image: extensions/docker:dev\n        action: push\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: estafette\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n\nreleases:\n  dev:\n    triggers:\n    - pipeline:\n        name: self\n        branch: .+\n    stages:\n      tag-all:\n        parallelStages:\n          tag-container-image:\n            image: extensions/docker:dev\n            action: tag\n            repositories:\n            - estafette\n            tags:\n            - dev\n\n          tag-gocd-agent-container-image:\n            image: extensions/docker:dev\n            action: tag\n            versionTagSuffix: gocd\n            repositories:\n            - estafette\n            tags:\n            - dev-gocd\n\n  beta:\n    stages:\n      tag-all:\n        parallelStages:\n          tag-container-image:\n            image: extensions/docker:dev\n            action: tag\n            repositories:\n            - estafette\n            tags:\n            - beta\n\n          tag-gocd-agent-container-image:\n            image: extensions/docker:dev\n            action: tag\n            versionTagSuffix: gocd\n            repositories:\n            - estafette\n            tags:\n            - beta-gocd\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: estafette\n        channels:\n        - '#build-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'\n\n  stable:\n    stages:\n      tag-all:\n        parallelStages:\n          tag-container-image:\n            image: extensions/docker:dev\n            action: tag\n            repositories:\n            - estafette\n            tags:\n            - stable\n            - latest\n\n          tag-gocd-agent-container-image:\n            image: extensions/docker:dev\n            action: tag\n            versionTagSuffix: gocd\n            repositories:\n            - estafette\n            tags:\n            - stable-gocd\n            - latest-gocd\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: estafette\n        channels:\n        - '#build-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'\n\n  nanoserver-1809-dev:\n    builder:\n      os: windows\n      track: nanoserver-1809-stable\n    triggers:\n    - pipeline:\n        name: self\n        branch: .+\n    clone: true\n    stages:\n      build:\n        image: estafette/golang:1.16.0-nanoserver-1809\n        shell: cmd\n        env:\n          CGO_ENABLED: 0\n          GOOS: windows\n          GOARCH: amd64\n        commands:\n        - go build -v -ldflags \"-X main.app=%ESTAFETTE_GIT_NAME% -X main.version=%ESTAFETTE_BUILD_VERSION% -X main.revision=%ESTAFETTE_GIT_REVISION% -X main.branch=%ESTAFETTE_GIT_BRANCH% -X main.buildDate=%ESTAFETTE_BUILD_DATETIME%\" -o ./publish/%ESTAFETTE_GIT_NAME%.exe\n\n      bake:\n        image: extensions/docker:nanoserver-1809-dev\n        action: build\n        no-cache: true\n        expand-variables: false\n        repositories:\n        - estafette\n        dockerfile: Dockerfile.nanoserver-1809\n        path: ./publish\n        copy:\n        - templates\n\n      push-to-docker-hub:\n        image: extensions/docker:nanoserver-1809-dev\n        action: push\n        repositories:\n        - estafette\n        tags:\n        - nanoserver-1809-dev\n        pushVersionTag: false\n\n  nanoserver-1809-beta:\n    builder:\n      os: windows\n      track: nanoserver-1809-dev\n    clone: true\n    stages:\n      build:\n        image: estafette/golang:1.16.0-nanoserver-1809\n        shell: cmd\n        env:\n          CGO_ENABLED: 0\n          GOOS: windows\n          GOARCH: amd64\n        commands:\n        - go build -v -ldflags \"-X main.app=%ESTAFETTE_GIT_NAME% -X main.version=%ESTAFETTE_BUILD_VERSION% -X main.revision=%ESTAFETTE_GIT_REVISION% -X main.branch=%ESTAFETTE_GIT_BRANCH% -X main.buildDate=%ESTAFETTE_BUILD_DATETIME%\" -o ./publish/%ESTAFETTE_GIT_NAME%.exe\n\n      bake:\n        image: extensions/docker:nanoserver-1809-dev\n        action: build\n        no-cache: true\n        expand-variables: false\n        repositories:\n        - estafette\n        dockerfile: Dockerfile.nanoserver-1809\n        path: ./publish\n        copy:\n        - templates\n\n      push-to-docker-hub:\n        image: extensions/docker:nanoserver-1809-dev\n        action: push\n        repositories:\n        - estafette\n        tags:\n        - nanoserver-1809-beta\n        pushVersionTag: false\n\n  nanoserver-1809-stable:\n    builder:\n      os: windows\n      track: nanoserver-1809-stable\n    clone: true\n    stages:\n      build:\n        image: estafette/golang:1.16.0-nanoserver-1809\n        shell: cmd\n        env:\n          CGO_ENABLED: 0\n          GOOS: windows\n          GOARCH: amd64\n        commands:\n        - go build -v -ldflags \"-X main.app=%ESTAFETTE_GIT_NAME% -X main.version=%ESTAFETTE_BUILD_VERSION% -X main.revision=%ESTAFETTE_GIT_REVISION% -X main.branch=%ESTAFETTE_GIT_BRANCH% -X main.buildDate=%ESTAFETTE_BUILD_DATETIME%\" -o ./publish/%ESTAFETTE_GIT_NAME%.exe\n\n      bake:\n        image: extensions/docker:nanoserver-1809-dev\n        action: build\n        no-cache: true\n        expand-variables: false\n        repositories:\n        - estafette\n        dockerfile: Dockerfile.nanoserver-1809\n        path: ./publish\n        copy:\n        - templates\n\n      push-to-docker-hub:\n        image: extensions/docker:nanoserver-1809-dev\n        action: push\n        repositories:\n        - estafette\n        tags:\n        - nanoserver-1809-stable\n        pushVersionTag: false\n",
  "manifestWithDefaults": "builder:\n  track: stable\n  os: linux\n  medium: memory\nlabels:\n  app-group: estafette-ci\n  language: golang\n  team: estafette\nversion:\n  semver:\n    major: 0\n    minor: 0\n    patch: '{{auto}}'\n    labelTemplate: '{{branch}}'\n    releaseBranch: main\nstages:\n  build-and-test:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: golang:1.16-alpine\n      shell: /bin/sh\n      workDir: /estafette-work\n      commands:\n      - apk add --update --no-cache build-base\n      - go test -race ./...\n      when: status == 'succeeded'\n    - image: golang:1.16-alpine\n      shell: /bin/sh\n      workDir: /estafette-work\n      commands:\n      - go build -v -ldflags \"-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME}\n        -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION}\n        -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\"\n        -o ./publish/${ESTAFETTE_GIT_NAME}\n      when: status == 'succeeded'\n      env:\n        CGO_ENABLED: \"0\"\n  bake-all:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: build\n      copy:\n      - templates\n      - daemon.json\n      dontExpand:\n      - ESTAFETTE_WORKDIR\n      no-cache: true\n      path: ./publish\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: build\n      copy:\n      - templates\n      dockerfile: Dockerfile.gocd\n      no-cache: true\n      path: ./publish\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n  dive-and-trivy-all:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: dive\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: dive\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: trivy\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: trivy\n      repositories:\n      - estafette\n      severity: low\n      versionTagSuffix: gocd\n  clean-working-directory:\n    image: golang:1.16.0-alpine\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - rm -rf ..?* .[!.]* *\n    when: status == 'succeeded'\n  test:\n    image: estafette/estafette-ci-builder:${ESTAFETTE_BUILD_VERSION}\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    env:\n      BUILDER_CONFIG: '{ \"action\":\"build\", \"track\":\"dev\", \"dockerConfig\":{ \"runType\":\"dind\",\n        \"mtu\":1460 }, \"manifest\":{ \"Builder\":{ \"Track\":\"stable\", \"OperatingSystem\":\"linux\"\n        }, \"Labels\":{ \"app\":\"estafette-ci-builder\", \"app-group\":\"estafette-ci\", \"language\":\"golang\",\n        \"team\":\"estafette-team\" }, \"Version\":{ \"SemVer\":{ \"Major\":0, \"Minor\":0, \"Patch\":\"{{auto}}\",\n        \"LabelTemplate\":\"{{branch}}\", \"ReleaseBranch\":\"master\" }, \"Custom\":null },\n        \"GlobalEnvVars\":null, \"Stages\":[ { \"Name\":\"services-test\", \"ContainerImage\":\"alpine:latest\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\": [ \"route\",\n        \"ip addr show eth0\", \"cat /etc/hosts\", \"cat /etc/resolv.conf\", \"apk add curl\",\n        \"curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused\n        http://nginx:80/\" ], \"When\":\"status == ''succeeded''\", \"EnvVars\":null, \"AutoInjected\":false,\n        \"Retries\":0, \"Services\": [ { \"Name\": \"nginx\", \"ContainerImage\": \"nginx:alpine\",\n        \"Shell\":\"/bin/sh\", \"When\":\"status == ''succeeded''\", \"Readiness\": { \"Path\":\n        \"/\", \"TimeoutSeconds\": 30, \"Hostname\": \"nginx\", \"Port\": 80, \"Protocol\": \"http\"\n        } }, { \"Name\": \"cockroachdb\", \"ContainerImage\": \"cockroachdb/cockroach:v19.2.0\",\n        \"Commands\":[ \"/cockroach/cockroach start-single-node --insecure --advertise-addr\n        cockroachdb\" ], \"EnvVars\":{ \"COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING\":\"true\"\n        }, \"Shell\":\"/bin/sh\", \"When\":\"status == ''succeeded''\", \"Readiness\": { \"Path\":\n        \"/health?ready=1\", \"TimeoutSeconds\": 30, \"Hostname\": \"cockroachdb\", \"Port\":\n        8080, \"Protocol\": \"http\" } } ] }, { \"Name\":\"git-clone\", \"ContainerImage\":\"extensions/git-clone:dev\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":null,\n        \"shallow\": false, \"When\":\"status == ''succeeded''\", \"EnvVars\":null, \"AutoInjected\":true,\n        \"Retries\":0, \"CustomProperties\":null }, { \"Name\":\"parallel-builds\", \"ContainerImage\":\"\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":[], \"When\":\"status\n        == ''succeeded''\", \"EnvVars\":{}, \"AutoInjected\":false, \"Retries\":0, \"CustomProperties\":null,\n        \"ParallelStages\":[ { \"Name\":\"buildA\", \"ContainerImage\": \"golang:1.14.0-alpine3.11\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":[ \"go\n        test ./...\", \"go build -v -ldflags \\\"-X main.version=${ESTAFETTE_BUILD_VERSION}\n        -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH}\n        -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\\\" -o ./publish/${ESTAFETTE_GIT_NAME}\",\n        \"echo $PWD\", \"ls -latr\", \"ls -latr ./publish\" ], \"When\":\"status == ''succeeded''\",\n        \"EnvVars\":{ \"CGO_ENABLED\":\"0\", \"GOOS\":\"linux\", \"GOARCH\":\"amd64\" }, \"AutoInjected\":false,\n        \"Retries\":0, \"CustomProperties\":null }, { \"Name\":\"buildB\", \"ContainerImage\":\"alpine:3.10\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":[ \"echo\n        hi\" ], \"When\":\"status == ''succeeded''\" } ] }, { \"Name\":\"bake-estafette\",\n        \"ContainerImage\":\"extensions/docker:dev\", \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\",\n        \"Commands\":null, \"When\":\"status == ''succeeded''\", \"EnvVars\":null, \"AutoInjected\":false,\n        \"Retries\":0, \"CustomProperties\":{ \"action\":\"build\", \"no-cache\":true, \"tag\":\"testtag\",\n        \"expand-variables\":false, \"path\":\"./publish\", \"repositories\":[\"estafette\"]\n        } } ], \"Releases\":null }, \"jobName\":\"build-estafette-estafette-ci-builder-391855387650326531\",\n        \"ciServer\":{ \"baseUrl\":\"https://httpstat.us/200\", \"builderEventsUrl\":\"https://httpstat.us/200\",\n        \"postLogsUrl\":\"https://httpstat.us/200\", \"jwt\":\"\" }, \"buildParams\":{ \"buildID\":391855387650326531\n        }, \"git\":{ \"repoSource\":\"github.com\", \"repoOwner\":\"estafette\", \"repoName\":\"estafette-ci-builder\",\n        \"repoBranch\":\"integration-test\", \"repoRevision\":\"4ba7791566e3f6f69e8542183168ec9b1ad03ca7\"\n        }, \"buildVersion\":{ \"version\":\"0.0.0-integration-test\", \"major\":0, \"minor\":0,\n        \"patch\":\"0\", \"autoincrement\":0 }, \"credentials\":null, \"trustedImages\":[ {\n        \"path\":\"extensions/docker\", \"runDocker\":true }, { \"path\":\"estafette/estafette-ci-builder\",\n        \"runPrivileged\":true }, { \"path\":\"golang\", \"runDocker\":true, \"allowCommands\":true\n        }, { \"path\":\"extensions/git-clone\" }, { \"path\":\"bsycorp/kind\", \"runPrivileged\":true\n        } ] }'\n      ESTAFETTE_LOG_FORMAT: console\n      SECRET_DECRYPTION_KEY: 8c6E5e7R8ameE2L6qxEcN5Yc3Q7P4Yd4\n  push-all:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: push\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: push\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: estafette\nreleases:\n  dev:\n    builder:\n      track: stable\n      os: linux\n      medium: memory\n    clone: false\n    triggers:\n    - pipeline:\n        event: finished\n        status: succeeded\n        name: self\n        branch: .+\n      releases:\n        target: dev\n        version: same\n    stages:\n      tag-all:\n        when: status == 'succeeded'\n        parallelStages:\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - dev\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - dev-gocd\n          versionTagSuffix: gocd\n  beta:\n    builder:\n      track: stable\n      os: linux\n      medium: memory\n    clone: false\n    stages:\n      tag-all:\n        when: status == 'succeeded'\n        parallelStages:\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - beta\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - beta-gocd\n          versionTagSuffix: gocd\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#build-status'\n        workspace: estafette\n  stable:\n    builder:\n      track: stable\n      os: linux\n      medium: memory\n    clone: false\n    stages:\n      tag-all:\n        when: status == 'succeeded'\n        parallelStages:\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - stable\n          - latest\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - stable-gocd\n          - latest-gocd\n          versionTagSuffix: gocd\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#build-status'\n        workspace: estafette\n  nanoserver-1809-dev:\n    builder:\n      track: nanoserver-1809-stable\n      os: windows\n    clone: true\n    triggers:\n    - pipeline:\n        event: finished\n        status: succeeded\n        name: self\n        branch: .+\n      releases:\n        target: nanoserver-1809-dev\n        version: same\n    stages:\n      build:\n        image: estafette/golang:1.16.0-nanoserver-1809\n        shell: cmd\n        workDir: C:/estafette-work\n        commands:\n        - go build -v -ldflags \"-X main.app=%ESTAFETTE_GIT_NAME% -X main.version=%ESTAFETTE_BUILD_VERSION%\n          -X main.revision=%ESTAFETTE_GIT_REVISION% -X main.branch=%ESTAFETTE_GIT_BRANCH%\n          -X main.buildDate=%ESTAFETTE_BUILD_DATETIME%\" -o ./publish/%ESTAFETTE_GIT_NAME%.exe\n        when: status == 'succeeded'\n        env:\n          CGO_ENABLED: \"0\"\n          GOARCH: amd64\n          GOOS: windows\n      bake:\n        image: extensions/docker:nanoserver-1809-dev\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: build\n        copy:\n        - templates\n        dockerfile: Dockerfile.nanoserver-1809\n        expand-variables: false\n        no-cache: true\n        path: ./publish\n        repositories:\n        - estafette\n      push-to-docker-hub:\n        image: extensions/docker:nanoserver-1809-dev\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: push\n        pushVersionTag: false\n        repositories:\n        - estafette\n        tags:\n        - nanoserver-1809-dev\n  nanoserver-1809-beta:\n    builder:\n      track: nanoserver-1809-dev\n      os: windows\n    clone: true\n    stages:\n      build:\n        image: estafette/golang:1.16.0-nanoserver-1809\n        shell: cmd\n        workDir: C:/estafette-work\n        commands:\n        - go build -v -ldflags \"-X main.app=%ESTAFETTE_GIT_NAME% -X main.version=%ESTAFETTE_BUILD_VERSION%\n          -X main.revision=%ESTAFETTE_GIT_REVISION% -X main.branch=%ESTAFETTE_GIT_BRANCH%\n          -X main.buildDate=%ESTAFETTE_BUILD_DATETIME%\" -o ./publish/%ESTAFETTE_GIT_NAME%.exe\n        when: status == 'succeeded'\n        env:\n          CGO_ENABLED: \"0\"\n          GOARCH: amd64\n          GOOS: windows\n      bake:\n        image: extensions/docker:nanoserver-1809-dev\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: build\n        copy:\n        - templates\n        dockerfile: Dockerfile.nanoserver-1809\n        expand-variables: false\n        no-cache: true\n        path: ./publish\n        repositories:\n        - estafette\n      push-to-docker-hub:\n        image: extensions/docker:nanoserver-1809-dev\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: push\n        pushVersionTag: false\n        repositories:\n        - estafette\n        tags:\n        - nanoserver-1809-beta\n  nanoserver-1809-stable:\n    builder:\n      track: nanoserver-1809-stable\n      os: windows\n    clone: true\n    stages:\n      build:\n        image: estafette/golang:1.16.0-nanoserver-1809\n        shell: cmd\n        workDir: C:/estafette-work\n        commands:\n        - go build -v -ldflags \"-X main.app=%ESTAFETTE_GIT_NAME% -X main.version=%ESTAFETTE_BUILD_VERSION%\n          -X main.revision=%ESTAFETTE_GIT_REVISION% -X main.branch=%ESTAFETTE_GIT_BRANCH%\n          -X main.buildDate=%ESTAFETTE_BUILD_DATETIME%\" -o ./publish/%ESTAFETTE_GIT_NAME%.exe\n        when: status == 'succeeded'\n        env:\n          CGO_ENABLED: \"0\"\n          GOARCH: amd64\n          GOOS: windows\n      bake:\n        image: extensions/docker:nanoserver-1809-dev\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: build\n        copy:\n        - templates\n        dockerfile: Dockerfile.nanoserver-1809\n        expand-variables: false\n        no-cache: true\n        path: ./publish\n        repositories:\n        - estafette\n      push-to-docker-hub:\n        image: extensions/docker:nanoserver-1809-dev\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: push\n        pushVersionTag: false\n        repositories:\n        - estafette\n        tags:\n        - nanoserver-1809-stable\n",
  "commits": [
    {
      "message": "rebuild go.cd agent with docker 20.10.5-dind",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    }
  ],
  "triggers": [
    {
      "pipeline": {
        "event": "finished",
        "status": "succeeded",
        "name": "github.com/estafette/estafette-ci-builder",
        "branch": ".+"
      },
      "releases": {
        "target": "dev",
        "version": "same"
      }
    },
    {
      "pipeline": {
        "event": "finished",
        "status": "succeeded",
        "name": "github.com/estafette/estafette-ci-builder",
        "branch": ".+"
      },
      "releases": {
        "target": "nanoserver-1809-dev",
        "version": "same"
      }
    }
  ],
  "triggerEvents": [
    {
      "git": {
        "event": "push",
        "repository": "github.com/estafette/estafette-ci-builder",
        "branch": "main"
      }
    }
  ],
  "insertedAt": "2021-04-07T13:49:15.862207Z",
  "startedAt": "2021-04-07T13:49:17.716834Z",
  "updatedAt": "2021-04-07T13:49:42.215504Z",
  "duration": 24000000000,
  "pendingDuration": 1000000000
}