[{"step":"builder-info","image":null,"duration":0,"logLines":[{"line":1,"timestamp":"2020-08-31T13:20:32.145530131Z","streamType":"stdout","text":"Starting \u001b[1mestafette-ci-builder\u001b[0m version \u001b[1m0.0.681\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-14T08:32:57Z \u001b[36mgoVersion=\u001b[0mgo1.15 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m1b314c8668da8b2ded52390a94bef0974681210a"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"injected-before","image":null,"duration":6198308544,"logLines":null,"exitCode":0,"status":"SUCCEEDED","autoInjected":true,"nestedSteps":[{"step":"envvars","depth":1,"image":{"name":"extensions/envvars","tag":"stable","isPulled":false,"imageSize":11158339,"pullDuration":1906672398},"duration":1354057239,"logLines":[{"line":1,"timestamp":"2020-08-31T13:20:34.979257831Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-envvars\u001b[0m version \u001b[1m0.1.15\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:29:44Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0ma1eec2828262801647117796b44ee95ed842ef2f\n"},{"line":2,"timestamp":"2020-08-31T13:20:34.979271245Z","streamType":"stdout","text":"All available estafette environment variables; the _DNS_SAFE suffixed ones can be used to set dns labels. Since leading digits are not allowed some of them are empty.\n"},{"line":3,"timestamp":"2020-08-31T13:20:34.979275223Z","streamType":"stdout","text":"ESTAFETTE_BUILD_DATETIME: 2020-08-31T13:20:32Z\n"},{"line":4,"timestamp":"2020-08-31T13:20:34.979277074Z","streamType":"stdout","text":"ESTAFETTE_BUILD_DATETIME_DNS_SAFE: t13-20-32z\n"},{"line":5,"timestamp":"2020-08-31T13:20:34.979278824Z","streamType":"stdout","text":"ESTAFETTE_BUILD_ID: 585923392308051979\n"},{"line":6,"timestamp":"2020-08-31T13:20:34.979280759Z","streamType":"stdout","text":"ESTAFETTE_BUILD_ID_DNS_SAFE: \n"},{"line":7,"timestamp":"2020-08-31T13:20:34.979282072Z","streamType":"stdout","text":"ESTAFETTE_BUILD_STATUS: succeeded\n"},{"line":8,"timestamp":"2020-08-31T13:20:34.979283561Z","streamType":"stdout","text":"ESTAFETTE_BUILD_STATUS_DNS_SAFE: succeeded\n"},{"line":9,"timestamp":"2020-08-31T13:20:34.979341592Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION: 0.0.683\n"},{"line":10,"timestamp":"2020-08-31T13:20:34.979343089Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_DNS_SAFE: \n"},{"line":11,"timestamp":"2020-08-31T13:20:34.979344518Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_LABEL: master\n"},{"line":12,"timestamp":"2020-08-31T13:20:34.979345904Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_LABEL_DNS_SAFE: master\n"},{"line":13,"timestamp":"2020-08-31T13:20:34.979348755Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MAJOR: 0\n"},{"line":14,"timestamp":"2020-08-31T13:20:34.979350654Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MAJOR_DNS_SAFE: \n"},{"line":15,"timestamp":"2020-08-31T13:20:34.979351845Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MINOR: 0\n"},{"line":16,"timestamp":"2020-08-31T13:20:34.979352838Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_MINOR_DNS_SAFE: \n"},{"line":17,"timestamp":"2020-08-31T13:20:34.979353945Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_PATCH: 683\n"},{"line":18,"timestamp":"2020-08-31T13:20:34.979355032Z","streamType":"stdout","text":"ESTAFETTE_BUILD_VERSION_PATCH_DNS_SAFE: \n"},{"line":19,"timestamp":"2020-08-31T13:20:34.979357972Z","streamType":"stdout","text":"ESTAFETTE_CI_SERVER_BASE_URL: https://estafette.***.com/\n"},{"line":20,"timestamp":"2020-08-31T13:20:34.979361225Z","streamType":"stdout","text":"ESTAFETTE_CI_SERVER_BASE_URL_DNS_SAFE: https-estafette-***-com\n"},{"line":21,"timestamp":"2020-08-31T13:20:34.979362756Z","streamType":"stdout","text":"ESTAFETTE_EXTENSION_CUSTOM_PROPERTIES: {}\n"},{"line":22,"timestamp":"2020-08-31T13:20:34.979364592Z","streamType":"stdout","text":"ESTAFETTE_EXTENSION_CUSTOM_PROPERTIES_YAML: {}\n"},{"line":23,"timestamp":"2020-08-31T13:20:34.979365702Z","streamType":"stdout","text":"\n"},{"line":24,"timestamp":"2020-08-31T13:20:34.979367806Z","streamType":"stdout","text":"ESTAFETTE_GIT_BRANCH: master\n"},{"line":25,"timestamp":"2020-08-31T13:20:34.979369698Z","streamType":"stdout","text":"ESTAFETTE_GIT_BRANCH_DNS_SAFE: master\n"},{"line":26,"timestamp":"2020-08-31T13:20:34.97937101Z","streamType":"stdout","text":"ESTAFETTE_GIT_FULLNAME: estafette/estafette-ci-builder\n"},{"line":27,"timestamp":"2020-08-31T13:20:34.979372289Z","streamType":"stdout","text":"ESTAFETTE_GIT_FULLNAME_DNS_SAFE: estafette-estafette-ci-builder\n"},{"line":28,"timestamp":"2020-08-31T13:20:34.979373333Z","streamType":"stdout","text":"ESTAFETTE_GIT_NAME: estafette-ci-builder\n"},{"line":29,"timestamp":"2020-08-31T13:20:34.979374392Z","streamType":"stdout","text":"ESTAFETTE_GIT_NAME_DNS_SAFE: estafette-ci-builder\n"},{"line":30,"timestamp":"2020-08-31T13:20:34.979375459Z","streamType":"stdout","text":"ESTAFETTE_GIT_OWNER: estafette\n"},{"line":31,"timestamp":"2020-08-31T13:20:34.979376291Z","streamType":"stdout","text":"ESTAFETTE_GIT_OWNER_DNS_SAFE: estafette\n"},{"line":32,"timestamp":"2020-08-31T13:20:34.979377733Z","streamType":"stdout","text":"ESTAFETTE_GIT_REVISION: fedcec403962470e21b635cb2da34d027e634858\n"},{"line":33,"timestamp":"2020-08-31T13:20:34.979379141Z","streamType":"stdout","text":"ESTAFETTE_GIT_REVISION_DNS_SAFE: fedcec403962470e21b635cb2da34d027e634858\n"},{"line":34,"timestamp":"2020-08-31T13:20:34.97938Z","streamType":"stdout","text":"ESTAFETTE_GIT_SOURCE: github.com\n"},{"line":35,"timestamp":"2020-08-31T13:20:34.979380798Z","streamType":"stdout","text":"ESTAFETTE_GIT_SOURCE_DNS_SAFE: github-com\n"},{"line":36,"timestamp":"2020-08-31T13:20:34.979387145Z","streamType":"stdout","text":"ESTAFETTE_LABEL_APP_GROUP: estafette-ci\n"},{"line":37,"timestamp":"2020-08-31T13:20:34.979387873Z","streamType":"stdout","text":"ESTAFETTE_LABEL_APP_GROUP_DNS_SAFE: estafette-ci\n"},{"line":38,"timestamp":"2020-08-31T13:20:34.979388599Z","streamType":"stdout","text":"ESTAFETTE_LABEL_LANGUAGE: golang\n"},{"line":39,"timestamp":"2020-08-31T13:20:34.979389287Z","streamType":"stdout","text":"ESTAFETTE_LABEL_LANGUAGE_DNS_SAFE: golang\n"},{"line":40,"timestamp":"2020-08-31T13:20:34.979390102Z","streamType":"stdout","text":"ESTAFETTE_LABEL_TEAM: estafette\n"},{"line":41,"timestamp":"2020-08-31T13:20:34.979390766Z","streamType":"stdout","text":"ESTAFETTE_LABEL_TEAM_DNS_SAFE: estafette\n"},{"line":42,"timestamp":"2020-08-31T13:20:34.979391837Z","streamType":"stdout","text":"ESTAFETTE_LOG_FORMAT: console\n"},{"line":43,"timestamp":"2020-08-31T13:20:34.980248865Z","streamType":"stdout","text":"ESTAFETTE_STAGES: [{\"Name\":\"injected-before\",\"ContainerImage\":\"\",\"Shell\":\"\",\"WorkingDirectory\":\"\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":[{\"Name\":\"git-clone\",\"ContainerImage\":\"extensions/git-clone:stable\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":null},{\"Name\":\"set-pending-build-status\",\"ContainerImage\":\"extensions/github-status:stable\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"status\":\"pending\"}},{\"Name\":\"envvars\",\"ContainerImage\":\"extensions/envvars:stable\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{}}],\"Services\":null,\"CustomProperties\":null},{\"Name\":\"build\",\"ContainerImage\":\"golang:1.15.0-alpine3.12\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":[\"go test ./...\",\"go build -v -ldflags \\\"-X main.appgroup=estafette-ci -X main.app=estafette-ci-builder -X main.version=0.0.683 -X main.revision=fedcec403962470e21b635cb2da34d027e634858 -X main.branch=master -X main.buildDate=2020-08-31T13:20:32Z\\\" -o ./publish/estafette-ci-builder\"],\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":{\"CGO_ENABLED\":\"0\",\"GOARCH\":\"amd64\",\"GOOS\":\"linux\"},\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"bake-all\",\"ContainerImage\":\"\",\"Shell\":\"\",\"WorkingDirectory\":\"\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":[{\"Name\":\"bake\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"build\",\"copy\":[\"builder/templates\"],\"dontExpand\":[\"ESTAFETTE_WORKDIR\"],\"no-cache\":true,\"path\":\"./publish\",\"repositories\":[\"estafette\"]}},{\"Name\":\"bake-gocd-agent\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"build\",\"copy\":[\"builder/templates\"],\"dockerfile\":\"Dockerfile.gocd\",\"no-cache\":true,\"path\":\"./publish\",\"repositories\":[\"estafette\"],\"versionTagSuffix\":\"gocd\"}}],\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"dive-and-trivy-all\",\"ContainerImage\":\"\",\"Shell\":\"\",\"WorkingDirectory\":\"\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":[{\"Name\":\"dive\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"dive\",\"repositories\":[\"estafette\"]}},{\"Name\":\"dive-gocd-agent\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"dive\",\"repositories\":[\"estafette\"],\"versionTagSuffix\":\"gocd\"}},{\"Name\":\"trivy\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"trivy\",\"repositories\":[\"estafette\"]}},{\"Name\":\"trivy-gocd-agent\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"trivy\",\"repositories\":[\"estafette\"],\"versionTagSuffix\":\"gocd\"}}],\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"clean-working-directory\",\"ContainerImage\":\"golang:1.15.0-alpine3.12\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":[\"rm -rf ..?* .[!.]* *\"],\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"test\",\"ContainerImage\":\"estafette/estafette-ci-builder:0.0.683\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":{\"BUILDER_CONFIG\":\"{ \\\"action\\\":\\\"build\\\", \\\"track\\\":\\\"dev\\\", \\\"dindMtu\\\":\\\"1460\\\", \\\"dindBip\\\":\\\"192.168.3.1/24\\\", \\\"dindNetwork\\\":{ \\\"name\\\":\\\"estafette-integration\\\", \\\"subnet\\\":\\\"192.168.4.1/24\\\", \\\"gateway\\\":\\\"192.168.4.1\\\" }, \\\"manifest\\\":{ \\\"Builder\\\":{ \\\"Track\\\":\\\"stable\\\", \\\"OperatingSystem\\\":\\\"linux\\\" }, \\\"Labels\\\":{ \\\"app\\\":\\\"estafette-ci-builder\\\", \\\"app-group\\\":\\\"estafette-ci\\\", \\\"language\\\":\\\"golang\\\", \\\"team\\\":\\\"estafette-team\\\" }, \\\"Version\\\":{ \\\"SemVer\\\":{ \\\"Major\\\":0, \\\"Minor\\\":0, \\\"Patch\\\":\\\"{{auto}}\\\", \\\"LabelTemplate\\\":\\\"{{branch}}\\\", \\\"ReleaseBranch\\\":\\\"master\\\" }, \\\"Custom\\\":null }, \\\"GlobalEnvVars\\\":null, \\\"Stages\\\":[ { \\\"Name\\\":\\\"services-test\\\", \\\"ContainerImage\\\":\\\"alpine:latest\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"WorkingDirectory\\\":\\\"/estafette-work\\\", \\\"Commands\\\": [ \\\"route\\\", \\\"ip addr show eth0\\\", \\\"cat /etc/hosts\\\", \\\"cat /etc/resolv.conf\\\", \\\"apk add curl\\\", \\\"curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused http://nginx:80/\\\" ], \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"EnvVars\\\":null, \\\"AutoInjected\\\":false, \\\"Retries\\\":0, \\\"Services\\\": [ { \\\"Name\\\": \\\"nginx\\\", \\\"ContainerImage\\\": \\\"nginx:alpine\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"Readiness\\\": { \\\"Path\\\": \\\"/\\\", \\\"TimeoutSeconds\\\": 30, \\\"Hostname\\\": \\\"nginx\\\", \\\"Port\\\": 80, \\\"Protocol\\\": \\\"http\\\" } }, { \\\"Name\\\": \\\"cockroachdb\\\", \\\"ContainerImage\\\": \\\"cockroachdb/cockroach:v19.2.0\\\", \\\"Commands\\\":[ \\\"/cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\\\" ], \\\"EnvVars\\\":{ \\\"COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING\\\":\\\"true\\\" }, \\\"Shell\\\":\\\"/bin/sh\\\", \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"Readiness\\\": { \\\"Path\\\": \\\"/health?ready=1\\\", \\\"TimeoutSeconds\\\": 30, \\\"Hostname\\\": \\\"cockroachdb\\\", \\\"Port\\\": 8080, \\\"Protocol\\\": \\\"http\\\" } } ] }, { \\\"Name\\\":\\\"git-clone\\\", \\\"ContainerImage\\\":\\\"extensions/git-clone:dev\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"WorkingDirectory\\\":\\\"/estafette-work\\\", \\\"Commands\\\":null, \\\"shallow\\\": false, \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"EnvVars\\\":null, \\\"AutoInjected\\\":true, \\\"Retries\\\":0, \\\"CustomProperties\\\":null }, { \\\"Name\\\":\\\"parallel-builds\\\", \\\"ContainerImage\\\":\\\"\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"WorkingDirectory\\\":\\\"/estafette-work\\\", \\\"Commands\\\":[], \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"EnvVars\\\":{}, \\\"AutoInjected\\\":false, \\\"Retries\\\":0, \\\"CustomProperties\\\":null, \\\"ParallelStages\\\":[ { \\\"Name\\\":\\\"buildA\\\", \\\"ContainerImage\\\": \\\"golang:1.14.0-alpine3.11\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"WorkingDirectory\\\":\\\"/estafette-work\\\", \\\"Commands\\\":[ \\\"go test ./...\\\", \\\"go build -v -ldflags \\\\\\\"-X main.version=0.0.683 -X main.revision=fedcec403962470e21b635cb2da34d027e634858 -X main.branch=master -X main.buildDate=2020-08-31T13:20:32Z\\\\\\\" -o ./publish/estafette-ci-builder\\\", \\\"echo ${PWD}\\\", \\\"ls -latr\\\", \\\"ls -latr ./publish\\\" ], \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"EnvVars\\\":{ \\\"CGO_ENABLED\\\":\\\"0\\\", \\\"GOOS\\\":\\\"linux\\\", \\\"GOARCH\\\":\\\"amd64\\\" }, \\\"AutoInjected\\\":false, \\\"Retries\\\":0, \\\"CustomProperties\\\":null }, { \\\"Name\\\":\\\"buildB\\\", \\\"ContainerImage\\\":\\\"alpine:3.10\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"WorkingDirectory\\\":\\\"/estafette-work\\\", \\\"Commands\\\":[ \\\"echo hi\\\" ], \\\"When\\\":\\\"status == 'succeeded'\\\" } ] }, { \\\"Name\\\":\\\"bake-estafette\\\", \\\"ContainerImage\\\":\\\"extensions/docker:dev\\\", \\\"Shell\\\":\\\"/bin/sh\\\", \\\"WorkingDirectory\\\":\\\"/estafette-work\\\", \\\"Commands\\\":null, \\\"When\\\":\\\"status == 'succeeded'\\\", \\\"EnvVars\\\":null, \\\"AutoInjected\\\":false, \\\"Retries\\\":0, \\\"CustomProperties\\\":{ \\\"action\\\":\\\"build\\\", \\\"no-cache\\\":true, \\\"tag\\\":\\\"testtag\\\", \\\"expand-variables\\\":false, \\\"path\\\":\\\"./publish\\\", \\\"repositories\\\":[\\\"estafette\\\"] } } ], \\\"Releases\\\":null }, \\\"jobName\\\":\\\"build-estafette-estafette-ci-builder-391855387650326531\\\", \\\"ciServer\\\":{ \\\"baseUrl\\\":\\\"https://httpstat.us/200\\\", \\\"builderEventsUrl\\\":\\\"https://httpstat.us/200\\\", \\\"postLogsUrl\\\":\\\"https://httpstat.us/200\\\", \\\"jwt\\\":\\\"\\\" }, \\\"buildParams\\\":{ \\\"buildID\\\":391855387650326531 }, \\\"git\\\":{ \\\"repoSource\\\":\\\"github.com\\\", \\\"repoOwner\\\":\\\"estafette\\\", \\\"repoName\\\":\\\"estafette-ci-builder\\\", \\\"repoBranch\\\":\\\"integration-test\\\", \\\"repoRevision\\\":\\\"4ba7791566e3f6f69e8542183168ec9b1ad03ca7\\\" }, \\\"buildVersion\\\":{ \\\"version\\\":\\\"0.0.0-integration-test\\\", \\\"major\\\":0, \\\"minor\\\":0, \\\"patch\\\":\\\"0\\\", \\\"autoincrement\\\":0 }, \\\"credentials\\\":null, \\\"trustedImages\\\":[ { \\\"path\\\":\\\"extensions/docker\\\", \\\"runDocker\\\":true }, { \\\"path\\\":\\\"estafette/estafette-ci-builder\\\", \\\"runPrivileged\\\":true }, { \\\"path\\\":\\\"golang\\\", \\\"runDocker\\\":true, \\\"allowCommands\\\":true }, { \\\"path\\\":\\\"extensions/git-clone\\\" }, { \\\"path\\\":\\\"bsycorp/kind\\\", \\\"runPrivileged\\\":true } ] }\",\"ESTAFETTE_LOG_FORMAT\":\"console\",\"SECRET_DECRYPTION_KEY\":\"8c6E5e7R8ameE2L6qxEcN5Yc3Q7P4Yd4\"},\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"push-all\",\"ContainerImage\":\"\",\"Shell\":\"\",\"WorkingDirectory\":\"\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":[{\"Name\":\"push-to-docker-hub\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"push\",\"repositories\":[\"estafette\"]}},{\"Name\":\"push-gocd-agent-to-docker-hub\",\"ContainerImage\":\"extensions/docker:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"action\":\"push\",\"repositories\":[\"estafette\"],\"versionTagSuffix\":\"gocd\"}}],\"Services\":null,\"CustomProperties\":{}},{\"Name\":\"slack-notify\",\"ContainerImage\":\"extensions/slack-build-status:dev\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded' || status == 'failed'\",\"EnvVars\":null,\"AutoInjected\":false,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":{\"channels\":[\"#build-status\"],\"workspace\":\"estafette\"}},{\"Name\":\"injected-after\",\"ContainerImage\":\"\",\"Shell\":\"\",\"WorkingDirectory\":\"\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":[{\"Name\":\"set-build-status\",\"ContainerImage\":\"extensions/github-status:stable\",\"Shell\":\"/bin/sh\",\"WorkingDirectory\":\"/estafette-work\",\"Commands\":null,\"RunCommandsInForeground\":false,\"When\":\"status == 'succeeded' || status == 'failed'\",\"EnvVars\":null,\"AutoInjected\":true,\"Retries\":0,\"ParallelStages\":null,\"Services\":null,\"CustomProperties\":null}],\"Services\":null,\"CustomProperties\":null}]\n"},{"line":44,"timestamp":"2020-08-31T13:20:34.980252414Z","streamType":"stdout","text":"ESTAFETTE_STAGES_DNS_SAFE: name-injected-before-containerimage-shell-workingdirectory-comm\n"},{"line":45,"timestamp":"2020-08-31T13:20:34.980254867Z","streamType":"stdout","text":"ESTAFETTE_STAGE_NAME: envvars\n"},{"line":46,"timestamp":"2020-08-31T13:20:34.980256389Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_BRANCH: master\n"},{"line":47,"timestamp":"2020-08-31T13:20:34.980257496Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_BRANCH_DNS_SAFE: master\n"},{"line":48,"timestamp":"2020-08-31T13:20:34.980258276Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_EVENT: push\n"},{"line":49,"timestamp":"2020-08-31T13:20:34.980259032Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_EVENT_DNS_SAFE: push\n"},{"line":50,"timestamp":"2020-08-31T13:20:34.980271359Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_REPOSITORY: github.com/estafette/estafette-ci-builder\n"},{"line":51,"timestamp":"2020-08-31T13:20:34.980273764Z","streamType":"stdout","text":"ESTAFETTE_TRIGGER_GIT_REPOSITORY_DNS_SAFE: github-com-estafette-estafette-ci-builder\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"set-pending-build-status","depth":1,"image":{"name":"extensions/github-status","tag":"stable","isPulled":false,"imageSize":12649209,"pullDuration":1993986390,"isTrusted":true},"duration":1777299459,"logLines":[{"line":1,"timestamp":"2020-08-31T13:20:35.227330047Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-github-status\u001b[0m version \u001b[1m0.1.46\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:32:11Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m6db9d43ca763f9104293785ed2c594320dd7946a\n"},{"line":2,"timestamp":"2020-08-31T13:20:35.227337323Z","streamType":"stdout","text":"Setting logs url https://estafette.***.com/pipelines/github.com/estafette/estafette-ci-builder/builds/585923392308051979/logs\n"},{"line":3,"timestamp":"2020-08-31T13:20:35.611004828Z","streamType":"stdout","text":"Received successful response for 'https://api.github.com/repos/estafette/estafette-ci-builder/statuses/fedcec403962470e21b635cb2da34d027e634858' Github api call with status code 201\n"},{"line":4,"timestamp":"2020-08-31T13:20:35.611028377Z","streamType":"stdout","text":"Finished estafette-extension-github-status...\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true},{"step":"git-clone","depth":1,"image":{"name":"extensions/git-clone","tag":"stable","isPulled":false,"imageSize":33645729,"pullDuration":2820433448,"isTrusted":true},"duration":3376204654,"logLines":[{"line":1,"timestamp":"2020-08-31T13:20:35.957357149Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-git-clone\u001b[0m version \u001b[1m0.1.81\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-04-01T15:00:17Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m50245b030d6c4f5911a8332aeef550ca39da8115\n"},{"line":2,"timestamp":"2020-08-31T13:20:35.957370347Z","streamType":"stdout","text":"Unmarshalling injected github api token credentials\n"},{"line":3,"timestamp":"2020-08-31T13:20:35.95737498Z","streamType":"stdout","text":"Cloning git repository estafette-ci-builder to branch master and revision fedcec403962470e21b635cb2da34d027e634858 with shallow clone is true and depth 50...\n"},{"line":4,"timestamp":"2020-08-31T13:20:35.957380012Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e git clone --depth=50 --branch=master https://x-access-token:***@github.com/estafette/estafette-ci-builder /estafette-work\u001b[0m\n"},{"line":5,"timestamp":"2020-08-31T13:20:35.95738155Z","streamType":"stderr","text":"Cloning into '/estafette-work'...\n"},{"line":6,"timestamp":"2020-08-31T13:20:38.113030321Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e git checkout --quiet --force fedcec403962470e21b635cb2da34d027e634858\u001b[0m\n"},{"line":7,"timestamp":"2020-08-31T13:20:38.11800179Z","streamType":"stdout","text":"Finished cloning git repository estafette-ci-builder to branch master and revision fedcec403962470e21b635cb2da34d027e634858 with shallow clone is true and depth 50\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true}]},{"step":"build","image":{"name":"golang","tag":"1.15.0-alpine3.12","isPulled":false,"imageSize":402395096,"pullDuration":7333616122},"duration":17587538331,"logLines":[{"line":1,"timestamp":"2020-08-31T13:20:50.044680724Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e go test ./... \u0026\u001b[0m\n"},{"line":2,"timestamp":"2020-08-31T13:20:50.245928405Z","streamType":"stderr","text":"go: downloading github.com/estafette/estafette-foundation v0.0.54\n"},{"line":3,"timestamp":"2020-08-31T13:20:50.24650775Z","streamType":"stderr","text":"go: downloading github.com/estafette/estafette-ci-contracts v0.0.219\n"},{"line":4,"timestamp":"2020-08-31T13:20:50.246517273Z","streamType":"stderr","text":"go: downloading github.com/estafette/estafette-ci-crypt v0.0.39\n"},{"line":5,"timestamp":"2020-08-31T13:20:50.24652116Z","streamType":"stderr","text":"go: downloading github.com/rs/zerolog v1.17.2\n"},{"line":6,"timestamp":"2020-08-31T13:20:50.250840351Z","streamType":"stderr","text":"go: downloading github.com/Knetic/govaluate v3.0.0+incompatible\n"},{"line":7,"timestamp":"2020-08-31T13:20:50.251381063Z","streamType":"stderr","text":"go: downloading github.com/sethgrid/pester v0.0.0-20190127155807-68a33a018ad0\n"},{"line":8,"timestamp":"2020-08-31T13:20:50.258736639Z","streamType":"stderr","text":"go: downloading gopkg.in/yaml.v2 v2.2.2\n"},{"line":9,"timestamp":"2020-08-31T13:20:50.259157953Z","streamType":"stderr","text":"go: downloading github.com/uber/jaeger-client-go v2.20.1+incompatible\n"},{"line":10,"timestamp":"2020-08-31T13:20:50.27035038Z","streamType":"stderr","text":"go: downloading github.com/docker/engine v0.0.0-20190822205725-ed20165a37b4\n"},{"line":11,"timestamp":"2020-08-31T13:20:50.27329916Z","streamType":"stderr","text":"go: downloading github.com/opentracing/opentracing-go v1.1.0\n"},{"line":12,"timestamp":"2020-08-31T13:20:50.275205657Z","streamType":"stderr","text":"go: downloading github.com/prometheus/client_golang v0.9.2\n"},{"line":13,"timestamp":"2020-08-31T13:20:50.287404799Z","streamType":"stderr","text":"go: downloading github.com/estafette/estafette-ci-manifest v0.1.155\n"},{"line":14,"timestamp":"2020-08-31T13:20:50.301974666Z","streamType":"stderr","text":"go: downloading github.com/olekukonko/tablewriter v0.0.1\n"},{"line":15,"timestamp":"2020-08-31T13:20:50.31178204Z","streamType":"stderr","text":"go: downloading github.com/opentracing-contrib/go-stdlib v0.0.0-20190519235532-cf7a6c988dc9\n"},{"line":16,"timestamp":"2020-08-31T13:20:50.314666493Z","streamType":"stderr","text":"go: downloading github.com/alecthomas/kingpin v2.2.6+incompatible\n"},{"line":17,"timestamp":"2020-08-31T13:20:50.325055863Z","streamType":"stderr","text":"go: downloading github.com/mattn/go-runewidth v0.0.4\n"},{"line":18,"timestamp":"2020-08-31T13:20:50.328277816Z","streamType":"stderr","text":"go: downloading github.com/google/uuid v1.1.1\n"},{"line":19,"timestamp":"2020-08-31T13:20:50.334927946Z","streamType":"stderr","text":"go: downloading github.com/robfig/cron v0.0.0-20180505203441-b41be1df6967\n"},{"line":20,"timestamp":"2020-08-31T13:20:50.342990284Z","streamType":"stderr","text":"go: downloading github.com/stretchr/testify v1.4.0\n"},{"line":21,"timestamp":"2020-08-31T13:20:50.348023441Z","streamType":"stderr","text":"go: downloading github.com/logrusorgru/aurora v0.0.0-20191116043053-66b7ad493a23\n"},{"line":22,"timestamp":"2020-08-31T13:20:50.363818701Z","streamType":"stderr","text":"go: downloading github.com/prometheus/client_model v0.0.0-20190115171406-56726106282f\n"},{"line":23,"timestamp":"2020-08-31T13:20:50.367946697Z","streamType":"stderr","text":"go: downloading github.com/prometheus/common v0.2.0\n"},{"line":24,"timestamp":"2020-08-31T13:20:50.371401623Z","streamType":"stderr","text":"go: downloading github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973\n"},{"line":25,"timestamp":"2020-08-31T13:20:50.372359596Z","streamType":"stderr","text":"go: downloading github.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1\n"},{"line":26,"timestamp":"2020-08-31T13:20:50.381513808Z","streamType":"stderr","text":"go: downloading github.com/golang/protobuf v1.2.0\n"},{"line":27,"timestamp":"2020-08-31T13:20:50.391073981Z","streamType":"stderr","text":"go: downloading go.uber.org/atomic v1.5.1\n"},{"line":28,"timestamp":"2020-08-31T13:20:50.395883872Z","streamType":"stderr","text":"go: downloading github.com/uber/jaeger-lib v2.2.0+incompatible\n"},{"line":29,"timestamp":"2020-08-31T13:20:50.404422434Z","streamType":"stderr","text":"go: downloading github.com/davecgh/go-spew v1.1.1\n"},{"line":30,"timestamp":"2020-08-31T13:20:50.420214242Z","streamType":"stderr","text":"go: downloading github.com/alecthomas/units v0.0.0-20190910110746-680d30ca3117\n"},{"line":31,"timestamp":"2020-08-31T13:20:50.427893103Z","streamType":"stderr","text":"go: downloading github.com/pkg/errors v0.8.1\n"},{"line":32,"timestamp":"2020-08-31T13:20:50.428333748Z","streamType":"stderr","text":"go: downloading github.com/fsnotify/fsnotify v1.4.7\n"},{"line":33,"timestamp":"2020-08-31T13:20:50.428724516Z","streamType":"stderr","text":"go: downloading github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751\n"},{"line":34,"timestamp":"2020-08-31T13:20:50.429301551Z","streamType":"stderr","text":"go: downloading github.com/pmezard/go-difflib v1.0.0\n"},{"line":35,"timestamp":"2020-08-31T13:20:50.442953248Z","streamType":"stderr","text":"go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1\n"},{"line":36,"timestamp":"2020-08-31T13:20:50.452213658Z","streamType":"stderr","text":"go: downloading golang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a\n"},{"line":37,"timestamp":"2020-08-31T13:20:50.848678022Z","streamType":"stderr","text":"go: downloading github.com/docker/distribution v2.7.1+incompatible\n"},{"line":38,"timestamp":"2020-08-31T13:20:50.848698044Z","streamType":"stderr","text":"go: downloading github.com/sirupsen/logrus v1.4.1\n"},{"line":39,"timestamp":"2020-08-31T13:20:50.849210659Z","streamType":"stderr","text":"go: downloading github.com/docker/go-connections v0.4.0\n"},{"line":40,"timestamp":"2020-08-31T13:20:50.849814902Z","streamType":"stderr","text":"go: downloading github.com/gogo/protobuf v1.3.0\n"},{"line":41,"timestamp":"2020-08-31T13:20:50.849820985Z","streamType":"stderr","text":"go: downloading google.golang.org/grpc v1.23.1\n"},{"line":42,"timestamp":"2020-08-31T13:20:50.850223104Z","streamType":"stderr","text":"go: downloading github.com/docker/go-units v0.4.0\n"},{"line":43,"timestamp":"2020-08-31T13:20:50.850229345Z","streamType":"stderr","text":"go: downloading github.com/opencontainers/image-spec v1.0.1\n"},{"line":44,"timestamp":"2020-08-31T13:20:50.87088307Z","streamType":"stderr","text":"go: downloading github.com/opencontainers/go-digest v1.0.0-rc1\n"},{"line":45,"timestamp":"2020-08-31T13:20:50.880222664Z","streamType":"stderr","text":"go: downloading golang.org/x/net v0.0.0-20190724013045-ca1201d0de80\n"},{"line":46,"timestamp":"2020-08-31T13:20:51.10374052Z","streamType":"stderr","text":"go: downloading google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8\n"},{"line":47,"timestamp":"2020-08-31T13:20:59.897211606Z","streamType":"stdout","text":"?   \tgithub.com/estafette/estafette-ci-builder\t[no test files]\n"},{"line":48,"timestamp":"2020-08-31T13:21:00.350354233Z","streamType":"stdout","text":"ok  \tgithub.com/estafette/estafette-ci-builder/builder\t0.356s\n"},{"line":49,"timestamp":"2020-08-31T13:21:00.414223559Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e go build -v -ldflags \"-X main.appgroup=estafette-ci -X main.app=estafette-ci-builder -X main.version=0.0.683 -X main.revision=fedcec403962470e21b635cb2da34d027e634858 -X main.branch=master -X main.buildDate=2020-08-31T13:20:32Z\" -o ./publish/estafette-ci-builder\u001b[0m\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"bake-all","image":null,"duration":41382263393,"logLines":null,"exitCode":0,"status":"SUCCEEDED","nestedSteps":[{"step":"bake-gocd-agent","depth":1,"image":{"name":"extensions/docker","tag":"dev","isPulled":false,"imageSize":128189071,"pullDuration":3921319166,"isTrusted":true},"duration":37458149375,"logLines":[{"line":1,"timestamp":"2020-08-31T13:21:08.004933828Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:21:08.004940512Z","streamType":"stdout","text":"Ensuring build directory ./publish exists\n"},{"line":3,"timestamp":"2020-08-31T13:21:08.004951888Z","streamType":"stdout","text":"Copying directory builder/templates to ./publish\n"},{"line":4,"timestamp":"2020-08-31T13:21:08.004964148Z","streamType":"stdout","text":"Reading dockerfile content from Dockerfile.gocd...\n"},{"line":5,"timestamp":"2020-08-31T13:21:08.004965898Z","streamType":"stdout","text":"Expanding environment variables in Dockerfile...\n"},{"line":6,"timestamp":"2020-08-31T13:21:08.00496711Z","streamType":"stdout","text":"Writing Dockerfile to publish/Dockerfile.gocd...\n"},{"line":7,"timestamp":"2020-08-31T13:21:08.005112851Z","streamType":"stdout","text":"Listing directory ./publish content\n"},{"line":8,"timestamp":"2020-08-31T13:21:08.005114507Z","streamType":"stdout","text":"- Dockerfile\n"},{"line":9,"timestamp":"2020-08-31T13:21:08.005116076Z","streamType":"stdout","text":"- Dockerfile.gocd\n"},{"line":10,"timestamp":"2020-08-31T13:21:08.005117097Z","streamType":"stdout","text":"- estafette-ci-builder\n"},{"line":11,"timestamp":"2020-08-31T13:21:08.005117799Z","streamType":"stdout","text":"- templates/\n"},{"line":12,"timestamp":"2020-08-31T13:21:08.005120883Z","streamType":"stdout","text":"Filtering credentials for images [***/gocd-agent:20.4.0-alpine]\n"},{"line":13,"timestamp":"2020-08-31T13:21:08.005122449Z","streamType":"stdout","text":"Filtered 9 container-registry credentials down to 1\n"},{"line":14,"timestamp":"2020-08-31T13:21:08.005123608Z","streamType":"stdout","text":"Logging in to repository '***'\n"},{"line":15,"timestamp":"2020-08-31T13:21:09.140366153Z","streamType":"stdout","text":"Pulling container image ***/gocd-agent:20.4.0-alpine\n"},{"line":16,"timestamp":"2020-08-31T13:21:09.140376102Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker pull ***/gocd-agent:20.4.0-alpine\u001b[0m\n"},{"line":17,"timestamp":"2020-08-31T13:21:10.450890863Z","streamType":"stdout","text":"20.4.0-alpine: Pulling from ***/gocd-agent\n"},{"line":18,"timestamp":"2020-08-31T13:21:10.450903468Z","streamType":"stdout","text":"df20fa9351a1: Already exists\n"},{"line":19,"timestamp":"2020-08-31T13:21:10.456860712Z","streamType":"stdout","text":"25ad7478873d: Pulling fs layer\n"},{"line":20,"timestamp":"2020-08-31T13:21:10.456869107Z","streamType":"stdout","text":"4684f6177b5d: Pulling fs layer\n"},{"line":21,"timestamp":"2020-08-31T13:21:10.456871179Z","streamType":"stdout","text":"1d105a01b85c: Pulling fs layer\n"},{"line":22,"timestamp":"2020-08-31T13:21:10.456872563Z","streamType":"stdout","text":"d87316014961: Pulling fs layer\n"},{"line":23,"timestamp":"2020-08-31T13:21:10.456873525Z","streamType":"stdout","text":"ae7f709568fa: Pulling fs layer\n"},{"line":24,"timestamp":"2020-08-31T13:21:10.456874494Z","streamType":"stdout","text":"63f9e63bc2f8: Pulling fs layer\n"},{"line":25,"timestamp":"2020-08-31T13:21:10.456875985Z","streamType":"stdout","text":"b9da4e3fe467: Pulling fs layer\n"},{"line":26,"timestamp":"2020-08-31T13:21:10.456876875Z","streamType":"stdout","text":"dc1e1be64f29: Pulling fs layer\n"},{"line":27,"timestamp":"2020-08-31T13:21:10.456877903Z","streamType":"stdout","text":"ce9314d7e899: Pulling fs layer\n"},{"line":28,"timestamp":"2020-08-31T13:21:10.456878914Z","streamType":"stdout","text":"8d99f0faa015: Pulling fs layer\n"},{"line":29,"timestamp":"2020-08-31T13:21:10.456879848Z","streamType":"stdout","text":"0b0b72fd1c6c: Pulling fs layer\n"},{"line":30,"timestamp":"2020-08-31T13:21:10.456880689Z","streamType":"stdout","text":"90764be86238: Pulling fs layer\n"},{"line":31,"timestamp":"2020-08-31T13:21:10.457226925Z","streamType":"stdout","text":"d87316014961: Waiting\n"},{"line":32,"timestamp":"2020-08-31T13:21:10.457237622Z","streamType":"stdout","text":"798f9394ba44: Pulling fs layer\n"},{"line":33,"timestamp":"2020-08-31T13:21:10.457239212Z","streamType":"stdout","text":"78829545a246: Pulling fs layer\n"},{"line":34,"timestamp":"2020-08-31T13:21:10.45724017Z","streamType":"stdout","text":"136d79e27052: Pulling fs layer\n"},{"line":35,"timestamp":"2020-08-31T13:21:10.457241077Z","streamType":"stdout","text":"c3b7acc6fb35: Pulling fs layer\n"},{"line":36,"timestamp":"2020-08-31T13:21:10.457241789Z","streamType":"stdout","text":"ae7f709568fa: Waiting\n"},{"line":37,"timestamp":"2020-08-31T13:21:10.457242716Z","streamType":"stdout","text":"23bb2e2742e4: Pulling fs layer\n"},{"line":38,"timestamp":"2020-08-31T13:21:10.45724346Z","streamType":"stdout","text":"c3f81a7aab85: Pulling fs layer\n"},{"line":39,"timestamp":"2020-08-31T13:21:10.457244129Z","streamType":"stdout","text":"205453e1d0dd: Pulling fs layer\n"},{"line":40,"timestamp":"2020-08-31T13:21:10.45724483Z","streamType":"stdout","text":"63f9e63bc2f8: Waiting\n"},{"line":41,"timestamp":"2020-08-31T13:21:10.457292338Z","streamType":"stdout","text":"78829545a246: Waiting\n"},{"line":42,"timestamp":"2020-08-31T13:21:10.457319541Z","streamType":"stdout","text":"b9da4e3fe467: Waiting\n"},{"line":43,"timestamp":"2020-08-31T13:21:10.457321087Z","streamType":"stdout","text":"136d79e27052: Waiting\n"},{"line":44,"timestamp":"2020-08-31T13:21:10.457330332Z","streamType":"stdout","text":"c3b7acc6fb35: Waiting\n"},{"line":45,"timestamp":"2020-08-31T13:21:10.457358201Z","streamType":"stdout","text":"dc1e1be64f29: Waiting\n"},{"line":46,"timestamp":"2020-08-31T13:21:10.457359598Z","streamType":"stdout","text":"23bb2e2742e4: Waiting\n"},{"line":47,"timestamp":"2020-08-31T13:21:10.457393287Z","streamType":"stdout","text":"ce9314d7e899: Waiting\n"},{"line":48,"timestamp":"2020-08-31T13:21:10.457402224Z","streamType":"stdout","text":"c3f81a7aab85: Waiting\n"},{"line":49,"timestamp":"2020-08-31T13:21:10.457437297Z","streamType":"stdout","text":"8d99f0faa015: Waiting\n"},{"line":50,"timestamp":"2020-08-31T13:21:10.457443456Z","streamType":"stdout","text":"205453e1d0dd: Waiting\n"},{"line":51,"timestamp":"2020-08-31T13:21:10.457444754Z","streamType":"stdout","text":"0b0b72fd1c6c: Waiting\n"},{"line":52,"timestamp":"2020-08-31T13:21:10.457446231Z","streamType":"stdout","text":"90764be86238: Waiting\n"},{"line":53,"timestamp":"2020-08-31T13:21:10.457459818Z","streamType":"stdout","text":"798f9394ba44: Waiting\n"},{"line":54,"timestamp":"2020-08-31T13:21:10.887903192Z","streamType":"stdout","text":"4684f6177b5d: Verifying Checksum\n"},{"line":55,"timestamp":"2020-08-31T13:21:10.887915573Z","streamType":"stdout","text":"4684f6177b5d: Download complete\n"},{"line":56,"timestamp":"2020-08-31T13:21:10.911399675Z","streamType":"stdout","text":"25ad7478873d: Download complete\n"},{"line":57,"timestamp":"2020-08-31T13:21:11.089258185Z","streamType":"stdout","text":"25ad7478873d: Pull complete\n"},{"line":58,"timestamp":"2020-08-31T13:21:11.158655351Z","streamType":"stdout","text":"4684f6177b5d: Pull complete\n"},{"line":59,"timestamp":"2020-08-31T13:21:11.345979323Z","streamType":"stdout","text":"ae7f709568fa: Verifying Checksum\n"},{"line":60,"timestamp":"2020-08-31T13:21:11.345990115Z","streamType":"stdout","text":"ae7f709568fa: Download complete\n"},{"line":61,"timestamp":"2020-08-31T13:21:11.348028949Z","streamType":"stdout","text":"1d105a01b85c: Verifying Checksum\n"},{"line":62,"timestamp":"2020-08-31T13:21:11.348038566Z","streamType":"stdout","text":"1d105a01b85c: Download complete\n"},{"line":63,"timestamp":"2020-08-31T13:21:11.761404052Z","streamType":"stdout","text":"63f9e63bc2f8: Verifying Checksum\n"},{"line":64,"timestamp":"2020-08-31T13:21:11.761413986Z","streamType":"stdout","text":"63f9e63bc2f8: Download complete\n"},{"line":65,"timestamp":"2020-08-31T13:21:11.785947428Z","streamType":"stdout","text":"dc1e1be64f29: Verifying Checksum\n"},{"line":66,"timestamp":"2020-08-31T13:21:11.785956046Z","streamType":"stdout","text":"dc1e1be64f29: Download complete\n"},{"line":67,"timestamp":"2020-08-31T13:21:11.894078351Z","streamType":"stdout","text":"b9da4e3fe467: Verifying Checksum\n"},{"line":68,"timestamp":"2020-08-31T13:21:11.894119023Z","streamType":"stdout","text":"b9da4e3fe467: Download complete\n"},{"line":69,"timestamp":"2020-08-31T13:21:12.197492275Z","streamType":"stdout","text":"ce9314d7e899: Verifying Checksum\n"},{"line":70,"timestamp":"2020-08-31T13:21:12.197876819Z","streamType":"stdout","text":"ce9314d7e899: Download complete\n"},{"line":71,"timestamp":"2020-08-31T13:21:12.202393268Z","streamType":"stdout","text":"8d99f0faa015: Download complete\n"},{"line":72,"timestamp":"2020-08-31T13:21:12.707865123Z","streamType":"stdout","text":"1d105a01b85c: Pull complete\n"},{"line":73,"timestamp":"2020-08-31T13:21:12.771476743Z","streamType":"stdout","text":"d87316014961: Pull complete\n"},{"line":74,"timestamp":"2020-08-31T13:21:12.833493221Z","streamType":"stdout","text":"ae7f709568fa: Pull complete\n"},{"line":75,"timestamp":"2020-08-31T13:21:12.892723727Z","streamType":"stdout","text":"63f9e63bc2f8: Pull complete\n"},{"line":76,"timestamp":"2020-08-31T13:21:12.905237072Z","streamType":"stdout","text":"0b0b72fd1c6c: Verifying Checksum\n"},{"line":77,"timestamp":"2020-08-31T13:21:12.905247066Z","streamType":"stdout","text":"0b0b72fd1c6c: Download complete\n"},{"line":78,"timestamp":"2020-08-31T13:21:13.10723678Z","streamType":"stdout","text":"b9da4e3fe467: Pull complete\n"},{"line":79,"timestamp":"2020-08-31T13:21:13.165665552Z","streamType":"stdout","text":"dc1e1be64f29: Pull complete\n"},{"line":80,"timestamp":"2020-08-31T13:21:13.225818125Z","streamType":"stdout","text":"ce9314d7e899: Pull complete\n"},{"line":81,"timestamp":"2020-08-31T13:21:13.296099963Z","streamType":"stdout","text":"8d99f0faa015: Pull complete\n"},{"line":82,"timestamp":"2020-08-31T13:21:13.357648651Z","streamType":"stdout","text":"0b0b72fd1c6c: Pull complete\n"},{"line":83,"timestamp":"2020-08-31T13:21:14.230232198Z","streamType":"stdout","text":"90764be86238: Download complete\n"},{"line":84,"timestamp":"2020-08-31T13:21:14.366991566Z","streamType":"stdout","text":"90764be86238: Pull complete\n"},{"line":85,"timestamp":"2020-08-31T13:21:14.724890741Z","streamType":"stdout","text":"136d79e27052: Verifying Checksum\n"},{"line":86,"timestamp":"2020-08-31T13:21:14.724911878Z","streamType":"stdout","text":"136d79e27052: Download complete\n"},{"line":87,"timestamp":"2020-08-31T13:21:15.734114643Z","streamType":"stdout","text":"c3b7acc6fb35: Verifying Checksum\n"},{"line":88,"timestamp":"2020-08-31T13:21:15.734125075Z","streamType":"stdout","text":"c3b7acc6fb35: Download complete\n"},{"line":89,"timestamp":"2020-08-31T13:21:16.413347893Z","streamType":"stdout","text":"78829545a246: Verifying Checksum\n"},{"line":90,"timestamp":"2020-08-31T13:21:16.413358136Z","streamType":"stdout","text":"78829545a246: Download complete\n"},{"line":91,"timestamp":"2020-08-31T13:21:16.768353894Z","streamType":"stdout","text":"23bb2e2742e4: Verifying Checksum\n"},{"line":92,"timestamp":"2020-08-31T13:21:16.768365416Z","streamType":"stdout","text":"23bb2e2742e4: Download complete\n"},{"line":93,"timestamp":"2020-08-31T13:21:16.78283947Z","streamType":"stdout","text":"798f9394ba44: Verifying Checksum\n"},{"line":94,"timestamp":"2020-08-31T13:21:16.782851047Z","streamType":"stdout","text":"798f9394ba44: Download complete\n"},{"line":95,"timestamp":"2020-08-31T13:21:16.924243069Z","streamType":"stdout","text":"c3f81a7aab85: Verifying Checksum\n"},{"line":96,"timestamp":"2020-08-31T13:21:16.924251627Z","streamType":"stdout","text":"c3f81a7aab85: Download complete\n"},{"line":97,"timestamp":"2020-08-31T13:21:17.767938193Z","streamType":"stdout","text":"205453e1d0dd: Verifying Checksum\n"},{"line":98,"timestamp":"2020-08-31T13:21:17.768047458Z","streamType":"stdout","text":"205453e1d0dd: Download complete\n"},{"line":99,"timestamp":"2020-08-31T13:21:17.834805107Z","streamType":"stdout","text":"798f9394ba44: Pull complete\n"},{"line":100,"timestamp":"2020-08-31T13:21:18.285488541Z","streamType":"stdout","text":"78829545a246: Pull complete\n"},{"line":101,"timestamp":"2020-08-31T13:21:18.351383393Z","streamType":"stdout","text":"136d79e27052: Pull complete\n"},{"line":102,"timestamp":"2020-08-31T13:21:18.431978054Z","streamType":"stdout","text":"c3b7acc6fb35: Pull complete\n"},{"line":103,"timestamp":"2020-08-31T13:21:18.501102185Z","streamType":"stdout","text":"23bb2e2742e4: Pull complete\n"},{"line":104,"timestamp":"2020-08-31T13:21:18.572903701Z","streamType":"stdout","text":"c3f81a7aab85: Pull complete\n"},{"line":105,"timestamp":"2020-08-31T13:21:18.634675328Z","streamType":"stdout","text":"205453e1d0dd: Pull complete\n"},{"line":106,"timestamp":"2020-08-31T13:21:18.642714376Z","streamType":"stdout","text":"Digest: sha256:edda8b4c1f05eb3aded2f73f10bd65696003bdb2974e03a58c805c5dc9ca8200\n"},{"line":107,"timestamp":"2020-08-31T13:21:18.647182236Z","streamType":"stdout","text":"Status: Downloaded newer image for ***/gocd-agent:20.4.0-alpine\n"},{"line":108,"timestamp":"2020-08-31T13:21:18.647868954Z","streamType":"stdout","text":"docker.io/***/gocd-agent:20.4.0-alpine\n"},{"line":109,"timestamp":"2020-08-31T13:21:18.650224933Z","streamType":"stdout","text":"Filtering credentials for images [estafette/estafette-ci-builder:0.0.683-gocd]\n"},{"line":110,"timestamp":"2020-08-31T13:21:18.650232134Z","streamType":"stdout","text":"Filtered 9 container-registry credentials down to 1\n"},{"line":111,"timestamp":"2020-08-31T13:21:18.650234453Z","streamType":"stdout","text":"Logging in to repository 'estafette'\n"},{"line":112,"timestamp":"2020-08-31T13:21:19.790805706Z","streamType":"stdout","text":"Building docker image estafette/estafette-ci-builder:0.0.683-gocd...\n"},{"line":113,"timestamp":"2020-08-31T13:21:19.790817413Z","streamType":"stdout","text":"\n"},{"line":114,"timestamp":"2020-08-31T13:21:19.790821315Z","streamType":"stdout","text":"FROM ***/gocd-agent:20.4.0-alpine\n"},{"line":115,"timestamp":"2020-08-31T13:21:19.790822662Z","streamType":"stdout","text":"\n"},{"line":116,"timestamp":"2020-08-31T13:21:19.790824925Z","streamType":"stdout","text":"MAINTAINER estafette.io\n"},{"line":117,"timestamp":"2020-08-31T13:21:19.79082573Z","streamType":"stdout","text":"\n"},{"line":118,"timestamp":"2020-08-31T13:21:19.790842071Z","streamType":"stdout","text":"LABEL maintainer=\"estafette.io\" \\\n"},{"line":119,"timestamp":"2020-08-31T13:21:19.790847369Z","streamType":"stdout","text":"      description=\"The estafette-ci-builder is the component that runs builds as defined in the .estafette.yaml manifest\"\n"},{"line":120,"timestamp":"2020-08-31T13:21:19.790848264Z","streamType":"stdout","text":"\n"},{"line":121,"timestamp":"2020-08-31T13:21:19.790849876Z","streamType":"stdout","text":"RUN mkdir -p /estafette-entrypoints \\\n"},{"line":122,"timestamp":"2020-08-31T13:21:19.790861948Z","streamType":"stdout","text":"    \u0026\u0026 docker version || true\n"},{"line":123,"timestamp":"2020-08-31T13:21:19.790869216Z","streamType":"stdout","text":"\n"},{"line":124,"timestamp":"2020-08-31T13:21:19.790870779Z","streamType":"stdout","text":"# copy builder\n"},{"line":125,"timestamp":"2020-08-31T13:21:19.790872561Z","streamType":"stdout","text":"COPY estafette-ci-builder /usr/bin/\n"},{"line":126,"timestamp":"2020-08-31T13:21:19.790873913Z","streamType":"stdout","text":"COPY templates /entrypoint-templates\n"},{"line":127,"timestamp":"2020-08-31T13:21:19.79088655Z","streamType":"stdout","text":"\n"},{"line":128,"timestamp":"2020-08-31T13:21:19.790888237Z","streamType":"stdout","text":"ENV ESTAFETTE_CI_SERVER=\"gocd\" \\\n"},{"line":129,"timestamp":"2020-08-31T13:21:19.790889757Z","streamType":"stdout","text":"    DOCKER_API_VERSION=\"1.38\" \\\n"},{"line":130,"timestamp":"2020-08-31T13:21:19.790891521Z","streamType":"stdout","text":"    ESTAFETTE_LOG_FORMAT=\"console\"\n"},{"line":131,"timestamp":"2020-08-31T13:21:19.790892325Z","streamType":"stdout","text":"\n"},{"line":132,"timestamp":"2020-08-31T13:21:19.79089759Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker build --no-cache --tag estafette/estafette-ci-builder:cache-master --tag estafette/estafette-ci-builder:0.0.683-gocd --file publish/Dockerfile.gocd ./publish\u001b[0m\n"},{"line":133,"timestamp":"2020-08-31T13:21:19.979989276Z","streamType":"stdout","text":"Sending build context to Docker daemon  17.19MB\r\r\n"},{"line":134,"timestamp":"2020-08-31T13:21:19.991037114Z","streamType":"stdout","text":"Step 1/7 : FROM ***/gocd-agent:20.4.0-alpine\n"},{"line":135,"timestamp":"2020-08-31T13:21:19.991771104Z","streamType":"stdout","text":" ---\u003e fbf9c4009d4e\n"},{"line":136,"timestamp":"2020-08-31T13:21:19.991857673Z","streamType":"stdout","text":"Step 2/7 : MAINTAINER estafette.io\n"},{"line":137,"timestamp":"2020-08-31T13:21:25.921977463Z","streamType":"stdout","text":" ---\u003e Running in b99a63de7d31\n"},{"line":138,"timestamp":"2020-08-31T13:21:26.214071919Z","streamType":"stdout","text":"Removing intermediate container b99a63de7d31\n"},{"line":139,"timestamp":"2020-08-31T13:21:26.214110965Z","streamType":"stdout","text":" ---\u003e 1b53d02d6688\n"},{"line":140,"timestamp":"2020-08-31T13:21:26.214117641Z","streamType":"stdout","text":"Step 3/7 : LABEL maintainer=\"estafette.io\"       description=\"The estafette-ci-builder is the component that runs builds as defined in the .estafette.yaml manifest\"\n"},{"line":141,"timestamp":"2020-08-31T13:21:26.433238793Z","streamType":"stdout","text":" ---\u003e Running in 02963297066b\n"},{"line":142,"timestamp":"2020-08-31T13:21:26.701939502Z","streamType":"stdout","text":"Removing intermediate container 02963297066b\n"},{"line":143,"timestamp":"2020-08-31T13:21:26.701947524Z","streamType":"stdout","text":" ---\u003e a92dde361cec\n"},{"line":144,"timestamp":"2020-08-31T13:21:26.70195112Z","streamType":"stdout","text":"Step 4/7 : RUN mkdir -p /estafette-entrypoints     \u0026\u0026 docker version || true\n"},{"line":145,"timestamp":"2020-08-31T13:21:27.019858227Z","streamType":"stdout","text":" ---\u003e Running in 0edb88fd4395\n"},{"line":146,"timestamp":"2020-08-31T13:21:27.391070874Z","streamType":"stdout","text":"Client: Docker Engine - Community\n"},{"line":147,"timestamp":"2020-08-31T13:21:27.391099947Z","streamType":"stdout","text":" Version:           19.03.11\n"},{"line":148,"timestamp":"2020-08-31T13:21:27.391106017Z","streamType":"stdout","text":" API version:       1.40\n"},{"line":149,"timestamp":"2020-08-31T13:21:27.391118116Z","streamType":"stdout","text":" Go version:        go1.13.10\n"},{"line":150,"timestamp":"2020-08-31T13:21:27.391120333Z","streamType":"stdout","text":" Git commit:        42e35e61f3\n"},{"line":151,"timestamp":"2020-08-31T13:21:27.391371674Z","streamType":"stdout","text":" Built:             Mon Jun  1 09:09:53 2020\n"},{"line":152,"timestamp":"2020-08-31T13:21:27.391571093Z","streamType":"stdout","text":" OS/Arch:           linux/amd64\n"},{"line":153,"timestamp":"2020-08-31T13:21:27.391816554Z","streamType":"stdout","text":" Experimental:      false\n"},{"line":154,"timestamp":"2020-08-31T13:21:27.392356757Z","streamType":"stdout","text":"\u001b[91mCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n"},{"line":155,"timestamp":"2020-08-31T13:21:27.674684552Z","streamType":"stdout","text":"\u001b[0mRemoving intermediate container 0edb88fd4395\n"},{"line":156,"timestamp":"2020-08-31T13:21:27.674693042Z","streamType":"stdout","text":" ---\u003e 29d4f96d0d1a\n"},{"line":157,"timestamp":"2020-08-31T13:21:27.674695392Z","streamType":"stdout","text":"Step 5/7 : COPY estafette-ci-builder /usr/bin/\n"},{"line":158,"timestamp":"2020-08-31T13:21:28.058032244Z","streamType":"stdout","text":" ---\u003e 3ef72120f1c0\n"},{"line":159,"timestamp":"2020-08-31T13:21:28.058064119Z","streamType":"stdout","text":"Step 6/7 : COPY templates /entrypoint-templates\n"},{"line":160,"timestamp":"2020-08-31T13:21:28.263390697Z","streamType":"stdout","text":" ---\u003e 34ca201284d3\n"},{"line":161,"timestamp":"2020-08-31T13:21:28.263407518Z","streamType":"stdout","text":"Step 7/7 : ENV ESTAFETTE_CI_SERVER=\"gocd\"     DOCKER_API_VERSION=\"1.38\"     ESTAFETTE_LOG_FORMAT=\"console\"\n"},{"line":162,"timestamp":"2020-08-31T13:21:28.537484664Z","streamType":"stdout","text":" ---\u003e Running in 71bf7d94b8d0\n"},{"line":163,"timestamp":"2020-08-31T13:21:28.941396852Z","streamType":"stdout","text":"Removing intermediate container 71bf7d94b8d0\n"},{"line":164,"timestamp":"2020-08-31T13:21:28.941749902Z","streamType":"stdout","text":" ---\u003e 664cf44f1bba\n"},{"line":165,"timestamp":"2020-08-31T13:21:28.944954107Z","streamType":"stdout","text":"Successfully built 664cf44f1bba\n"},{"line":166,"timestamp":"2020-08-31T13:21:28.950733396Z","streamType":"stdout","text":"Successfully tagged estafette/estafette-ci-builder:cache-master\n"},{"line":167,"timestamp":"2020-08-31T13:21:28.955664138Z","streamType":"stdout","text":"Successfully tagged estafette/estafette-ci-builder:0.0.683-gocd\n"},{"line":168,"timestamp":"2020-08-31T13:21:28.957039102Z","streamType":"stdout","text":"Updating trivy vulnerabilities database...\n"},{"line":169,"timestamp":"2020-08-31T13:21:28.95705526Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --download-db-only estafette/estafette-ci-builder:0.0.683-gocd\u001b[0m\n"},{"line":170,"timestamp":"2020-08-31T13:21:29.192345157Z","streamType":"stdout","text":"2020-08-31T13:21:29.191Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":171,"timestamp":"2020-08-31T13:21:29.192754999Z","streamType":"stdout","text":"2020-08-31T13:21:29.192Z\t\u001b[34mINFO\u001b[0m\tNeed to update DB\n"},{"line":172,"timestamp":"2020-08-31T13:21:29.192762342Z","streamType":"stdout","text":"2020-08-31T13:21:29.192Z\t\u001b[34mINFO\u001b[0m\tDownloading DB...\n"},{"line":173,"timestamp":"2020-08-31T13:21:34.203431511Z","streamType":"stdout","text":"Saving docker image to file for scanning...\n"},{"line":174,"timestamp":"2020-08-31T13:21:34.203999073Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker save estafette/estafette-ci-builder:0.0.683-gocd -o /tmp/695810982.tar\u001b[0m\n"},{"line":175,"timestamp":"2020-08-31T13:21:43.437680568Z","streamType":"stdout","text":"Scanning container image estafette/estafette-ci-builder:0.0.683-gocd for vulnerabilities of severities CRITICAL...\n"},{"line":176,"timestamp":"2020-08-31T13:21:43.437695363Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --severity CRITICAL --light --skip-update --no-progress --exit-code 15 --ignore-unfixed --input /tmp/695810982.tar\u001b[0m\n"},{"line":177,"timestamp":"2020-08-31T13:21:43.557626028Z","streamType":"stdout","text":"2020-08-31T13:21:43.557Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":178,"timestamp":"2020-08-31T13:21:44.393780039Z","streamType":"stdout","text":"2020-08-31T13:21:44.393Z\t\u001b[34mINFO\u001b[0m\tDetecting Alpine vulnerabilities...\n"},{"line":179,"timestamp":"2020-08-31T13:21:44.395699065Z","streamType":"stdout","text":"\n"},{"line":180,"timestamp":"2020-08-31T13:21:44.395710563Z","streamType":"stdout","text":"/tmp/695810982.tar (alpine 3.12.0)\n"},{"line":181,"timestamp":"2020-08-31T13:21:44.395711914Z","streamType":"stdout","text":"==================================\n"},{"line":182,"timestamp":"2020-08-31T13:21:44.395714072Z","streamType":"stdout","text":"Total: 0 (CRITICAL: 0)\n"},{"line":183,"timestamp":"2020-08-31T13:21:44.395715299Z","streamType":"stdout","text":"\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"bake","depth":1,"image":{"name":"extensions/docker","tag":"dev","isPulled":false,"imageSize":128189071,"pullDuration":3920889120,"isTrusted":true},"duration":36686644791,"logLines":[{"line":1,"timestamp":"2020-08-31T13:21:07.903791762Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:21:07.903799244Z","streamType":"stdout","text":"Ensuring build directory ./publish exists\n"},{"line":3,"timestamp":"2020-08-31T13:21:07.903801035Z","streamType":"stdout","text":"Copying directory builder/templates to ./publish\n"},{"line":4,"timestamp":"2020-08-31T13:21:07.903802068Z","streamType":"stdout","text":"Reading dockerfile content from Dockerfile...\n"},{"line":5,"timestamp":"2020-08-31T13:21:07.903803565Z","streamType":"stdout","text":"Expanding environment variables in Dockerfile...\n"},{"line":6,"timestamp":"2020-08-31T13:21:07.903813725Z","streamType":"stdout","text":"Writing Dockerfile to publish/Dockerfile...\n"},{"line":7,"timestamp":"2020-08-31T13:21:07.903814779Z","streamType":"stdout","text":"Listing directory ./publish content\n"},{"line":8,"timestamp":"2020-08-31T13:21:07.90382429Z","streamType":"stdout","text":"- Dockerfile\n"},{"line":9,"timestamp":"2020-08-31T13:21:07.903826041Z","streamType":"stdout","text":"- estafette-ci-builder\n"},{"line":10,"timestamp":"2020-08-31T13:21:07.903826697Z","streamType":"stdout","text":"- templates/\n"},{"line":11,"timestamp":"2020-08-31T13:21:07.903828648Z","streamType":"stdout","text":"Filtering credentials for images [estafette/estafette-ci-builder:0.0.683]\n"},{"line":12,"timestamp":"2020-08-31T13:21:07.903830106Z","streamType":"stdout","text":"Filtered 9 container-registry credentials down to 1\n"},{"line":13,"timestamp":"2020-08-31T13:21:07.903831152Z","streamType":"stdout","text":"Logging in to repository 'estafette'\n"},{"line":14,"timestamp":"2020-08-31T13:21:09.055065617Z","streamType":"stdout","text":"Building docker image estafette/estafette-ci-builder:0.0.683...\n"},{"line":15,"timestamp":"2020-08-31T13:21:09.055377709Z","streamType":"stdout","text":"\n"},{"line":16,"timestamp":"2020-08-31T13:21:09.055466859Z","streamType":"stdout","text":"FROM docker:19.03.8-dind\n"},{"line":17,"timestamp":"2020-08-31T13:21:09.055582661Z","streamType":"stdout","text":"\n"},{"line":18,"timestamp":"2020-08-31T13:21:09.055680255Z","streamType":"stdout","text":"LABEL maintainer=\"estafette.io\" \\\n"},{"line":19,"timestamp":"2020-08-31T13:21:09.05577094Z","streamType":"stdout","text":"      description=\"The estafette-ci-builder is the component that runs builds as defined in the .estafette.yaml manifest\"\n"},{"line":20,"timestamp":"2020-08-31T13:21:09.055828038Z","streamType":"stdout","text":"\n"},{"line":21,"timestamp":"2020-08-31T13:21:09.05614871Z","streamType":"stdout","text":"RUN addgroup docker \\\n"},{"line":22,"timestamp":"2020-08-31T13:21:09.056168729Z","streamType":"stdout","text":"    \u0026\u0026 mkdir -p /estafette-entrypoints \\\n"},{"line":23,"timestamp":"2020-08-31T13:21:09.056170422Z","streamType":"stdout","text":"    \u0026\u0026 apk update \\\n"},{"line":24,"timestamp":"2020-08-31T13:21:09.056172802Z","streamType":"stdout","text":"    \u0026\u0026 apk add --no-cache --upgrade \\\n"},{"line":25,"timestamp":"2020-08-31T13:21:09.056174289Z","streamType":"stdout","text":"        openssl \\\n"},{"line":26,"timestamp":"2020-08-31T13:21:09.056176343Z","streamType":"stdout","text":"    \u0026\u0026 rm -rf /var/cache/apk/* \\\n"},{"line":27,"timestamp":"2020-08-31T13:21:09.05617832Z","streamType":"stdout","text":"    \u0026\u0026 docker version || true\n"},{"line":28,"timestamp":"2020-08-31T13:21:09.05617943Z","streamType":"stdout","text":"\n"},{"line":29,"timestamp":"2020-08-31T13:21:09.05619193Z","streamType":"stdout","text":"# copy builder \u0026 startup script\n"},{"line":30,"timestamp":"2020-08-31T13:21:09.056193779Z","streamType":"stdout","text":"COPY estafette-ci-builder /\n"},{"line":31,"timestamp":"2020-08-31T13:21:09.05619531Z","streamType":"stdout","text":"COPY templates /entrypoint-templates\n"},{"line":32,"timestamp":"2020-08-31T13:21:09.056196033Z","streamType":"stdout","text":"\n"},{"line":33,"timestamp":"2020-08-31T13:21:09.056197817Z","streamType":"stdout","text":"ENV ESTAFETTE_CI_SERVER=\"estafette\" \\\n"},{"line":34,"timestamp":"2020-08-31T13:21:09.056199696Z","streamType":"stdout","text":"    ESTAFETTE_WORKDIR=\"/estafette-work\" \\\n"},{"line":35,"timestamp":"2020-08-31T13:21:09.056201396Z","streamType":"stdout","text":"    ESTAFETTE_LOG_FORMAT=\"v3\"\n"},{"line":36,"timestamp":"2020-08-31T13:21:09.056209377Z","streamType":"stdout","text":"\n"},{"line":37,"timestamp":"2020-08-31T13:21:09.056394526Z","streamType":"stdout","text":"WORKDIR ${ESTAFETTE_WORKDIR}\n"},{"line":38,"timestamp":"2020-08-31T13:21:09.056395604Z","streamType":"stdout","text":"\n"},{"line":39,"timestamp":"2020-08-31T13:21:09.056397475Z","streamType":"stdout","text":"ENTRYPOINT [\"/estafette-ci-builder\"]\n"},{"line":40,"timestamp":"2020-08-31T13:21:09.05639851Z","streamType":"stdout","text":"\n"},{"line":41,"timestamp":"2020-08-31T13:21:09.056414614Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker build --no-cache --tag estafette/estafette-ci-builder:cache-master --tag estafette/estafette-ci-builder:0.0.683 --file publish/Dockerfile ./publish\u001b[0m\n"},{"line":42,"timestamp":"2020-08-31T13:21:09.220141156Z","streamType":"stdout","text":"Sending build context to Docker daemon  17.19MB\r\r\n"},{"line":43,"timestamp":"2020-08-31T13:21:09.235161721Z","streamType":"stdout","text":"Step 1/8 : FROM docker:19.03.8-dind\n"},{"line":44,"timestamp":"2020-08-31T13:21:10.434880816Z","streamType":"stdout","text":"19.03.8-dind: Pulling from library/docker\n"},{"line":45,"timestamp":"2020-08-31T13:21:10.812709005Z","streamType":"stdout","text":"cbdbe7a5bc2a: Pulling fs layer\n"},{"line":46,"timestamp":"2020-08-31T13:21:10.812718435Z","streamType":"stdout","text":"6f4c731d6eb3: Pulling fs layer\n"},{"line":47,"timestamp":"2020-08-31T13:21:10.812720789Z","streamType":"stdout","text":"5d79d4ac3cd0: Pulling fs layer\n"},{"line":48,"timestamp":"2020-08-31T13:21:10.812734582Z","streamType":"stdout","text":"65de10866d6a: Pulling fs layer\n"},{"line":49,"timestamp":"2020-08-31T13:21:10.812735719Z","streamType":"stdout","text":"ffd69ed7f17f: Pulling fs layer\n"},{"line":50,"timestamp":"2020-08-31T13:21:10.812736557Z","streamType":"stdout","text":"07ba9e5a2fa6: Pulling fs layer\n"},{"line":51,"timestamp":"2020-08-31T13:21:10.81273748Z","streamType":"stdout","text":"75478c283dd2: Pulling fs layer\n"},{"line":52,"timestamp":"2020-08-31T13:21:10.8127382Z","streamType":"stdout","text":"3a34b06546be: Pulling fs layer\n"},{"line":53,"timestamp":"2020-08-31T13:21:10.812739352Z","streamType":"stdout","text":"bcf9fe696821: Pulling fs layer\n"},{"line":54,"timestamp":"2020-08-31T13:21:10.812741336Z","streamType":"stdout","text":"326857604f33: Pulling fs layer\n"},{"line":55,"timestamp":"2020-08-31T13:21:10.812742235Z","streamType":"stdout","text":"f2895b762178: Pulling fs layer\n"},{"line":56,"timestamp":"2020-08-31T13:21:10.812743112Z","streamType":"stdout","text":"cbdbe7a5bc2a: Waiting\n"},{"line":57,"timestamp":"2020-08-31T13:21:10.812743774Z","streamType":"stdout","text":"6f4c731d6eb3: Waiting\n"},{"line":58,"timestamp":"2020-08-31T13:21:10.812744677Z","streamType":"stdout","text":"3a34b06546be: Waiting\n"},{"line":59,"timestamp":"2020-08-31T13:21:10.812745567Z","streamType":"stdout","text":"bcf9fe696821: Waiting\n"},{"line":60,"timestamp":"2020-08-31T13:21:10.812746616Z","streamType":"stdout","text":"f2895b762178: Waiting\n"},{"line":61,"timestamp":"2020-08-31T13:21:10.812758371Z","streamType":"stdout","text":"ffd69ed7f17f: Waiting\n"},{"line":62,"timestamp":"2020-08-31T13:21:10.8127594Z","streamType":"stdout","text":"07ba9e5a2fa6: Waiting\n"},{"line":63,"timestamp":"2020-08-31T13:21:10.812760431Z","streamType":"stdout","text":"75478c283dd2: Waiting\n"},{"line":64,"timestamp":"2020-08-31T13:21:10.812761531Z","streamType":"stdout","text":"65de10866d6a: Waiting\n"},{"line":65,"timestamp":"2020-08-31T13:21:10.812762555Z","streamType":"stdout","text":"5d79d4ac3cd0: Waiting\n"},{"line":66,"timestamp":"2020-08-31T13:21:10.812763652Z","streamType":"stdout","text":"326857604f33: Waiting\n"},{"line":67,"timestamp":"2020-08-31T13:21:17.242559249Z","streamType":"stdout","text":"cbdbe7a5bc2a: Verifying Checksum\n"},{"line":68,"timestamp":"2020-08-31T13:21:17.388804313Z","streamType":"stdout","text":"6f4c731d6eb3: Verifying Checksum\n"},{"line":69,"timestamp":"2020-08-31T13:21:17.399782218Z","streamType":"stdout","text":"cbdbe7a5bc2a: Pull complete\n"},{"line":70,"timestamp":"2020-08-31T13:21:17.566384271Z","streamType":"stdout","text":"6f4c731d6eb3: Pull complete\n"},{"line":71,"timestamp":"2020-08-31T13:21:17.652959292Z","streamType":"stdout","text":"5d79d4ac3cd0: Verifying Checksum\n"},{"line":72,"timestamp":"2020-08-31T13:21:17.652969466Z","streamType":"stdout","text":"5d79d4ac3cd0: Download complete\n"},{"line":73,"timestamp":"2020-08-31T13:21:17.713284496Z","streamType":"stdout","text":"5d79d4ac3cd0: Pull complete\n"},{"line":74,"timestamp":"2020-08-31T13:21:18.057270587Z","streamType":"stdout","text":"ffd69ed7f17f: Download complete\n"},{"line":75,"timestamp":"2020-08-31T13:21:18.166394755Z","streamType":"stdout","text":"07ba9e5a2fa6: Verifying Checksum\n"},{"line":76,"timestamp":"2020-08-31T13:21:18.166409847Z","streamType":"stdout","text":"07ba9e5a2fa6: Download complete\n"},{"line":77,"timestamp":"2020-08-31T13:21:18.265375264Z","streamType":"stdout","text":"65de10866d6a: Verifying Checksum\n"},{"line":78,"timestamp":"2020-08-31T13:21:18.265383884Z","streamType":"stdout","text":"65de10866d6a: Download complete\n"},{"line":79,"timestamp":"2020-08-31T13:21:18.474601615Z","streamType":"stdout","text":"75478c283dd2: Verifying Checksum\n"},{"line":80,"timestamp":"2020-08-31T13:21:18.474662415Z","streamType":"stdout","text":"75478c283dd2: Download complete\n"},{"line":81,"timestamp":"2020-08-31T13:21:18.652068289Z","streamType":"stdout","text":"3a34b06546be: Verifying Checksum\n"},{"line":82,"timestamp":"2020-08-31T13:21:18.652115142Z","streamType":"stdout","text":"3a34b06546be: Download complete\n"},{"line":83,"timestamp":"2020-08-31T13:21:18.687167836Z","streamType":"stdout","text":"bcf9fe696821: Download complete\n"},{"line":84,"timestamp":"2020-08-31T13:21:18.882319252Z","streamType":"stdout","text":"326857604f33: Verifying Checksum\n"},{"line":85,"timestamp":"2020-08-31T13:21:18.882329479Z","streamType":"stdout","text":"326857604f33: Download complete\n"},{"line":86,"timestamp":"2020-08-31T13:21:19.05679111Z","streamType":"stdout","text":"f2895b762178: Verifying Checksum\n"},{"line":87,"timestamp":"2020-08-31T13:21:19.056838032Z","streamType":"stdout","text":"f2895b762178: Download complete\n"},{"line":88,"timestamp":"2020-08-31T13:21:19.774867753Z","streamType":"stdout","text":"65de10866d6a: Pull complete\n"},{"line":89,"timestamp":"2020-08-31T13:21:19.849924414Z","streamType":"stdout","text":"ffd69ed7f17f: Pull complete\n"},{"line":90,"timestamp":"2020-08-31T13:21:19.92602684Z","streamType":"stdout","text":"07ba9e5a2fa6: Pull complete\n"},{"line":91,"timestamp":"2020-08-31T13:21:19.991471565Z","streamType":"stdout","text":"75478c283dd2: Pull complete\n"},{"line":92,"timestamp":"2020-08-31T13:21:22.130709083Z","streamType":"stdout","text":"3a34b06546be: Pull complete\n"},{"line":93,"timestamp":"2020-08-31T13:21:24.999881033Z","streamType":"stdout","text":"bcf9fe696821: Pull complete\n"},{"line":94,"timestamp":"2020-08-31T13:21:25.765553208Z","streamType":"stdout","text":"326857604f33: Pull complete\n"},{"line":95,"timestamp":"2020-08-31T13:21:25.936019592Z","streamType":"stdout","text":"f2895b762178: Pull complete\n"},{"line":96,"timestamp":"2020-08-31T13:21:25.944441002Z","streamType":"stdout","text":"Digest: sha256:841b5eb000551dc3c30a46386ab4bfed5839ec9592c88e961236b25194ce88b9\n"},{"line":97,"timestamp":"2020-08-31T13:21:25.94856982Z","streamType":"stdout","text":"Status: Downloaded newer image for docker:19.03.8-dind\n"},{"line":98,"timestamp":"2020-08-31T13:21:25.949435789Z","streamType":"stdout","text":" ---\u003e c814ba3a41a3\n"},{"line":99,"timestamp":"2020-08-31T13:21:25.949448043Z","streamType":"stdout","text":"Step 2/8 : LABEL maintainer=\"estafette.io\"       description=\"The estafette-ci-builder is the component that runs builds as defined in the .estafette.yaml manifest\"\n"},{"line":100,"timestamp":"2020-08-31T13:21:26.205527921Z","streamType":"stdout","text":" ---\u003e Running in fd88a05e70a1\n"},{"line":101,"timestamp":"2020-08-31T13:21:26.467555448Z","streamType":"stdout","text":"Removing intermediate container fd88a05e70a1\n"},{"line":102,"timestamp":"2020-08-31T13:21:26.467572903Z","streamType":"stdout","text":" ---\u003e 624a06e6c42d\n"},{"line":103,"timestamp":"2020-08-31T13:21:26.467587027Z","streamType":"stdout","text":"Step 3/8 : RUN addgroup docker     \u0026\u0026 mkdir -p /estafette-entrypoints     \u0026\u0026 apk update     \u0026\u0026 apk add --no-cache --upgrade         openssl     \u0026\u0026 rm -rf /var/cache/apk/*     \u0026\u0026 docker version || true\n"},{"line":104,"timestamp":"2020-08-31T13:21:26.69896996Z","streamType":"stdout","text":" ---\u003e Running in bff2a0ccc9b4\n"},{"line":105,"timestamp":"2020-08-31T13:21:27.314322855Z","streamType":"stdout","text":"fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz\n"},{"line":106,"timestamp":"2020-08-31T13:21:27.428344865Z","streamType":"stdout","text":"fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/community/x86_64/APKINDEX.tar.gz\n"},{"line":107,"timestamp":"2020-08-31T13:21:27.556555711Z","streamType":"stdout","text":"v3.11.6-126-gda4d6d28b6 [http://dl-cdn.alpinelinux.org/alpine/v3.11/main]\n"},{"line":108,"timestamp":"2020-08-31T13:21:27.556568318Z","streamType":"stdout","text":"v3.11.6-127-g5df837bcaf [http://dl-cdn.alpinelinux.org/alpine/v3.11/community]\n"},{"line":109,"timestamp":"2020-08-31T13:21:27.556571733Z","streamType":"stdout","text":"OK: 11273 distinct packages available\n"},{"line":110,"timestamp":"2020-08-31T13:21:27.577018846Z","streamType":"stdout","text":"fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz\n"},{"line":111,"timestamp":"2020-08-31T13:21:27.652319673Z","streamType":"stdout","text":"fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/community/x86_64/APKINDEX.tar.gz\n"},{"line":112,"timestamp":"2020-08-31T13:21:27.768367969Z","streamType":"stdout","text":"(1/1) Upgrading ca-certificates-cacert (20191127-r1 -\u003e 20191127-r2)\n"},{"line":113,"timestamp":"2020-08-31T13:21:27.778495624Z","streamType":"stdout","text":"OK: 25 MiB in 45 packages\n"},{"line":114,"timestamp":"2020-08-31T13:21:27.825361208Z","streamType":"stdout","text":"Client: Docker Engine - Community\n"},{"line":115,"timestamp":"2020-08-31T13:21:27.82537546Z","streamType":"stdout","text":" Version:           19.03.8\n"},{"line":116,"timestamp":"2020-08-31T13:21:27.825797738Z","streamType":"stdout","text":" API version:       1.40\n"},{"line":117,"timestamp":"2020-08-31T13:21:27.825805764Z","streamType":"stdout","text":" Go version:        go1.12.17\n"},{"line":118,"timestamp":"2020-08-31T13:21:27.825807975Z","streamType":"stdout","text":" Git commit:        afacb8b7f0\n"},{"line":119,"timestamp":"2020-08-31T13:21:27.825810674Z","streamType":"stdout","text":" Built:             Wed Mar 11 01:22:56 2020\n"},{"line":120,"timestamp":"2020-08-31T13:21:27.825998458Z","streamType":"stdout","text":" OS/Arch:           linux/amd64\n"},{"line":121,"timestamp":"2020-08-31T13:21:27.826005708Z","streamType":"stdout","text":" Experimental:      false\n"},{"line":122,"timestamp":"2020-08-31T13:21:27.826010539Z","streamType":"stdout","text":"\u001b[91mCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n"},{"line":123,"timestamp":"2020-08-31T13:21:28.407957326Z","streamType":"stdout","text":"\u001b[0mRemoving intermediate container bff2a0ccc9b4\n"},{"line":124,"timestamp":"2020-08-31T13:21:28.40797304Z","streamType":"stdout","text":" ---\u003e e0ceaa4dac10\n"},{"line":125,"timestamp":"2020-08-31T13:21:28.407977282Z","streamType":"stdout","text":"Step 4/8 : COPY estafette-ci-builder /\n"},{"line":126,"timestamp":"2020-08-31T13:21:29.191516065Z","streamType":"stdout","text":" ---\u003e c7a727f954e7\n"},{"line":127,"timestamp":"2020-08-31T13:21:29.191720164Z","streamType":"stdout","text":"Step 5/8 : COPY templates /entrypoint-templates\n"},{"line":128,"timestamp":"2020-08-31T13:21:29.347604908Z","streamType":"stdout","text":" ---\u003e 326a087c4211\n"},{"line":129,"timestamp":"2020-08-31T13:21:29.347619709Z","streamType":"stdout","text":"Step 6/8 : ENV ESTAFETTE_CI_SERVER=\"estafette\"     ESTAFETTE_WORKDIR=\"/estafette-work\"     ESTAFETTE_LOG_FORMAT=\"v3\"\n"},{"line":130,"timestamp":"2020-08-31T13:21:29.518283401Z","streamType":"stdout","text":" ---\u003e Running in 808b8e894f1c\n"},{"line":131,"timestamp":"2020-08-31T13:21:29.607658999Z","streamType":"stdout","text":"Removing intermediate container 808b8e894f1c\n"},{"line":132,"timestamp":"2020-08-31T13:21:29.607672268Z","streamType":"stdout","text":" ---\u003e fbfc7aaf3947\n"},{"line":133,"timestamp":"2020-08-31T13:21:29.607675564Z","streamType":"stdout","text":"Step 7/8 : WORKDIR ${ESTAFETTE_WORKDIR}\n"},{"line":134,"timestamp":"2020-08-31T13:21:29.785876196Z","streamType":"stdout","text":" ---\u003e Running in da2b29418c39\n"},{"line":135,"timestamp":"2020-08-31T13:21:29.907842231Z","streamType":"stdout","text":"Removing intermediate container da2b29418c39\n"},{"line":136,"timestamp":"2020-08-31T13:21:29.907855649Z","streamType":"stdout","text":" ---\u003e 259bb3f37640\n"},{"line":137,"timestamp":"2020-08-31T13:21:29.907859126Z","streamType":"stdout","text":"Step 8/8 : ENTRYPOINT [\"/estafette-ci-builder\"]\n"},{"line":138,"timestamp":"2020-08-31T13:21:30.066252748Z","streamType":"stdout","text":" ---\u003e Running in bbcb4cac83f6\n"},{"line":139,"timestamp":"2020-08-31T13:21:30.216570043Z","streamType":"stdout","text":"Removing intermediate container bbcb4cac83f6\n"},{"line":140,"timestamp":"2020-08-31T13:21:30.216781922Z","streamType":"stdout","text":" ---\u003e 29d9a576e9ce\n"},{"line":141,"timestamp":"2020-08-31T13:21:30.220145827Z","streamType":"stdout","text":"Successfully built 29d9a576e9ce\n"},{"line":142,"timestamp":"2020-08-31T13:21:30.226231405Z","streamType":"stdout","text":"Successfully tagged estafette/estafette-ci-builder:cache-master\n"},{"line":143,"timestamp":"2020-08-31T13:21:30.231206759Z","streamType":"stdout","text":"Successfully tagged estafette/estafette-ci-builder:0.0.683\n"},{"line":144,"timestamp":"2020-08-31T13:21:30.232745435Z","streamType":"stdout","text":"Updating trivy vulnerabilities database...\n"},{"line":145,"timestamp":"2020-08-31T13:21:30.232756718Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --download-db-only estafette/estafette-ci-builder:0.0.683\u001b[0m\n"},{"line":146,"timestamp":"2020-08-31T13:21:30.24699956Z","streamType":"stdout","text":"2020-08-31T13:21:30.246Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":147,"timestamp":"2020-08-31T13:21:30.247142481Z","streamType":"stdout","text":"2020-08-31T13:21:30.246Z\t\u001b[34mINFO\u001b[0m\tNeed to update DB\n"},{"line":148,"timestamp":"2020-08-31T13:21:30.247152105Z","streamType":"stdout","text":"2020-08-31T13:21:30.246Z\t\u001b[34mINFO\u001b[0m\tDownloading DB...\n"},{"line":149,"timestamp":"2020-08-31T13:21:35.713613635Z","streamType":"stdout","text":"Saving docker image to file for scanning...\n"},{"line":150,"timestamp":"2020-08-31T13:21:35.713797061Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker save estafette/estafette-ci-builder:0.0.683 -o /tmp/266645654.tar\u001b[0m\n"},{"line":151,"timestamp":"2020-08-31T13:21:41.564949636Z","streamType":"stdout","text":"Scanning container image estafette/estafette-ci-builder:0.0.683 for vulnerabilities of severities CRITICAL...\n"},{"line":152,"timestamp":"2020-08-31T13:21:41.565373532Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --severity CRITICAL --light --skip-update --no-progress --exit-code 15 --ignore-unfixed --input /tmp/266645654.tar\u001b[0m\n"},{"line":153,"timestamp":"2020-08-31T13:21:42.018870016Z","streamType":"stdout","text":"2020-08-31T13:21:42.018Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":154,"timestamp":"2020-08-31T13:21:43.583096469Z","streamType":"stdout","text":"2020-08-31T13:21:43.582Z\t\u001b[34mINFO\u001b[0m\tDetecting Alpine vulnerabilities...\n"},{"line":155,"timestamp":"2020-08-31T13:21:43.583768697Z","streamType":"stdout","text":"\n"},{"line":156,"timestamp":"2020-08-31T13:21:43.583777707Z","streamType":"stdout","text":"/tmp/266645654.tar (alpine 3.11.6)\n"},{"line":157,"timestamp":"2020-08-31T13:21:43.583779528Z","streamType":"stdout","text":"==================================\n"},{"line":158,"timestamp":"2020-08-31T13:21:43.583781365Z","streamType":"stdout","text":"Total: 0 (CRITICAL: 0)\n"},{"line":159,"timestamp":"2020-08-31T13:21:43.583782136Z","streamType":"stdout","text":"\n"}],"exitCode":0,"status":"SUCCEEDED"}]},{"step":"dive-and-trivy-all","image":null,"duration":22303335783,"logLines":null,"exitCode":0,"status":"SUCCEEDED","nestedSteps":[{"step":"trivy","depth":1,"image":null,"duration":21757315618,"logLines":[{"line":1,"timestamp":"2020-08-31T13:21:45.888934542Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:21:45.888941735Z","streamType":"stdout","text":"Updating trivy vulnerabilities database...\n"},{"line":3,"timestamp":"2020-08-31T13:21:45.888946848Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --download-db-only estafette/estafette-ci-builder:0.0.683\u001b[0m\n"},{"line":4,"timestamp":"2020-08-31T13:21:45.89899761Z","streamType":"stdout","text":"2020-08-31T13:21:45.898Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":5,"timestamp":"2020-08-31T13:21:45.899321602Z","streamType":"stdout","text":"2020-08-31T13:21:45.898Z\t\u001b[34mINFO\u001b[0m\tNeed to update DB\n"},{"line":6,"timestamp":"2020-08-31T13:21:45.899332596Z","streamType":"stdout","text":"2020-08-31T13:21:45.899Z\t\u001b[34mINFO\u001b[0m\tDownloading DB...\n"},{"line":7,"timestamp":"2020-08-31T13:21:54.52701425Z","streamType":"stdout","text":"Saving docker image to file for scanning...\n"},{"line":8,"timestamp":"2020-08-31T13:21:54.527365447Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker save estafette/estafette-ci-builder:0.0.683 -o /tmp/641700806.tar\u001b[0m\n"},{"line":9,"timestamp":"2020-08-31T13:22:03.291989163Z","streamType":"stdout","text":"Scanning container image estafette/estafette-ci-builder:0.0.683 for vulnerabilities...\n"},{"line":10,"timestamp":"2020-08-31T13:22:03.292030167Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --skip-update --no-progress --exit-code 15 --ignore-unfixed --input /tmp/641700806.tar\u001b[0m\n"},{"line":11,"timestamp":"2020-08-31T13:22:03.951633304Z","streamType":"stdout","text":"2020-08-31T13:22:03.932Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":12,"timestamp":"2020-08-31T13:22:06.063811185Z","streamType":"stdout","text":"2020-08-31T13:22:06.063Z\t\u001b[34mINFO\u001b[0m\tDetecting Alpine vulnerabilities...\n"},{"line":13,"timestamp":"2020-08-31T13:22:06.065756785Z","streamType":"stdout","text":"\n"},{"line":14,"timestamp":"2020-08-31T13:22:06.065767938Z","streamType":"stdout","text":"/tmp/641700806.tar (alpine 3.11.6)\n"},{"line":15,"timestamp":"2020-08-31T13:22:06.066335342Z","streamType":"stdout","text":"==================================\n"},{"line":16,"timestamp":"2020-08-31T13:22:06.06634089Z","streamType":"stdout","text":"Total: 0 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n"},{"line":17,"timestamp":"2020-08-31T13:22:06.066342228Z","streamType":"stdout","text":"\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"dive-gocd-agent","depth":1,"image":null,"duration":21235582173,"logLines":[{"line":1,"timestamp":"2020-08-31T13:21:45.870959403Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:21:45.870962494Z","streamType":"stdout","text":"Inspecting container image estafette/estafette-ci-builder:0.0.683-gocd layers...\n"},{"line":3,"timestamp":"2020-08-31T13:21:45.870964566Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /dive estafette/estafette-ci-builder:0.0.683-gocd\u001b[0m\n"},{"line":4,"timestamp":"2020-08-31T13:21:45.870965704Z","streamType":"stdout","text":"  Using default CI config\n"},{"line":5,"timestamp":"2020-08-31T13:21:45.870966878Z","streamType":"stdout","text":"\u001b[1mImage Source: \u001b[0mdocker://estafette/estafette-ci-builder:0.0.683-gocd\n"},{"line":6,"timestamp":"2020-08-31T13:21:45.870968558Z","streamType":"stdout","text":"\u001b[1mFetching image...\u001b[0m (this can take a while for large images)\n"},{"line":7,"timestamp":"2020-08-31T13:21:49.47955239Z","streamType":"stdout","text":"\u001b[1mAnalyzing image...\u001b[0m\n"},{"line":8,"timestamp":"2020-08-31T13:21:49.497836602Z","streamType":"stdout","text":"  efficiency: 99.3259 %\n"},{"line":9,"timestamp":"2020-08-31T13:21:49.497847401Z","streamType":"stdout","text":"  wastedBytes: 4913957 bytes (4.9 MB)\n"},{"line":10,"timestamp":"2020-08-31T13:21:49.499380813Z","streamType":"stdout","text":"  userWastedPercent: 1.2003 %\n"},{"line":11,"timestamp":"2020-08-31T13:21:49.50123824Z","streamType":"stdout","text":"\u001b[1mInefficient Files:\u001b[0m\n"},{"line":12,"timestamp":"2020-08-31T13:21:49.501246767Z","streamType":"stdout","text":"Count  Wasted Space  File Path\n"},{"line":13,"timestamp":"2020-08-31T13:21:49.501259164Z","streamType":"stdout","text":"    2        1.7 MB  /bin/busybox\n"},{"line":14,"timestamp":"2020-08-31T13:21:49.501261855Z","streamType":"stdout","text":"    2        1.2 MB  /lib/ld-musl-x86_64.so.1\n"},{"line":15,"timestamp":"2020-08-31T13:21:49.501264189Z","streamType":"stdout","text":"    3        645 kB  /etc/ssl/certs/ca-certificates.crt\n"},{"line":16,"timestamp":"2020-08-31T13:21:49.501265316Z","streamType":"stdout","text":"    6        336 kB  /lib/apk/db/installed\n"},{"line":17,"timestamp":"2020-08-31T13:21:49.501266466Z","streamType":"stdout","text":"    2        107 kB  /usr/bin/getent\n"},{"line":18,"timestamp":"2020-08-31T13:21:49.501267846Z","streamType":"stdout","text":"    6         82 kB  /lib/apk/db/scripts.tar\n"},{"line":19,"timestamp":"2020-08-31T13:21:49.501268711Z","streamType":"stdout","text":"    2         76 kB  /usr/bin/getconf\n"},{"line":20,"timestamp":"2020-08-31T13:21:49.501269489Z","streamType":"stdout","text":"    2         72 kB  /usr/bin/xz\n"},{"line":21,"timestamp":"2020-08-31T13:21:49.501270679Z","streamType":"stdout","text":"    2         53 kB  /usr/bin/iconv\n"},{"line":22,"timestamp":"2020-08-31T13:21:49.501271684Z","streamType":"stdout","text":"    2         29 kB  /etc/services\n"},{"line":23,"timestamp":"2020-08-31T13:21:49.501272773Z","streamType":"stdout","text":"    2         28 kB  /usr/bin/c_rehash\n"},{"line":24,"timestamp":"2020-08-31T13:21:49.501274199Z","streamType":"stdout","text":"    2         28 kB  /usr/sbin/update-ca-certificates\n"},{"line":25,"timestamp":"2020-08-31T13:21:49.50127521Z","streamType":"stdout","text":"    2         28 kB  /usr/bin/ssl_client\n"},{"line":26,"timestamp":"2020-08-31T13:21:49.501275983Z","streamType":"stdout","text":"    2         28 kB  /sbin/mkmntdirs\n"},{"line":27,"timestamp":"2020-08-31T13:21:49.501277185Z","streamType":"stdout","text":"    3         22 kB  /usr/glibc-compat/etc/ld.so.cache\n"},{"line":28,"timestamp":"2020-08-31T13:21:49.501278123Z","streamType":"stdout","text":"    3         14 kB  /var/cache/ldconfig/aux-cache\n"},{"line":29,"timestamp":"2020-08-31T13:21:49.501287603Z","streamType":"stdout","text":"    2         11 kB  /etc/ca-certificates.conf\n"},{"line":30,"timestamp":"2020-08-31T13:21:49.501291517Z","streamType":"stdout","text":"    2         11 kB  /etc/udhcpd.conf\n"},{"line":31,"timestamp":"2020-08-31T13:21:49.501292511Z","streamType":"stdout","text":"    2        6.2 kB  /usr/share/udhcpc/default.script\n"},{"line":32,"timestamp":"2020-08-31T13:21:49.50129469Z","streamType":"stdout","text":"    2        5.5 kB  /usr/share/ca-certificates/mozilla/ACCVRAIZ1.crt\n"},{"line":33,"timestamp":"2020-08-31T13:21:49.501297024Z","streamType":"stdout","text":"    2        5.2 kB  /usr/share/ca-certificates/mozilla/Chambers_of_Commerce_Root_-_2008.crt\n"},{"line":34,"timestamp":"2020-08-31T13:21:49.501298717Z","streamType":"stdout","text":"    2        5.2 kB  /usr/share/ca-certificates/mozilla/Global_Chambersign_Root_-_2008.crt\n"},{"line":35,"timestamp":"2020-08-31T13:21:49.501300094Z","streamType":"stdout","text":"    2        4.7 kB  /usr/share/ca-certificates/mozilla/QuoVadis_Root_CA_3.crt\n"},{"line":36,"timestamp":"2020-08-31T13:21:49.501301219Z","streamType":"stdout","text":"    2        4.5 kB  /usr/share/ca-certificates/mozilla/Certigna_Root_CA.crt\n"},{"line":37,"timestamp":"2020-08-31T13:21:49.501303083Z","streamType":"stdout","text":"    2        4.5 kB  /usr/share/ca-certificates/mozilla/E-Tugra_Certification_Authority.crt\n"},{"line":38,"timestamp":"2020-08-31T13:21:49.501305039Z","streamType":"stdout","text":"    2        4.5 kB  /usr/share/ca-certificates/mozilla/Entrust_Root_Certification_Authority_-_G4.crt\n"},{"line":39,"timestamp":"2020-08-31T13:21:49.501306298Z","streamType":"stdout","text":"    2        4.4 kB  /usr/share/ca-certificates/mozilla/TrustCor_RootCert_CA-2.crt\n"},{"line":40,"timestamp":"2020-08-31T13:21:49.501308846Z","streamType":"stdout","text":"    2        4.3 kB  /usr/share/ca-certificates/mozilla/Autoridad_de_Certificacion_Firmaprofesional_CIF_A62634068.crt\n"},{"line":41,"timestamp":"2020-08-31T13:21:49.501310788Z","streamType":"stdout","text":"    2        4.3 kB  /usr/share/ca-certificates/mozilla/Hellenic_Academic_and_Research_Institutions_RootCA_2015.crt\n"},{"line":42,"timestamp":"2020-08-31T13:21:49.501311759Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/Izenpe.com.crt\n"},{"line":43,"timestamp":"2020-08-31T13:21:49.501313381Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/SSL.com_EV_Root_Certification_Authority_RSA_R2.crt\n"},{"line":44,"timestamp":"2020-08-31T13:21:49.501314891Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/SSL.com_Root_Certification_Authority_RSA.crt\n"},{"line":45,"timestamp":"2020-08-31T13:21:49.501316101Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/USERTrust_RSA_Certification_Authority.crt\n"},{"line":46,"timestamp":"2020-08-31T13:21:49.501317249Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/COMODO_RSA_Certification_Authority.crt\n"},{"line":47,"timestamp":"2020-08-31T13:21:49.501319018Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/Certum_Trusted_Network_CA_2.crt\n"},{"line":48,"timestamp":"2020-08-31T13:21:49.501320506Z","streamType":"stdout","text":"    2        4.2 kB  /usr/share/ca-certificates/mozilla/QuoVadis_Root_CA.crt\n"},{"line":49,"timestamp":"2020-08-31T13:21:49.501321653Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/Hongkong_Post_Root_CA_3.crt\n"},{"line":50,"timestamp":"2020-08-31T13:21:49.501322839Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/Staat_der_Nederlanden_Root_CA_-_G2.crt\n"},{"line":51,"timestamp":"2020-08-31T13:21:49.501323919Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/LuxTrust_Global_Root_2.crt\n"},{"line":52,"timestamp":"2020-08-31T13:21:49.501325026Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/Actalis_Authentication_Root_CA.crt\n"},{"line":53,"timestamp":"2020-08-31T13:21:49.501326073Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/SwissSign_Silver_CA_-_G2.crt\n"},{"line":54,"timestamp":"2020-08-31T13:21:49.501328794Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/SwissSign_Gold_CA_-_G2.crt\n"},{"line":55,"timestamp":"2020-08-31T13:21:49.501330116Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/QuoVadis_Root_CA_2.crt\n"},{"line":56,"timestamp":"2020-08-31T13:21:49.501331364Z","streamType":"stdout","text":"    2        4.1 kB  /usr/share/ca-certificates/mozilla/ePKI_Root_Certification_Authority.crt\n"},{"line":57,"timestamp":"2020-08-31T13:21:49.501332269Z","streamType":"stdout","text":"    2        4.0 kB  /etc/modprobe.d/blacklist.conf\n"},{"line":58,"timestamp":"2020-08-31T13:21:49.501333504Z","streamType":"stdout","text":"    2        4.0 kB  /usr/share/ca-certificates/mozilla/DigiCert_Trusted_Root_G4.crt\n"},{"line":59,"timestamp":"2020-08-31T13:21:49.501334579Z","streamType":"stdout","text":"    2        4.0 kB  /usr/share/ca-certificates/mozilla/CFCA_EV_ROOT.crt\n"},{"line":60,"timestamp":"2020-08-31T13:21:49.501335487Z","streamType":"stdout","text":"    2        4.0 kB  /usr/share/ca-certificates/mozilla/GDCA_TrustAUTH_R5_ROOT.crt\n"},{"line":61,"timestamp":"2020-08-31T13:21:49.501336807Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/AC_RAIZ_FNMT-RCM.crt\n"},{"line":62,"timestamp":"2020-08-31T13:21:49.501338048Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/GlobalSign_Root_CA_-_R6.crt\n"},{"line":63,"timestamp":"2020-08-31T13:21:49.501384976Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/Staat_der_Nederlanden_Root_CA_-_G3.crt\n"},{"line":64,"timestamp":"2020-08-31T13:21:49.501386832Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/Staat_der_Nederlanden_EV_Root_CA.crt\n"},{"line":65,"timestamp":"2020-08-31T13:21:49.501388491Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/Taiwan_GRCA.crt\n"},{"line":66,"timestamp":"2020-08-31T13:21:49.501397174Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/ISRG_Root_X1.crt\n"},{"line":67,"timestamp":"2020-08-31T13:21:49.501399016Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/GeoTrust_Universal_CA_2.crt\n"},{"line":68,"timestamp":"2020-08-31T13:21:49.501400707Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/GeoTrust_Universal_CA.crt\n"},{"line":69,"timestamp":"2020-08-31T13:21:49.501402305Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/CA_Disig_Root_R2.crt\n"},{"line":70,"timestamp":"2020-08-31T13:21:49.501404632Z","streamType":"stdout","text":"    2        3.9 kB  /usr/share/ca-certificates/mozilla/IdenTrust_Public_Sector_Root_CA_1.crt\n"},{"line":71,"timestamp":"2020-08-31T13:21:49.501406759Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/IdenTrust_Commercial_Root_CA_1.crt\n"},{"line":72,"timestamp":"2020-08-31T13:21:49.501408674Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/QuoVadis_Root_CA_1_G3.crt\n"},{"line":73,"timestamp":"2020-08-31T13:21:49.501410032Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/QuoVadis_Root_CA_3_G3.crt\n"},{"line":74,"timestamp":"2020-08-31T13:21:49.501411695Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/QuoVadis_Root_CA_2_G3.crt\n"},{"line":75,"timestamp":"2020-08-31T13:21:49.501412984Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/Buypass_Class_2_Root_CA.crt\n"},{"line":76,"timestamp":"2020-08-31T13:21:49.501414045Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/Buypass_Class_3_Root_CA.crt\n"},{"line":77,"timestamp":"2020-08-31T13:21:49.501415118Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/UCA_Extended_Validation_Root.crt\n"},{"line":78,"timestamp":"2020-08-31T13:21:49.501416136Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/GTS_Root_R1.crt\n"},{"line":79,"timestamp":"2020-08-31T13:21:49.501416975Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/GTS_Root_R2.crt\n"},{"line":80,"timestamp":"2020-08-31T13:21:49.501417793Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/EC-ACC.crt\n"},{"line":81,"timestamp":"2020-08-31T13:21:49.501420847Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/UCA_Global_G2_Root.crt\n"},{"line":82,"timestamp":"2020-08-31T13:21:49.501422243Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/AffirmTrust_Premium.crt\n"},{"line":83,"timestamp":"2020-08-31T13:21:49.501423201Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/Amazon_Root_CA_2.crt\n"},{"line":84,"timestamp":"2020-08-31T13:21:49.501424302Z","streamType":"stdout","text":"    2        3.8 kB  /usr/share/ca-certificates/mozilla/TWCA_Global_Root_CA.crt\n"},{"line":85,"timestamp":"2020-08-31T13:21:49.501425379Z","streamType":"stdout","text":"    2        3.7 kB  /usr/share/ca-certificates/mozilla/TeliaSonera_Root_CA_v1.crt\n"},{"line":86,"timestamp":"2020-08-31T13:21:49.501426419Z","streamType":"stdout","text":"    2        3.7 kB  /etc/protocols\n"},{"line":87,"timestamp":"2020-08-31T13:21:49.501428838Z","streamType":"stdout","text":"    3        3.6 kB  /etc/passwd\n"},{"line":88,"timestamp":"2020-08-31T13:21:49.501429925Z","streamType":"stdout","text":"    2        3.6 kB  /docker-entrypoint.sh\n"},{"line":89,"timestamp":"2020-08-31T13:21:49.501431696Z","streamType":"stdout","text":"    2        3.5 kB  /usr/share/ca-certificates/mozilla/VeriSign_Class_3_Public_Primary_Certification_Authority_-_G5.crt\n"},{"line":90,"timestamp":"2020-08-31T13:21:49.501433106Z","streamType":"stdout","text":"    2        3.4 kB  /usr/share/ca-certificates/mozilla/VeriSign_Universal_Root_Certification_Authority.crt\n"},{"line":91,"timestamp":"2020-08-31T13:21:49.501434225Z","streamType":"stdout","text":"    2        3.3 kB  /usr/share/ca-certificates/mozilla/Entrust_Root_Certification_Authority.crt\n"},{"line":92,"timestamp":"2020-08-31T13:21:49.501436062Z","streamType":"stdout","text":"    2        3.2 kB  /usr/share/ca-certificates/mozilla/TUBITAK_Kamu_SM_SSL_Kok_Sertifikasi_-_Surum_1.crt\n"},{"line":93,"timestamp":"2020-08-31T13:21:49.50143719Z","streamType":"stdout","text":"    2        3.1 kB  /etc/modprobe.d/aliases.conf\n"},{"line":94,"timestamp":"2020-08-31T13:21:49.501438409Z","streamType":"stdout","text":"    2        3.1 kB  /usr/share/ca-certificates/mozilla/D-TRUST_Root_Class_3_CA_2_EV_2009.crt\n"},{"line":95,"timestamp":"2020-08-31T13:21:49.501439606Z","streamType":"stdout","text":"    2        3.1 kB  /usr/share/ca-certificates/mozilla/Entrust_Root_Certification_Authority_-_G2.crt\n"},{"line":96,"timestamp":"2020-08-31T13:21:49.501446914Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/Comodo_AAA_Services_root.crt\n"},{"line":97,"timestamp":"2020-08-31T13:21:49.501448125Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/D-TRUST_Root_Class_3_CA_2_2009.crt\n"},{"line":98,"timestamp":"2020-08-31T13:21:49.501449335Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/TrustCor_RootCert_CA-1.crt\n"},{"line":99,"timestamp":"2020-08-31T13:21:49.501450984Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/Hellenic_Academic_and_Research_Institutions_RootCA_2011.crt\n"},{"line":100,"timestamp":"2020-08-31T13:21:49.501451993Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/XRamp_Global_CA_Root.crt\n"},{"line":101,"timestamp":"2020-08-31T13:21:49.501453248Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/Entrust.net_Premium_2048_Secure_Server_CA.crt\n"},{"line":102,"timestamp":"2020-08-31T13:21:49.501458491Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/thawte_Primary_Root_CA_-_G3.crt\n"},{"line":103,"timestamp":"2020-08-31T13:21:49.501459426Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/thawte_Primary_Root_CA.crt\n"},{"line":104,"timestamp":"2020-08-31T13:21:49.501460554Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/TrustCor_ECA-1.crt\n"},{"line":105,"timestamp":"2020-08-31T13:21:49.501461547Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/COMODO_Certification_Authority.crt\n"},{"line":106,"timestamp":"2020-08-31T13:21:49.501463319Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/Verisign_Class_3_Public_Primary_Certification_Authority_-_G3.crt\n"},{"line":107,"timestamp":"2020-08-31T13:21:49.50147349Z","streamType":"stdout","text":"    2        3.0 kB  /usr/share/ca-certificates/mozilla/NetLock_Arany_=Class_Gold=_Főtanúsítvány.crt\n"},{"line":108,"timestamp":"2020-08-31T13:21:49.501474511Z","streamType":"stdout","text":"    2        2.9 kB  /usr/share/ca-certificates/mozilla/Starfield_Class_2_CA.crt\n"},{"line":109,"timestamp":"2020-08-31T13:21:49.501475696Z","streamType":"stdout","text":"    2        2.9 kB  /usr/share/ca-certificates/mozilla/Microsec_e-Szigno_Root_CA_2009.crt\n"},{"line":110,"timestamp":"2020-08-31T13:21:49.501476783Z","streamType":"stdout","text":"    2        2.9 kB  /usr/share/ca-certificates/mozilla/EE_Certification_Centre_Root_CA.crt\n"},{"line":111,"timestamp":"2020-08-31T13:21:49.501477922Z","streamType":"stdout","text":"    2        2.9 kB  /usr/share/ca-certificates/mozilla/Go_Daddy_Class_2_CA.crt\n"},{"line":112,"timestamp":"2020-08-31T13:21:49.501483576Z","streamType":"stdout","text":"    2        2.9 kB  /usr/share/ca-certificates/mozilla/GeoTrust_Primary_Certification_Authority_-_G3.crt\n"},{"line":113,"timestamp":"2020-08-31T13:21:49.501484765Z","streamType":"stdout","text":"    2        2.9 kB  /usr/share/ca-certificates/mozilla/OISTE_WISeKey_Global_Root_GA_CA.crt\n"},{"line":114,"timestamp":"2020-08-31T13:21:49.501486403Z","streamType":"stdout","text":"    2        2.8 kB  /usr/share/ca-certificates/mozilla/Starfield_Services_Root_Certificate_Authority_-_G2.crt\n"},{"line":115,"timestamp":"2020-08-31T13:21:49.501487709Z","streamType":"stdout","text":"    2        2.8 kB  /usr/share/ca-certificates/mozilla/Network_Solutions_Certificate_Authority.crt\n"},{"line":116,"timestamp":"2020-08-31T13:21:49.501488808Z","streamType":"stdout","text":"    2        2.8 kB  /usr/share/ca-certificates/mozilla/Starfield_Root_Certificate_Authority_-_G2.crt\n"},{"line":117,"timestamp":"2020-08-31T13:21:49.501492138Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/T-TeleSec_GlobalRoot_Class_3.crt\n"},{"line":118,"timestamp":"2020-08-31T13:21:49.501493539Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/Go_Daddy_Root_Certificate_Authority_-_G2.crt\n"},{"line":119,"timestamp":"2020-08-31T13:21:49.501494691Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/DigiCert_High_Assurance_EV_Root_CA.crt\n"},{"line":120,"timestamp":"2020-08-31T13:21:49.501495892Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/T-TeleSec_GlobalRoot_Class_2.crt\n"},{"line":121,"timestamp":"2020-08-31T13:21:49.501496833Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/Certum_Trusted_Network_CA.crt\n"},{"line":122,"timestamp":"2020-08-31T13:21:49.501498169Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/Secure_Global_CA.crt\n"},{"line":123,"timestamp":"2020-08-31T13:21:49.501499046Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/GlobalSign_Root_CA_-_R2.crt\n"},{"line":124,"timestamp":"2020-08-31T13:21:49.501500149Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/DigiCert_Assured_ID_Root_CA.crt\n"},{"line":125,"timestamp":"2020-08-31T13:21:49.501501088Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/SecureTrust_CA.crt\n"},{"line":126,"timestamp":"2020-08-31T13:21:49.501502139Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/OISTE_WISeKey_Global_Root_GB_CA.crt\n"},{"line":127,"timestamp":"2020-08-31T13:21:49.50150299Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/DigiCert_Global_Root_CA.crt\n"},{"line":128,"timestamp":"2020-08-31T13:21:49.501504481Z","streamType":"stdout","text":"    2        2.7 kB  /usr/share/ca-certificates/mozilla/Certigna.crt\n"},{"line":129,"timestamp":"2020-08-31T13:21:49.501505447Z","streamType":"stdout","text":"    2        2.6 kB  /usr/share/ca-certificates/mozilla/Cybertrust_Global_Root.crt\n"},{"line":130,"timestamp":"2020-08-31T13:21:49.501506366Z","streamType":"stdout","text":"    2        2.6 kB  /usr/share/ca-certificates/mozilla/DigiCert_Assured_ID_Root_G2.crt\n"},{"line":131,"timestamp":"2020-08-31T13:21:49.501507838Z","streamType":"stdout","text":"    2        2.6 kB  /usr/share/ca-certificates/mozilla/emSign_Root_CA_-_G1.crt\n"},{"line":132,"timestamp":"2020-08-31T13:21:49.501508827Z","streamType":"stdout","text":"    2        2.6 kB  /usr/share/ca-certificates/mozilla/DigiCert_Global_Root_G2.crt\n"},{"line":133,"timestamp":"2020-08-31T13:21:49.502133301Z","streamType":"stdout","text":"    2        2.6 kB  /usr/share/ca-certificates/mozilla/VeriSign_Class_3_Public_Primary_Certification_Authority_-_G4.crt\n"},{"line":134,"timestamp":"2020-08-31T13:21:49.502136549Z","streamType":"stdout","text":"    2        2.6 kB  /lib/sysctl.d/00-alpine.conf\n"},{"line":135,"timestamp":"2020-08-31T13:21:49.502139619Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/TWCA_Root_Certification_Authority.crt\n"},{"line":136,"timestamp":"2020-08-31T13:21:49.502142408Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/GeoTrust_Primary_Certification_Authority.crt\n"},{"line":137,"timestamp":"2020-08-31T13:21:49.502144872Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/Security_Communication_RootCA2.crt\n"},{"line":138,"timestamp":"2020-08-31T13:21:49.502147389Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/GlobalSign_Root_CA.crt\n"},{"line":139,"timestamp":"2020-08-31T13:21:49.502158076Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/Baltimore_CyberTrust_Root.crt\n"},{"line":140,"timestamp":"2020-08-31T13:21:49.502160172Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/Atos_TrustedRoot_2011.crt\n"},{"line":141,"timestamp":"2020-08-31T13:21:49.502162085Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/emSign_Root_CA_-_C1.crt\n"},{"line":142,"timestamp":"2020-08-31T13:21:49.502164385Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/SZAFIR_ROOT_CA2.crt\n"},{"line":143,"timestamp":"2020-08-31T13:21:49.50216646Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/SecureSign_RootCA11.crt\n"},{"line":144,"timestamp":"2020-08-31T13:21:49.502168702Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/Trustis_FPS_Root_CA.crt\n"},{"line":145,"timestamp":"2020-08-31T13:21:49.502170749Z","streamType":"stdout","text":"    2        2.5 kB  /usr/share/ca-certificates/mozilla/GlobalSign_Root_CA_-_R3.crt\n"},{"line":146,"timestamp":"2020-08-31T13:21:49.502172724Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/Security_Communication_Root_CA.crt\n"},{"line":147,"timestamp":"2020-08-31T13:21:49.502174208Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/GeoTrust_Global_CA.crt\n"},{"line":148,"timestamp":"2020-08-31T13:21:49.502176368Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/AffirmTrust_Networking.crt\n"},{"line":149,"timestamp":"2020-08-31T13:21:49.502178314Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/AffirmTrust_Commercial.crt\n"},{"line":150,"timestamp":"2020-08-31T13:21:49.50218012Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/DST_Root_CA_X3.crt\n"},{"line":151,"timestamp":"2020-08-31T13:21:49.502181954Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/Amazon_Root_CA_1.crt\n"},{"line":152,"timestamp":"2020-08-31T13:21:49.502183763Z","streamType":"stdout","text":"    2        2.4 kB  /usr/share/ca-certificates/mozilla/certSIGN_ROOT_CA.crt\n"},{"line":153,"timestamp":"2020-08-31T13:21:49.502185586Z","streamType":"stdout","text":"    2        2.3 kB  /usr/share/ca-certificates/mozilla/Hongkong_Post_Root_CA_1.crt\n"},{"line":154,"timestamp":"2020-08-31T13:21:49.502187667Z","streamType":"stdout","text":"    2        2.3 kB  /usr/share/ca-certificates/mozilla/Sonera_Class_2_Root_CA.crt\n"},{"line":155,"timestamp":"2020-08-31T13:21:49.502189932Z","streamType":"stdout","text":"    2        2.2 kB  /usr/share/ca-certificates/mozilla/Entrust_Root_Certification_Authority_-_EC1.crt\n"},{"line":156,"timestamp":"2020-08-31T13:21:49.502191507Z","streamType":"stdout","text":"    3        2.1 kB  /etc/group\n"},{"line":157,"timestamp":"2020-08-31T13:21:49.502194198Z","streamType":"stdout","text":"    2        2.0 kB  /usr/share/ca-certificates/mozilla/Hellenic_Academic_and_Research_Institutions_ECC_RootCA_2015.crt\n"},{"line":158,"timestamp":"2020-08-31T13:21:49.502196296Z","streamType":"stdout","text":"    2        2.0 kB  /usr/share/ca-certificates/mozilla/GeoTrust_Primary_Certification_Authority_-_G2.crt\n"},{"line":159,"timestamp":"2020-08-31T13:21:49.502198494Z","streamType":"stdout","text":"    2        1.9 kB  /usr/share/ca-certificates/mozilla/SSL.com_EV_Root_Certification_Authority_ECC.crt\n"},{"line":160,"timestamp":"2020-08-31T13:21:49.502200713Z","streamType":"stdout","text":"    2        1.9 kB  /usr/share/ca-certificates/mozilla/USERTrust_ECC_Certification_Authority.crt\n"},{"line":161,"timestamp":"2020-08-31T13:21:49.502203121Z","streamType":"stdout","text":"    2        1.9 kB  /usr/share/ca-certificates/mozilla/SSL.com_Root_Certification_Authority_ECC.crt\n"},{"line":162,"timestamp":"2020-08-31T13:21:49.502205321Z","streamType":"stdout","text":"    2        1.9 kB  /usr/share/ca-certificates/mozilla/COMODO_ECC_Certification_Authority.crt\n"},{"line":163,"timestamp":"2020-08-31T13:21:49.502207263Z","streamType":"stdout","text":"    2        1.9 kB  /usr/share/ca-certificates/mozilla/thawte_Primary_Root_CA_-_G2.crt\n"},{"line":164,"timestamp":"2020-08-31T13:21:49.502209029Z","streamType":"stdout","text":"    2        1.8 kB  /usr/share/ca-certificates/mozilla/OISTE_WISeKey_Global_Root_GC_CA.crt\n"},{"line":165,"timestamp":"2020-08-31T13:21:49.502210841Z","streamType":"stdout","text":"    2        1.7 kB  /usr/share/ca-certificates/mozilla/emSign_ECC_Root_CA_-_G3.crt\n"},{"line":166,"timestamp":"2020-08-31T13:21:49.502212904Z","streamType":"stdout","text":"    2        1.7 kB  /usr/share/ca-certificates/mozilla/DigiCert_Assured_ID_Root_G3.crt\n"},{"line":167,"timestamp":"2020-08-31T13:21:49.502214626Z","streamType":"stdout","text":"    2        1.7 kB  /usr/share/ca-certificates/mozilla/DigiCert_Global_Root_G3.crt\n"},{"line":168,"timestamp":"2020-08-31T13:21:49.50222181Z","streamType":"stdout","text":"    2        1.6 kB  /usr/share/ca-certificates/mozilla/emSign_ECC_Root_CA_-_C3.crt\n"},{"line":169,"timestamp":"2020-08-31T13:21:49.50222338Z","streamType":"stdout","text":"    2        1.6 kB  /usr/share/ca-certificates/mozilla/GlobalSign_ECC_Root_CA_-_R5.crt\n"},{"line":170,"timestamp":"2020-08-31T13:21:49.502225214Z","streamType":"stdout","text":"    2        1.5 kB  /usr/share/ca-certificates/mozilla/GTS_Root_R4.crt\n"},{"line":171,"timestamp":"2020-08-31T13:21:49.502228344Z","streamType":"stdout","text":"    2        1.5 kB  /usr/share/ca-certificates/mozilla/GTS_Root_R3.crt\n"},{"line":172,"timestamp":"2020-08-31T13:21:49.502229927Z","streamType":"stdout","text":"    2        1.5 kB  /usr/share/ca-certificates/mozilla/AddTrust_External_Root.crt\n"},{"line":173,"timestamp":"2020-08-31T13:21:49.502231463Z","streamType":"stdout","text":"    2        1.5 kB  /usr/share/ca-certificates/mozilla/AffirmTrust_Premium_ECC.crt\n"},{"line":174,"timestamp":"2020-08-31T13:21:49.502233168Z","streamType":"stdout","text":"    2        1.5 kB  /usr/share/ca-certificates/mozilla/Amazon_Root_CA_4.crt\n"},{"line":175,"timestamp":"2020-08-31T13:21:49.502240458Z","streamType":"stdout","text":"    2        1.4 kB  /usr/share/ca-certificates/mozilla/GlobalSign_ECC_Root_CA_-_R4.crt\n"},{"line":176,"timestamp":"2020-08-31T13:21:49.502242146Z","streamType":"stdout","text":"    2        1.4 kB  /etc/group-\n"},{"line":177,"timestamp":"2020-08-31T13:21:49.502254853Z","streamType":"stdout","text":"    6        1.3 kB  /lib/apk/db/triggers\n"},{"line":178,"timestamp":"2020-08-31T13:21:49.502256202Z","streamType":"stdout","text":"    3        1.3 kB  /etc/shadow\n"},{"line":179,"timestamp":"2020-08-31T13:21:49.502258237Z","streamType":"stdout","text":"    2        1.3 kB  /usr/share/ca-certificates/mozilla/Amazon_Root_CA_3.crt\n"},{"line":180,"timestamp":"2020-08-31T13:21:49.502259418Z","streamType":"stdout","text":"    2        1.1 kB  /etc/inittab\n"},{"line":181,"timestamp":"2020-08-31T13:21:49.5022609Z","streamType":"stdout","text":"    6        1.1 kB  /etc/apk/world\n"},{"line":182,"timestamp":"2020-08-31T13:21:49.502262325Z","streamType":"stdout","text":"    2         786 B  /sbin/ldconfig\n"},{"line":183,"timestamp":"2020-08-31T13:21:49.502263878Z","streamType":"stdout","text":"    2         590 B  /etc/profile.d/color_prompt\n"},{"line":184,"timestamp":"2020-08-31T13:21:49.502265288Z","streamType":"stdout","text":"    2         566 B  /etc/crontabs/root\n"},{"line":185,"timestamp":"2020-08-31T13:21:49.502266539Z","streamType":"stdout","text":"    2         566 B  /etc/motd\n"},{"line":186,"timestamp":"2020-08-31T13:21:49.502268032Z","streamType":"stdout","text":"    2         476 B  /etc/profile\n"},{"line":187,"timestamp":"2020-08-31T13:21:49.50226933Z","streamType":"stdout","text":"    2         436 B  /etc/network/if-up.d/dad\n"},{"line":188,"timestamp":"2020-08-31T13:21:49.502271456Z","streamType":"stdout","text":"    2         304 B  /etc/apk/protected_paths.d/ca-certificates.list\n"},{"line":189,"timestamp":"2020-08-31T13:21:49.502274351Z","streamType":"stdout","text":"    2         280 B  /etc/logrotate.d/acpid\n"},{"line":190,"timestamp":"2020-08-31T13:21:49.502275806Z","streamType":"stdout","text":"    2         244 B  /etc/modprobe.d/i386.conf\n"},{"line":191,"timestamp":"2020-08-31T13:21:49.502277188Z","streamType":"stdout","text":"    2         182 B  /etc/modprobe.d/kms.conf\n"},{"line":192,"timestamp":"2020-08-31T13:21:49.502278421Z","streamType":"stdout","text":"    2         178 B  /etc/fstab\n"},{"line":193,"timestamp":"2020-08-31T13:21:49.502279626Z","streamType":"stdout","text":"    2         135 B  /etc/securetty\n"},{"line":194,"timestamp":"2020-08-31T13:21:49.50228106Z","streamType":"stdout","text":"    2         106 B  /etc/sysctl.conf\n"},{"line":195,"timestamp":"2020-08-31T13:21:49.502282242Z","streamType":"stdout","text":"    2         104 B  /usr/bin/ldd\n"},{"line":196,"timestamp":"2020-08-31T13:21:49.502284008Z","streamType":"stdout","text":"    2          96 B  /etc/ca-certificates/update.d/certhash\n"},{"line":197,"timestamp":"2020-08-31T13:21:49.502285306Z","streamType":"stdout","text":"    2          86 B  /etc/shells\n"},{"line":198,"timestamp":"2020-08-31T13:21:49.502286537Z","streamType":"stdout","text":"    2          40 B  /etc/profile.d/locale\n"},{"line":199,"timestamp":"2020-08-31T13:21:49.502287614Z","streamType":"stdout","text":"    2          30 B  /etc/modules\n"},{"line":200,"timestamp":"2020-08-31T13:21:49.502288652Z","streamType":"stdout","text":"    2          23 B  /etc/subgid\n"},{"line":201,"timestamp":"2020-08-31T13:21:49.502289654Z","streamType":"stdout","text":"    2          23 B  /etc/subuid\n"},{"line":202,"timestamp":"2020-08-31T13:21:49.502290898Z","streamType":"stdout","text":"    2           0 B  /usr/bin/readlink\n"},{"line":203,"timestamp":"2020-08-31T13:21:49.502292152Z","streamType":"stdout","text":"    2           0 B  /usr/bin/expr\n"},{"line":204,"timestamp":"2020-08-31T13:21:49.502293396Z","streamType":"stdout","text":"    2           0 B  /bin/uname\n"},{"line":205,"timestamp":"2020-08-31T13:21:49.502294596Z","streamType":"stdout","text":"    2           0 B  /usr/bin/env\n"},{"line":206,"timestamp":"2020-08-31T13:21:49.502295749Z","streamType":"stdout","text":"    2           0 B  /usr/bin/du\n"},{"line":207,"timestamp":"2020-08-31T13:21:49.502296847Z","streamType":"stdout","text":"    2           0 B  /usr/bin/dirname\n"},{"line":208,"timestamp":"2020-08-31T13:21:49.502299831Z","streamType":"stdout","text":"    2           0 B  /usr/bin/cut\n"},{"line":209,"timestamp":"2020-08-31T13:21:49.502301096Z","streamType":"stdout","text":"    2           0 B  /usr/bin/comm\n"},{"line":210,"timestamp":"2020-08-31T13:21:49.502302303Z","streamType":"stdout","text":"    2           0 B  /usr/bin/cksum\n"},{"line":211,"timestamp":"2020-08-31T13:21:49.502303428Z","streamType":"stdout","text":"    2           0 B  /usr/bin/od\n"},{"line":212,"timestamp":"2020-08-31T13:21:49.502309936Z","streamType":"stdout","text":"    2           0 B  /usr/bin/basename\n"},{"line":213,"timestamp":"2020-08-31T13:21:49.502312861Z","streamType":"stdout","text":"    2           0 B  /usr/bin/[\n"},{"line":214,"timestamp":"2020-08-31T13:21:49.502313991Z","streamType":"stdout","text":"    2           0 B  /bin/nice\n"},{"line":215,"timestamp":"2020-08-31T13:21:49.502315062Z","streamType":"stdout","text":"    2           0 B  /usr/bin/paste\n"},{"line":216,"timestamp":"2020-08-31T13:21:49.50231623Z","streamType":"stdout","text":"    2           0 B  /usr/bin/printf\n"},{"line":217,"timestamp":"2020-08-31T13:21:49.502317601Z","streamType":"stdout","text":"    2           0 B  /lib/libc.musl-x86_64.so.1\n"},{"line":218,"timestamp":"2020-08-31T13:21:49.502318735Z","streamType":"stdout","text":"    2           0 B  /usr/bin/factor\n"},{"line":219,"timestamp":"2020-08-31T13:21:49.502319826Z","streamType":"stdout","text":"    2           0 B  /usr/bin/realpath\n"},{"line":220,"timestamp":"2020-08-31T13:21:49.502321015Z","streamType":"stdout","text":"    2           0 B  /usr/bin/fold\n"},{"line":221,"timestamp":"2020-08-31T13:21:49.502323007Z","streamType":"stdout","text":"    2           0 B  /etc/ssl/certs/ca-cert-AddTrust_External_Root.pem\n"},{"line":222,"timestamp":"2020-08-31T13:21:49.502324321Z","streamType":"stdout","text":"    2           0 B  /etc/ssl/certs/157753a5.0\n"},{"line":223,"timestamp":"2020-08-31T13:21:49.502325462Z","streamType":"stdout","text":"    2           0 B  /etc/ssl/cert.pem\n"},{"line":224,"timestamp":"2020-08-31T13:21:49.502326566Z","streamType":"stdout","text":"    2           0 B  /usr/bin/nproc\n"},{"line":225,"timestamp":"2020-08-31T13:21:49.502327855Z","streamType":"stdout","text":"    2           0 B  /usr/bin/seq\n"},{"line":226,"timestamp":"2020-08-31T13:21:49.502329042Z","streamType":"stdout","text":"    2           0 B  /usr/bin/nohup\n"},{"line":227,"timestamp":"2020-08-31T13:21:49.502330237Z","streamType":"stdout","text":"    2           0 B  /usr/bin/sha1sum\n"},{"line":228,"timestamp":"2020-08-31T13:21:49.502331359Z","streamType":"stdout","text":"    2           0 B  /usr/bin/sha256sum\n"},{"line":229,"timestamp":"2020-08-31T13:21:49.502332461Z","streamType":"stdout","text":"    2           0 B  /usr/bin/groups\n"},{"line":230,"timestamp":"2020-08-31T13:21:49.50233359Z","streamType":"stdout","text":"    2           0 B  /usr/bin/sha512sum\n"},{"line":231,"timestamp":"2020-08-31T13:21:49.502334744Z","streamType":"stdout","text":"    2           0 B  /usr/bin/shred\n"},{"line":232,"timestamp":"2020-08-31T13:21:49.502335807Z","streamType":"stdout","text":"    2           0 B  /etc/mtab\n"},{"line":233,"timestamp":"2020-08-31T13:21:49.50233689Z","streamType":"stdout","text":"    2           0 B  /usr/bin/shuf\n"},{"line":234,"timestamp":"2020-08-31T13:21:49.502338107Z","streamType":"stdout","text":"    2           0 B  /usr/bin/head\n"},{"line":235,"timestamp":"2020-08-31T13:21:49.502339297Z","streamType":"stdout","text":"    2           0 B  /usr/bin/install\n"},{"line":236,"timestamp":"2020-08-31T13:21:49.502340466Z","streamType":"stdout","text":"    2           0 B  /usr/bin/sort\n"},{"line":237,"timestamp":"2020-08-31T13:21:49.502342357Z","streamType":"stdout","text":"    2           0 B  /usr/bin/split\n"},{"line":238,"timestamp":"2020-08-31T13:21:49.502343537Z","streamType":"stdout","text":"    2           0 B  /usr/bin/sum\n"},{"line":239,"timestamp":"2020-08-31T13:21:49.502344638Z","streamType":"stdout","text":"    2           0 B  /usr/bin/tac\n"},{"line":240,"timestamp":"2020-08-31T13:21:49.502345724Z","streamType":"stdout","text":"    2           0 B  /usr/bin/tee\n"},{"line":241,"timestamp":"2020-08-31T13:21:49.502346847Z","streamType":"stdout","text":"    2           0 B  /usr/bin/hostid\n"},{"line":242,"timestamp":"2020-08-31T13:21:49.502347955Z","streamType":"stdout","text":"    2           0 B  /usr/bin/test\n"},{"line":243,"timestamp":"2020-08-31T13:21:49.502349089Z","streamType":"stdout","text":"    2           0 B  /usr/bin/timeout\n"},{"line":244,"timestamp":"2020-08-31T13:21:49.502350058Z","streamType":"stdout","text":"    2           0 B  /usr/bin/nl\n"},{"line":245,"timestamp":"2020-08-31T13:21:49.502351124Z","streamType":"stdout","text":"    2           0 B  /usr/bin/tr\n"},{"line":246,"timestamp":"2020-08-31T13:21:49.502352135Z","streamType":"stdout","text":"    2           0 B  /usr/bin/expand\n"},{"line":247,"timestamp":"2020-08-31T13:21:49.502353257Z","streamType":"stdout","text":"    2           0 B  /bin/true\n"},{"line":248,"timestamp":"2020-08-31T13:21:49.502354616Z","streamType":"stdout","text":"    2           0 B  /bin/touch\n"},{"line":249,"timestamp":"2020-08-31T13:21:49.502360934Z","streamType":"stdout","text":"    2           0 B  /bin/sync\n"},{"line":250,"timestamp":"2020-08-31T13:21:49.502362617Z","streamType":"stdout","text":"    2           0 B  /bin/stty\n"},{"line":251,"timestamp":"2020-08-31T13:21:49.502427422Z","streamType":"stdout","text":"    2           0 B  /bin/stat\n"},{"line":252,"timestamp":"2020-08-31T13:21:49.502428735Z","streamType":"stdout","text":"    2           0 B  /bin/sleep\n"},{"line":253,"timestamp":"2020-08-31T13:21:49.50242978Z","streamType":"stdout","text":"    2           0 B  /bin/sh\n"},{"line":254,"timestamp":"2020-08-31T13:21:49.50243102Z","streamType":"stdout","text":"    2           0 B  /bin/rmdir\n"},{"line":255,"timestamp":"2020-08-31T13:21:49.502432133Z","streamType":"stdout","text":"    2           0 B  /bin/rm\n"},{"line":256,"timestamp":"2020-08-31T13:21:49.50243326Z","streamType":"stdout","text":"    2           0 B  /bin/pwd\n"},{"line":257,"timestamp":"2020-08-31T13:21:49.502434641Z","streamType":"stdout","text":"    2           0 B  /bin/printenv\n"},{"line":258,"timestamp":"2020-08-31T13:21:49.502436151Z","streamType":"stdout","text":"    2           0 B  /usr/bin/truncate\n"},{"line":259,"timestamp":"2020-08-31T13:21:49.502437408Z","streamType":"stdout","text":"    2           0 B  /bin/mv\n"},{"line":260,"timestamp":"2020-08-31T13:21:49.502438507Z","streamType":"stdout","text":"    2           0 B  /bin/mktemp\n"},{"line":261,"timestamp":"2020-08-31T13:21:49.502439921Z","streamType":"stdout","text":"    2           0 B  /bin/mknod\n"},{"line":262,"timestamp":"2020-08-31T13:21:49.502441375Z","streamType":"stdout","text":"    2           0 B  /bin/mkdir\n"},{"line":263,"timestamp":"2020-08-31T13:21:49.502442763Z","streamType":"stdout","text":"    2           0 B  /bin/ls\n"},{"line":264,"timestamp":"2020-08-31T13:21:49.502444037Z","streamType":"stdout","text":"    2           0 B  /bin/ln\n"},{"line":265,"timestamp":"2020-08-31T13:21:49.502445049Z","streamType":"stdout","text":"    2           0 B  /bin/false\n"},{"line":266,"timestamp":"2020-08-31T13:21:49.502446244Z","streamType":"stdout","text":"    2           0 B  /bin/echo\n"},{"line":267,"timestamp":"2020-08-31T13:21:49.502447012Z","streamType":"stdout","text":"    2           0 B  /bin/df\n"},{"line":268,"timestamp":"2020-08-31T13:21:49.502447727Z","streamType":"stdout","text":"    2           0 B  /bin/dd\n"},{"line":269,"timestamp":"2020-08-31T13:21:49.50244874Z","streamType":"stdout","text":"    2           0 B  /bin/date\n"},{"line":270,"timestamp":"2020-08-31T13:21:49.502450003Z","streamType":"stdout","text":"    2           0 B  /bin/cp\n"},{"line":271,"timestamp":"2020-08-31T13:21:49.50245089Z","streamType":"stdout","text":"    2           0 B  /bin/chown\n"},{"line":272,"timestamp":"2020-08-31T13:21:49.502451906Z","streamType":"stdout","text":"    2           0 B  /bin/chmod\n"},{"line":273,"timestamp":"2020-08-31T13:21:49.502452919Z","streamType":"stdout","text":"    2           0 B  /bin/chgrp\n"},{"line":274,"timestamp":"2020-08-31T13:21:49.502454269Z","streamType":"stdout","text":"    2           0 B  /bin/cat\n"},{"line":275,"timestamp":"2020-08-31T13:21:49.502457538Z","streamType":"stdout","text":"    2           0 B  /usr/bin/tty\n"},{"line":276,"timestamp":"2020-08-31T13:21:49.502458641Z","streamType":"stdout","text":"    2           0 B  /bin/base64\n"},{"line":277,"timestamp":"2020-08-31T13:21:49.502459859Z","streamType":"stdout","text":"    2           0 B  /usr/bin/unexpand\n"},{"line":278,"timestamp":"2020-08-31T13:21:49.502461105Z","streamType":"stdout","text":"    2           0 B  /usr/bin/uniq\n"},{"line":279,"timestamp":"2020-08-31T13:21:49.50246278Z","streamType":"stdout","text":"    4           0 B  /var/cache/apk\n"},{"line":280,"timestamp":"2020-08-31T13:21:49.502464366Z","streamType":"stdout","text":"    2           0 B  /usr/bin/strings\n"},{"line":281,"timestamp":"2020-08-31T13:21:49.502465583Z","streamType":"stdout","text":"    2           0 B  /usr/bin/unlink\n"},{"line":282,"timestamp":"2020-08-31T13:21:49.502466821Z","streamType":"stdout","text":"    2           0 B  /usr/bin/id\n"},{"line":283,"timestamp":"2020-08-31T13:21:49.502467953Z","streamType":"stdout","text":"    2           0 B  /usr/bin/mkfifo\n"},{"line":284,"timestamp":"2020-08-31T13:21:49.502469181Z","streamType":"stdout","text":"    2           0 B  /usr/bin/wc\n"},{"line":285,"timestamp":"2020-08-31T13:21:49.50247687Z","streamType":"stdout","text":"    2           0 B  /usr/bin/whoami\n"},{"line":286,"timestamp":"2020-08-31T13:21:49.502478043Z","streamType":"stdout","text":"    2           0 B  /usr/bin/yes\n"},{"line":287,"timestamp":"2020-08-31T13:21:49.50247912Z","streamType":"stdout","text":"    2           0 B  /usr/bin/xzcat\n"},{"line":288,"timestamp":"2020-08-31T13:21:49.502480327Z","streamType":"stdout","text":"    2           0 B  /usr/sbin/chroot\n"},{"line":289,"timestamp":"2020-08-31T13:21:49.502482128Z","streamType":"stdout","text":"    2           0 B  /usr/bin/unxz\n"},{"line":290,"timestamp":"2020-08-31T13:21:49.502483488Z","streamType":"stdout","text":"    2           0 B  /usr/bin/unlzma\n"},{"line":291,"timestamp":"2020-08-31T13:21:49.502484742Z","streamType":"stdout","text":"    2           0 B  /usr/bin/lzma\n"},{"line":292,"timestamp":"2020-08-31T13:21:49.502485632Z","streamType":"stdout","text":"    2           0 B  /usr/bin/lzcat\n"},{"line":293,"timestamp":"2020-08-31T13:21:49.502486664Z","streamType":"stdout","text":"    6           0 B  /tmp\n"},{"line":294,"timestamp":"2020-08-31T13:21:49.502487619Z","streamType":"stdout","text":"    6           0 B  /var/cache/misc\n"},{"line":295,"timestamp":"2020-08-31T13:21:49.502488494Z","streamType":"stdout","text":"    2           0 B  /usr/bin/tail\n"},{"line":296,"timestamp":"2020-08-31T13:21:49.502489741Z","streamType":"stdout","text":"    2           0 B  /var/run\n"},{"line":297,"timestamp":"2020-08-31T13:21:49.502490748Z","streamType":"stdout","text":"    6           0 B  /lib/apk/db/lock\n"},{"line":298,"timestamp":"2020-08-31T13:21:49.502492217Z","streamType":"stdout","text":"    2           0 B  /var/spool/cron/crontabs\n"},{"line":299,"timestamp":"2020-08-31T13:21:49.502493501Z","streamType":"stdout","text":"    2           0 B  /var/spool/mail\n"},{"line":300,"timestamp":"2020-08-31T13:21:49.502494659Z","streamType":"stdout","text":"    2           0 B  /usr/bin/md5sum\n"},{"line":301,"timestamp":"2020-08-31T13:21:49.502497361Z","streamType":"stdout","text":"\u001b[1mResults:\u001b[0m\n"},{"line":302,"timestamp":"2020-08-31T13:21:49.502498909Z","streamType":"stdout","text":"  PASS: highestUserWastedPercent\n"},{"line":303,"timestamp":"2020-08-31T13:21:49.502500857Z","streamType":"stdout","text":"  \u001b[34mSKIP\u001b[0m: highestWastedBytes: rule disabled\n"},{"line":304,"timestamp":"2020-08-31T13:21:49.502502282Z","streamType":"stdout","text":"  PASS: lowestEfficiency\n"},{"line":305,"timestamp":"2020-08-31T13:21:49.50250484Z","streamType":"stdout","text":"\u001b[32mResult:PASS [Total:3] [Passed:2] [Failed:0] [Warn:0] [Skipped:1]\u001b[0m\n"},{"line":306,"timestamp":"2020-08-31T13:21:49.502506068Z","streamType":"stdout","text":"\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"dive","depth":1,"image":null,"duration":12341113023,"logLines":[{"line":1,"timestamp":"2020-08-31T13:21:45.486026273Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:21:45.486036255Z","streamType":"stdout","text":"Inspecting container image estafette/estafette-ci-builder:0.0.683 layers...\n"},{"line":3,"timestamp":"2020-08-31T13:21:45.486039431Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /dive estafette/estafette-ci-builder:0.0.683\u001b[0m\n"},{"line":4,"timestamp":"2020-08-31T13:21:45.490846755Z","streamType":"stdout","text":"  Using default CI config\n"},{"line":5,"timestamp":"2020-08-31T13:21:45.490858212Z","streamType":"stdout","text":"\u001b[1mImage Source: \u001b[0mdocker://estafette/estafette-ci-builder:0.0.683\n"},{"line":6,"timestamp":"2020-08-31T13:21:45.490861377Z","streamType":"stdout","text":"\u001b[1mFetching image...\u001b[0m (this can take a while for large images)\n"},{"line":7,"timestamp":"2020-08-31T13:21:47.59241246Z","streamType":"stdout","text":"\u001b[1mAnalyzing image...\u001b[0m\n"},{"line":8,"timestamp":"2020-08-31T13:21:47.592644565Z","streamType":"stdout","text":"  efficiency: 99.8018 %\n"},{"line":9,"timestamp":"2020-08-31T13:21:47.592749254Z","streamType":"stdout","text":"  wastedBytes: 758755 bytes (759 kB)\n"},{"line":10,"timestamp":"2020-08-31T13:21:47.59283665Z","streamType":"stdout","text":"  userWastedPercent: 0.3062 %\n"},{"line":11,"timestamp":"2020-08-31T13:21:47.592931743Z","streamType":"stdout","text":"\u001b[1mInefficient Files:\u001b[0m\n"},{"line":12,"timestamp":"2020-08-31T13:21:47.593028586Z","streamType":"stdout","text":"Count  Wasted Space  File Path\n"},{"line":13,"timestamp":"2020-08-31T13:21:47.593118071Z","streamType":"stdout","text":"    2        464 kB  /etc/ssl/cert.pem\n"},{"line":14,"timestamp":"2020-08-31T13:21:47.593195645Z","streamType":"stdout","text":"    4        166 kB  /lib/apk/db/installed\n"},{"line":15,"timestamp":"2020-08-31T13:21:47.593268941Z","streamType":"stdout","text":"    2         72 kB  /usr/bin/xz\n"},{"line":16,"timestamp":"2020-08-31T13:21:47.593323875Z","streamType":"stdout","text":"    4         49 kB  /lib/apk/db/scripts.tar\n"},{"line":17,"timestamp":"2020-08-31T13:21:47.593404976Z","streamType":"stdout","text":"    2        2.4 kB  /etc/passwd\n"},{"line":18,"timestamp":"2020-08-31T13:21:47.593469045Z","streamType":"stdout","text":"    3        2.1 kB  /etc/group\n"},{"line":19,"timestamp":"2020-08-31T13:21:47.593543126Z","streamType":"stdout","text":"    2        1.4 kB  /etc/group-\n"},{"line":20,"timestamp":"2020-08-31T13:21:47.593605861Z","streamType":"stdout","text":"    2         875 B  /etc/shadow\n"},{"line":21,"timestamp":"2020-08-31T13:21:47.593676478Z","streamType":"stdout","text":"    4         712 B  /lib/apk/db/triggers\n"},{"line":22,"timestamp":"2020-08-31T13:21:47.59374169Z","streamType":"stdout","text":"    4         509 B  /etc/apk/world\n"},{"line":23,"timestamp":"2020-08-31T13:21:47.593810704Z","streamType":"stdout","text":"    2          23 B  /etc/subuid\n"},{"line":24,"timestamp":"2020-08-31T13:21:47.593863437Z","streamType":"stdout","text":"    2          23 B  /etc/subgid\n"},{"line":25,"timestamp":"2020-08-31T13:21:47.593939507Z","streamType":"stdout","text":"    2           0 B  /var/cache/apk\n"},{"line":26,"timestamp":"2020-08-31T13:21:47.594011585Z","streamType":"stdout","text":"    2           0 B  /usr/bin/lzcat\n"},{"line":27,"timestamp":"2020-08-31T13:21:47.594098625Z","streamType":"stdout","text":"    3           0 B  /tmp\n"},{"line":28,"timestamp":"2020-08-31T13:21:47.594158656Z","streamType":"stdout","text":"    3           0 B  /var/cache/misc\n"},{"line":29,"timestamp":"2020-08-31T13:21:47.594209815Z","streamType":"stdout","text":"    2           0 B  /usr/bin/unlzma\n"},{"line":30,"timestamp":"2020-08-31T13:21:47.594268105Z","streamType":"stdout","text":"    2           0 B  /usr/bin/unxz\n"},{"line":31,"timestamp":"2020-08-31T13:21:47.594334159Z","streamType":"stdout","text":"    4           0 B  /lib/apk/db/lock\n"},{"line":32,"timestamp":"2020-08-31T13:21:47.59438655Z","streamType":"stdout","text":"    2           0 B  /usr/bin/xzcat\n"},{"line":33,"timestamp":"2020-08-31T13:21:47.594455074Z","streamType":"stdout","text":"    2           0 B  /usr/bin/lzma\n"},{"line":34,"timestamp":"2020-08-31T13:21:47.594517122Z","streamType":"stdout","text":"\u001b[1mResults:\u001b[0m\n"},{"line":35,"timestamp":"2020-08-31T13:21:47.594574326Z","streamType":"stdout","text":"  PASS: highestUserWastedPercent\n"},{"line":36,"timestamp":"2020-08-31T13:21:47.594649571Z","streamType":"stdout","text":"  \u001b[34mSKIP\u001b[0m: highestWastedBytes: rule disabled\n"},{"line":37,"timestamp":"2020-08-31T13:21:47.594655291Z","streamType":"stdout","text":"  PASS: lowestEfficiency\n"},{"line":38,"timestamp":"2020-08-31T13:21:47.59465937Z","streamType":"stdout","text":"\u001b[32mResult:PASS [Total:3] [Passed:2] [Failed:0] [Warn:0] [Skipped:1]\u001b[0m\n"},{"line":39,"timestamp":"2020-08-31T13:21:47.594677827Z","streamType":"stdout","text":"\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"trivy-gocd-agent","depth":1,"image":null,"duration":22285300539,"logLines":[{"line":1,"timestamp":"2020-08-31T13:21:46.012244909Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:21:46.012357197Z","streamType":"stdout","text":"Updating trivy vulnerabilities database...\n"},{"line":3,"timestamp":"2020-08-31T13:21:46.012434404Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --download-db-only estafette/estafette-ci-builder:0.0.683-gocd\u001b[0m\n"},{"line":4,"timestamp":"2020-08-31T13:21:46.026204607Z","streamType":"stdout","text":"2020-08-31T13:21:46.025Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":5,"timestamp":"2020-08-31T13:21:46.026213242Z","streamType":"stdout","text":"2020-08-31T13:21:46.025Z\t\u001b[34mINFO\u001b[0m\tNeed to update DB\n"},{"line":6,"timestamp":"2020-08-31T13:21:46.026215896Z","streamType":"stdout","text":"2020-08-31T13:21:46.025Z\t\u001b[34mINFO\u001b[0m\tDownloading DB...\n"},{"line":7,"timestamp":"2020-08-31T13:21:53.62905343Z","streamType":"stdout","text":"Saving docker image to file for scanning...\n"},{"line":8,"timestamp":"2020-08-31T13:21:53.629287469Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker save estafette/estafette-ci-builder:0.0.683-gocd -o /tmp/547511084.tar\u001b[0m\n"},{"line":9,"timestamp":"2020-08-31T13:22:05.388996937Z","streamType":"stdout","text":"Scanning container image estafette/estafette-ci-builder:0.0.683-gocd for vulnerabilities...\n"},{"line":10,"timestamp":"2020-08-31T13:22:05.38940816Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --skip-update --no-progress --exit-code 15 --ignore-unfixed --input /tmp/547511084.tar\u001b[0m\n"},{"line":11,"timestamp":"2020-08-31T13:22:05.771123722Z","streamType":"stdout","text":"2020-08-31T13:22:05.770Z\t\u001b[34mINFO\u001b[0m\tUse your github token\n"},{"line":12,"timestamp":"2020-08-31T13:22:06.621202831Z","streamType":"stdout","text":"2020-08-31T13:22:06.620Z\t\u001b[34mINFO\u001b[0m\tDetecting Alpine vulnerabilities...\n"},{"line":13,"timestamp":"2020-08-31T13:22:06.623062122Z","streamType":"stdout","text":"\n"},{"line":14,"timestamp":"2020-08-31T13:22:06.62307336Z","streamType":"stdout","text":"/tmp/547511084.tar (alpine 3.12.0)\n"},{"line":15,"timestamp":"2020-08-31T13:22:06.623075614Z","streamType":"stdout","text":"==================================\n"},{"line":16,"timestamp":"2020-08-31T13:22:06.623103698Z","streamType":"stdout","text":"Total: 0 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n"},{"line":17,"timestamp":"2020-08-31T13:22:06.623104685Z","streamType":"stdout","text":"\n"}],"exitCode":0,"status":"SUCCEEDED"}]},{"step":"clean-working-directory","image":null,"duration":1133726984,"logLines":[{"line":1,"timestamp":"2020-08-31T13:22:07.844221312Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e exec rm -rf ..?* .[!.]* *\u001b[0m\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"test","image":null,"duration":97140478628,"logLines":[{"line":1,"timestamp":"2020-08-31T13:22:08.760221822Z","streamType":"stdout","text":"Starting estafette-ci-builder version 0.0.683... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-31T13:20:32Z \u001b[36mgoVersion=\u001b[0mgo1.15 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mfedcec403962470e21b635cb2da34d027e634858\n"},{"line":2,"timestamp":"2020-08-31T13:22:08.760232048Z","streamType":"stdout","text":"Reading builder config from envvar BUILDER_CONFIG...\n"},{"line":3,"timestamp":"2020-08-31T13:22:08.763504319Z","streamType":"stdout","text":"Starting docker daemon...\n"},{"line":4,"timestamp":"2020-08-31T13:22:08.764015999Z","streamType":"stdout","text":"Waiting for docker daemon to be ready for use...\n"},{"line":5,"timestamp":"2020-08-31T13:22:08.7966229Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.796156223Z\" level=info msg=\"Starting up\"\n"},{"line":6,"timestamp":"2020-08-31T13:22:08.797129075Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.796733919Z\" level=warning msg=\"[!] DON'T BIND ON ANY IP ADDRESS WITHOUT setting --tlsverify IF YOU DON'T KNOW WHAT YOU'RE DOING [!]\"\n"},{"line":7,"timestamp":"2020-08-31T13:22:08.798051463Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.797604909Z\" level=info msg=\"libcontainerd: started new containerd process\" pid=23\n"},{"line":8,"timestamp":"2020-08-31T13:22:08.798062278Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.797648523Z\" level=info msg=\"parsed scheme: \\\"unix\\\"\" module=grpc\n"},{"line":9,"timestamp":"2020-08-31T13:22:08.798066068Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.797664375Z\" level=info msg=\"scheme \\\"unix\\\" not registered, fallback to default scheme\" module=grpc\n"},{"line":10,"timestamp":"2020-08-31T13:22:08.798070202Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.797684873Z\" level=info msg=\"ccResolverWrapper: sending update to cc: {[{unix:///var/run/docker/containerd/containerd.sock 0  \u003cnil\u003e}] \u003cnil\u003e}\" module=grpc\n"},{"line":11,"timestamp":"2020-08-31T13:22:08.798076198Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.797701023Z\" level=info msg=\"ClientConn switching balancer to \\\"pick_first\\\"\" module=grpc\n"},{"line":12,"timestamp":"2020-08-31T13:22:08.818685637Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.818244053Z\" level=info msg=\"starting containerd\" revision=7ad184331fa3e55e52b890ea95e65ba581ae3429 version=v1.2.13 \n"},{"line":13,"timestamp":"2020-08-31T13:22:08.820157005Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.818730702Z\" level=info msg=\"loading plugin \"io.containerd.content.v1.content\"...\" type=io.containerd.content.v1 \n"},{"line":14,"timestamp":"2020-08-31T13:22:08.820172284Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.818853730Z\" level=info msg=\"loading plugin \"io.containerd.snapshotter.v1.btrfs\"...\" type=io.containerd.snapshotter.v1 \n"},{"line":15,"timestamp":"2020-08-31T13:22:08.820179851Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.819153875Z\" level=warning msg=\"failed to load plugin io.containerd.snapshotter.v1.btrfs\" error=\"path /var/lib/docker/containerd/daemon/io.containerd.snapshotter.v1.btrfs must be a btrfs filesystem to be used with the btrfs snapshotter\" \n"},{"line":16,"timestamp":"2020-08-31T13:22:08.820183533Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.819179186Z\" level=info msg=\"loading plugin \"io.containerd.snapshotter.v1.aufs\"...\" type=io.containerd.snapshotter.v1 \n"},{"line":17,"timestamp":"2020-08-31T13:22:08.823560784Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.823167630Z\" level=warning msg=\"failed to load plugin io.containerd.snapshotter.v1.aufs\" error=\"modprobe aufs failed: \"ip: can't find device 'aufs'\\nmodprobe: can't change directory to '/lib/modules': No such file or directory\\n\": exit status 1\" \n"},{"line":18,"timestamp":"2020-08-31T13:22:08.823573425Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.823189955Z\" level=info msg=\"loading plugin \"io.containerd.snapshotter.v1.native\"...\" type=io.containerd.snapshotter.v1 \n"},{"line":19,"timestamp":"2020-08-31T13:22:08.82369536Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.823385835Z\" level=info msg=\"loading plugin \"io.containerd.snapshotter.v1.overlayfs\"...\" type=io.containerd.snapshotter.v1 \n"},{"line":20,"timestamp":"2020-08-31T13:22:08.824067318Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.823748636Z\" level=info msg=\"loading plugin \"io.containerd.snapshotter.v1.zfs\"...\" type=io.containerd.snapshotter.v1 \n"},{"line":21,"timestamp":"2020-08-31T13:22:08.824636672Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.824205833Z\" level=info msg=\"skip loading plugin \"io.containerd.snapshotter.v1.zfs\"...\" type=io.containerd.snapshotter.v1 \n"},{"line":22,"timestamp":"2020-08-31T13:22:08.824642731Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.824228680Z\" level=info msg=\"loading plugin \"io.containerd.metadata.v1.bolt\"...\" type=io.containerd.metadata.v1 \n"},{"line":23,"timestamp":"2020-08-31T13:22:08.824647233Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.824288442Z\" level=warning msg=\"could not use snapshotter btrfs in metadata plugin\" error=\"path /var/lib/docker/containerd/daemon/io.containerd.snapshotter.v1.btrfs must be a btrfs filesystem to be used with the btrfs snapshotter\" \n"},{"line":24,"timestamp":"2020-08-31T13:22:08.824650605Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.824303835Z\" level=warning msg=\"could not use snapshotter aufs in metadata plugin\" error=\"modprobe aufs failed: \"ip: can't find device 'aufs'\\nmodprobe: can't change directory to '/lib/modules': No such file or directory\\n\": exit status 1\" \n"},{"line":25,"timestamp":"2020-08-31T13:22:08.82465382Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.824312865Z\" level=warning msg=\"could not use snapshotter zfs in metadata plugin\" error=\"path /var/lib/docker/containerd/daemon/io.containerd.snapshotter.v1.zfs must be a zfs filesystem to be used with the zfs snapshotter: skip plugin\" \n"},{"line":26,"timestamp":"2020-08-31T13:22:08.832562871Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832224812Z\" level=info msg=\"loading plugin \"io.containerd.differ.v1.walking\"...\" type=io.containerd.differ.v1 \n"},{"line":27,"timestamp":"2020-08-31T13:22:08.832570093Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832260296Z\" level=info msg=\"loading plugin \"io.containerd.gc.v1.scheduler\"...\" type=io.containerd.gc.v1 \n"},{"line":28,"timestamp":"2020-08-31T13:22:08.832573589Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832313685Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.containers-service\"...\" type=io.containerd.service.v1 \n"},{"line":29,"timestamp":"2020-08-31T13:22:08.832928351Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832330013Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.content-service\"...\" type=io.containerd.service.v1 \n"},{"line":30,"timestamp":"2020-08-31T13:22:08.832933677Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832449390Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.diff-service\"...\" type=io.containerd.service.v1 \n"},{"line":31,"timestamp":"2020-08-31T13:22:08.832935609Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832476742Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.images-service\"...\" type=io.containerd.service.v1 \n"},{"line":32,"timestamp":"2020-08-31T13:22:08.832937273Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832606175Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.leases-service\"...\" type=io.containerd.service.v1 \n"},{"line":33,"timestamp":"2020-08-31T13:22:08.832938944Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832678348Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.namespaces-service\"...\" type=io.containerd.service.v1 \n"},{"line":34,"timestamp":"2020-08-31T13:22:08.832941309Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832727810Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.snapshots-service\"...\" type=io.containerd.service.v1 \n"},{"line":35,"timestamp":"2020-08-31T13:22:08.833205884Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.832805742Z\" level=info msg=\"loading plugin \"io.containerd.runtime.v1.linux\"...\" type=io.containerd.runtime.v1 \n"},{"line":36,"timestamp":"2020-08-31T13:22:08.833405931Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833063713Z\" level=info msg=\"loading plugin \"io.containerd.runtime.v2.task\"...\" type=io.containerd.runtime.v2 \n"},{"line":37,"timestamp":"2020-08-31T13:22:08.833659917Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833292089Z\" level=info msg=\"loading plugin \"io.containerd.monitor.v1.cgroups\"...\" type=io.containerd.monitor.v1 \n"},{"line":38,"timestamp":"2020-08-31T13:22:08.834296514Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833882310Z\" level=info msg=\"loading plugin \"io.containerd.service.v1.tasks-service\"...\" type=io.containerd.service.v1 \n"},{"line":39,"timestamp":"2020-08-31T13:22:08.834306676Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833915058Z\" level=info msg=\"loading plugin \"io.containerd.internal.v1.restart\"...\" type=io.containerd.internal.v1 \n"},{"line":40,"timestamp":"2020-08-31T13:22:08.834309212Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833955920Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.containers\"...\" type=io.containerd.grpc.v1 \n"},{"line":41,"timestamp":"2020-08-31T13:22:08.834311011Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833965735Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.content\"...\" type=io.containerd.grpc.v1 \n"},{"line":42,"timestamp":"2020-08-31T13:22:08.834312941Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833973668Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.diff\"...\" type=io.containerd.grpc.v1 \n"},{"line":43,"timestamp":"2020-08-31T13:22:08.834314452Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833981588Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.events\"...\" type=io.containerd.grpc.v1 \n"},{"line":44,"timestamp":"2020-08-31T13:22:08.834316229Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833988864Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.healthcheck\"...\" type=io.containerd.grpc.v1 \n"},{"line":45,"timestamp":"2020-08-31T13:22:08.834317594Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.833996825Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.images\"...\" type=io.containerd.grpc.v1 \n"},{"line":46,"timestamp":"2020-08-31T13:22:08.834319129Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834004799Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.leases\"...\" type=io.containerd.grpc.v1 \n"},{"line":47,"timestamp":"2020-08-31T13:22:08.83432056Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834012111Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.namespaces\"...\" type=io.containerd.grpc.v1 \n"},{"line":48,"timestamp":"2020-08-31T13:22:08.834334482Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834019446Z\" level=info msg=\"loading plugin \"io.containerd.internal.v1.opt\"...\" type=io.containerd.internal.v1 \n"},{"line":49,"timestamp":"2020-08-31T13:22:08.834791043Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834332582Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.snapshots\"...\" type=io.containerd.grpc.v1 \n"},{"line":50,"timestamp":"2020-08-31T13:22:08.834794025Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834351829Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.tasks\"...\" type=io.containerd.grpc.v1 \n"},{"line":51,"timestamp":"2020-08-31T13:22:08.834799794Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834360256Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.version\"...\" type=io.containerd.grpc.v1 \n"},{"line":52,"timestamp":"2020-08-31T13:22:08.83480152Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834386292Z\" level=info msg=\"loading plugin \"io.containerd.grpc.v1.introspection\"...\" type=io.containerd.grpc.v1 \n"},{"line":53,"timestamp":"2020-08-31T13:22:08.834804041Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834544043Z\" level=info msg=serving... address=\"/var/run/docker/containerd/containerd-debug.sock\" \n"},{"line":54,"timestamp":"2020-08-31T13:22:08.834805794Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834595153Z\" level=info msg=serving... address=\"/var/run/docker/containerd/containerd.sock\" \n"},{"line":55,"timestamp":"2020-08-31T13:22:08.834808028Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.834602565Z\" level=info msg=\"containerd successfully booted in 0.017086s\" \n"},{"line":56,"timestamp":"2020-08-31T13:22:08.841496069Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.840960755Z\" level=info msg=\"parsed scheme: \\\"unix\\\"\" module=grpc\n"},{"line":57,"timestamp":"2020-08-31T13:22:08.841505706Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.840983147Z\" level=info msg=\"scheme \\\"unix\\\" not registered, fallback to default scheme\" module=grpc\n"},{"line":58,"timestamp":"2020-08-31T13:22:08.841509614Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.840998307Z\" level=info msg=\"ccResolverWrapper: sending update to cc: {[{unix:///var/run/docker/containerd/containerd.sock 0  \u003cnil\u003e}] \u003cnil\u003e}\" module=grpc\n"},{"line":59,"timestamp":"2020-08-31T13:22:08.841511502Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.841010527Z\" level=info msg=\"ClientConn switching balancer to \\\"pick_first\\\"\" module=grpc\n"},{"line":60,"timestamp":"2020-08-31T13:22:08.842650084Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.842270686Z\" level=info msg=\"parsed scheme: \\\"unix\\\"\" module=grpc\n"},{"line":61,"timestamp":"2020-08-31T13:22:08.842660075Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.842298717Z\" level=info msg=\"scheme \\\"unix\\\" not registered, fallback to default scheme\" module=grpc\n"},{"line":62,"timestamp":"2020-08-31T13:22:08.842676621Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.842317569Z\" level=info msg=\"ccResolverWrapper: sending update to cc: {[{unix:///var/run/docker/containerd/containerd.sock 0  \u003cnil\u003e}] \u003cnil\u003e}\" module=grpc\n"},{"line":63,"timestamp":"2020-08-31T13:22:08.842678742Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.842330457Z\" level=info msg=\"ClientConn switching balancer to \\\"pick_first\\\"\" module=grpc\n"},{"line":64,"timestamp":"2020-08-31T13:22:08.884965198Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.884534978Z\" level=info msg=\"Loading containers: start.\"\n"},{"line":65,"timestamp":"2020-08-31T13:22:08.892927199Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.892552836Z\" level=warning msg=\"Running modprobe bridge br_netfilter failed with message: ip: can't find device 'bridge'\\nip: can't find device 'br_netfilter'\\nbr_netfilter           24576  0 \\nmodprobe: can't change directory to '/lib/modules': No such file or directory\\n, error: exit status 1\"\n"},{"line":66,"timestamp":"2020-08-31T13:22:08.977736168Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.977358856Z\" level=info msg=\"Loading containers: done.\"\n"},{"line":67,"timestamp":"2020-08-31T13:22:09.000470156Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:08.999909054Z\" level=info msg=\"Docker daemon\" commit=afacb8b7f0 graphdriver(s)=overlay2 version=19.03.8\n"},{"line":68,"timestamp":"2020-08-31T13:22:09.000477546Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:09.000108161Z\" level=info msg=\"Daemon has completed initialization\"\n"},{"line":69,"timestamp":"2020-08-31T13:22:09.027833117Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:09.027410329Z\" level=info msg=\"API listen on [::]:2375\"\n"},{"line":70,"timestamp":"2020-08-31T13:22:09.027968612Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:09.027593281Z\" level=info msg=\"API listen on /var/run/docker.sock\"\n"},{"line":71,"timestamp":"2020-08-31T13:22:09.764553016Z","streamType":"stdout","text":"Docker daemon is ready for use\n"},{"line":72,"timestamp":"2020-08-31T13:22:09.764895992Z","streamType":"stdout","text":"Starting build version 0.0.0-integration-test...\n"},{"line":73,"timestamp":"2020-08-31T13:22:09.765330015Z","streamType":"stdout","text":"Running 4 stages\n"},{"line":74,"timestamp":"2020-08-31T13:22:09.765337164Z","streamType":"stdout","text":"Creating docker network estafette...\n"},{"line":75,"timestamp":"2020-08-31T13:22:09.804097696Z","streamType":"stdout","text":"Succesfully created docker network estafette\n"},{"line":76,"timestamp":"2020-08-31T13:22:09.804247714Z","streamType":"stdout","text":"Running 4 stages\n"},{"line":77,"timestamp":"2020-08-31T13:22:09.804603685Z","streamType":"stdout","text":"[services-test] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":78,"timestamp":"2020-08-31T13:22:09.804750855Z","streamType":"stdout","text":"[services-test] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":79,"timestamp":"2020-08-31T13:22:09.804755285Z","streamType":"stdout","text":"[services-test] Starting stage\n"},{"line":80,"timestamp":"2020-08-31T13:22:09.804757864Z","streamType":"stdout","text":"[services-test] Checking if docker image 'alpine:latest' exists locally...\n"},{"line":81,"timestamp":"2020-08-31T13:22:09.80514441Z","streamType":"stdout","text":"[services-test] Checking if docker image 'alpine:latest' is trusted...\n"},{"line":82,"timestamp":"2020-08-31T13:22:09.805151152Z","streamType":"stdout","text":"[services-test] Pulling docker image 'alpine:latest'\n"},{"line":83,"timestamp":"2020-08-31T13:22:09.805533746Z","streamType":"stdout","text":"[builder-info] Starting \u001b[1mestafette-ci-builder\u001b[0m version \u001b[1m0.0.683\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-31T13:20:32Z \u001b[36mgoVersion=\u001b[0mgo1.15 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mfedcec403962470e21b635cb2da34d027e634858\n"},{"line":84,"timestamp":"2020-08-31T13:22:11.967495075Z","streamType":"stdout","text":"[services-test] [cockroachdb] Starting service...\n"},{"line":85,"timestamp":"2020-08-31T13:22:11.967508738Z","streamType":"stdout","text":"[cockroachdb] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":86,"timestamp":"2020-08-31T13:22:11.967512977Z","streamType":"stdout","text":"[cockroachdb] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":87,"timestamp":"2020-08-31T13:22:11.967515547Z","streamType":"stdout","text":"[services-test] [cockroachdb] Starting service\n"},{"line":88,"timestamp":"2020-08-31T13:22:11.967518695Z","streamType":"stdout","text":"[cockroachdb] Checking if docker image 'cockroachdb/cockroach:v19.2.0' exists locally...\n"},{"line":89,"timestamp":"2020-08-31T13:22:11.968004025Z","streamType":"stdout","text":"[services-test] [nginx] Starting service...\n"},{"line":90,"timestamp":"2020-08-31T13:22:11.968016236Z","streamType":"stdout","text":"[nginx] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":91,"timestamp":"2020-08-31T13:22:11.968019219Z","streamType":"stdout","text":"[nginx] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":92,"timestamp":"2020-08-31T13:22:11.968020769Z","streamType":"stdout","text":"[services-test] [nginx] Starting service\n"},{"line":93,"timestamp":"2020-08-31T13:22:11.968023092Z","streamType":"stdout","text":"[nginx] Checking if docker image 'nginx:alpine' exists locally...\n"},{"line":94,"timestamp":"2020-08-31T13:22:11.968260597Z","streamType":"stdout","text":"[cockroachdb] Checking if docker image 'cockroachdb/cockroach:v19.2.0' is trusted...\n"},{"line":95,"timestamp":"2020-08-31T13:22:11.96869839Z","streamType":"stdout","text":"[cockroachdb] Pulling docker image 'cockroachdb/cockroach:v19.2.0'\n"},{"line":96,"timestamp":"2020-08-31T13:22:11.968717513Z","streamType":"stdout","text":"[nginx] Checking if docker image 'nginx:alpine' is trusted...\n"},{"line":97,"timestamp":"2020-08-31T13:22:11.968719552Z","streamType":"stdout","text":"[nginx] Pulling docker image 'nginx:alpine'\n"},{"line":98,"timestamp":"2020-08-31T13:22:16.62825248Z","streamType":"stdout","text":"Adding container id f3af18e2c5b09c041789e1d49e339c2e6b8fa787aeba9a6b9cbb751865d57426 to containerIDs\n"},{"line":99,"timestamp":"2020-08-31T13:22:16.654784895Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:16.654158571Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":100,"timestamp":"2020-08-31T13:22:16.654798245Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:16.654219335Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":101,"timestamp":"2020-08-31T13:22:16.739201691Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:16.738503424Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/f3af18e2c5b09c041789e1d49e339c2e6b8fa787aeba9a6b9cbb751865d57426/shim.sock\" debug=false pid=301 \n"},{"line":102,"timestamp":"2020-08-31T13:22:17.188448228Z","streamType":"stdout","text":"[services-test] Starting readiness probe...\n"},{"line":103,"timestamp":"2020-08-31T13:22:17.188634743Z","streamType":"stdout","text":"[nginx-prober] Checking if docker image 'estafette/scratch:latest' exists locally...\n"},{"line":104,"timestamp":"2020-08-31T13:22:17.190346985Z","streamType":"stdout","text":"[services-test][nginx] /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n"},{"line":105,"timestamp":"2020-08-31T13:22:17.190358484Z","streamType":"stdout","text":"\n"},{"line":106,"timestamp":"2020-08-31T13:22:17.190363361Z","streamType":"stdout","text":"[services-test][nginx] /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n"},{"line":107,"timestamp":"2020-08-31T13:22:17.190364319Z","streamType":"stdout","text":"\n"},{"line":108,"timestamp":"2020-08-31T13:22:17.190367493Z","streamType":"stdout","text":"[services-test][nginx] /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n"},{"line":109,"timestamp":"2020-08-31T13:22:17.190368589Z","streamType":"stdout","text":"\n"},{"line":110,"timestamp":"2020-08-31T13:22:17.190522516Z","streamType":"stdout","text":"[nginx-prober] Pulling docker image 'estafette/scratch:latest'\n"},{"line":111,"timestamp":"2020-08-31T13:22:17.192735822Z","streamType":"stdout","text":"[services-test][nginx] 10-listen-on-ipv6-by-default.sh: Getting the checksum of /etc/nginx/conf.d/default.conf\n"},{"line":112,"timestamp":"2020-08-31T13:22:17.192747579Z","streamType":"stdout","text":"\n"},{"line":113,"timestamp":"2020-08-31T13:22:17.203778335Z","streamType":"stdout","text":"[services-test][nginx] 10-listen-on-ipv6-by-default.sh: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n"},{"line":114,"timestamp":"2020-08-31T13:22:17.203783591Z","streamType":"stdout","text":"\n"},{"line":115,"timestamp":"2020-08-31T13:22:17.204060621Z","streamType":"stdout","text":"[services-test][nginx] /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n"},{"line":116,"timestamp":"2020-08-31T13:22:17.204077071Z","streamType":"stdout","text":"\n"},{"line":117,"timestamp":"2020-08-31T13:22:17.207388524Z","streamType":"stdout","text":"[services-test][nginx] /docker-entrypoint.sh: Configuration complete; ready for start up\n"},{"line":118,"timestamp":"2020-08-31T13:22:17.207398419Z","streamType":"stdout","text":"\n"},{"line":119,"timestamp":"2020-08-31T13:22:18.958781262Z","streamType":"stdout","text":"Adding container id b2ec55e92db65b5864b729fa1287168fec3ed0b9180d59a1798c66403604f405 to containerIDs\n"},{"line":120,"timestamp":"2020-08-31T13:22:18.983750775Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:18.983226656Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":121,"timestamp":"2020-08-31T13:22:18.983762274Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:18.983258168Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":122,"timestamp":"2020-08-31T13:22:19.056152131Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:19.055459773Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/b2ec55e92db65b5864b729fa1287168fec3ed0b9180d59a1798c66403604f405/shim.sock\" debug=false pid=403 \n"},{"line":123,"timestamp":"2020-08-31T13:22:19.564151857Z","streamType":"stdout","text":"[services-test][nginx] Starting estafette-ci-builder version 0.0.683... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-31T13:20:32Z \u001b[36mgoVersion=\u001b[0mgo1.15 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mfedcec403962470e21b635cb2da34d027e634858\n"},{"line":124,"timestamp":"2020-08-31T13:22:19.564166007Z","streamType":"stdout","text":"\n"},{"line":125,"timestamp":"2020-08-31T13:22:19.564171994Z","streamType":"stdout","text":"[services-test][nginx] Running readiness probe against http://nginx:80/ with host header nginx\n"},{"line":126,"timestamp":"2020-08-31T13:22:19.564173413Z","streamType":"stdout","text":"\n"},{"line":127,"timestamp":"2020-08-31T13:22:19.578590859Z","streamType":"stdout","text":"[services-test][nginx] 192.168.4.3 - - [31/Aug/2020:13:22:19 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Go-http-client/1.1\" \"-\"\n"},{"line":128,"timestamp":"2020-08-31T13:22:19.578600702Z","streamType":"stdout","text":"\n"},{"line":129,"timestamp":"2020-08-31T13:22:19.578866536Z","streamType":"stdout","text":"[services-test][nginx] Readiness probe against http://nginx:80/ with host header nginx succeeded in time\n"},{"line":130,"timestamp":"2020-08-31T13:22:19.578874093Z","streamType":"stdout","text":"\n"},{"line":131,"timestamp":"2020-08-31T13:22:19.623533017Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:19.623142580Z\" level=info msg=\"shim reaped\" id=b2ec55e92db65b5864b729fa1287168fec3ed0b9180d59a1798c66403604f405 \n"},{"line":132,"timestamp":"2020-08-31T13:22:19.633475697Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:19.633038869Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":133,"timestamp":"2020-08-31T13:22:19.924768844Z","streamType":"stdout","text":"Removing container id b2ec55e92db65b5864b729fa1287168fec3ed0b9180d59a1798c66403604f405 from containerIDs\n"},{"line":134,"timestamp":"2020-08-31T13:22:19.925546828Z","streamType":"stdout","text":"[services-test] [nginx] Service up and running\n"},{"line":135,"timestamp":"2020-08-31T13:22:21.126285729Z","streamType":"stdout","text":"Inspecting entrypoint script at /estafette-entrypoints/estafette-entrypoint-383766706.sh \u001b[36mentrypoint=\u001b[0m\"#!/bin/sh\\nset -e\\n\\necho -e \\\"\\\\x1b[38;5;250m\u003e exec /cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\\\\x1b[0m\\\"\\nexec /cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\"\n"},{"line":136,"timestamp":"2020-08-31T13:22:22.375531198Z","streamType":"stdout","text":"Adding container id 4a16eebb27b16683e0e149f61405768a17c7b50667a73554cdef07f573ddd328 to containerIDs\n"},{"line":137,"timestamp":"2020-08-31T13:22:22.411849632Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:22.411329056Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":138,"timestamp":"2020-08-31T13:22:22.411860449Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:22.411358925Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":139,"timestamp":"2020-08-31T13:22:22.479213227Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:22.478729507Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/4a16eebb27b16683e0e149f61405768a17c7b50667a73554cdef07f573ddd328/shim.sock\" debug=false pid=516 \n"},{"line":140,"timestamp":"2020-08-31T13:22:22.950724623Z","streamType":"stdout","text":"[services-test] Starting readiness probe...\n"},{"line":141,"timestamp":"2020-08-31T13:22:22.95074606Z","streamType":"stdout","text":"[cockroachdb-prober] Checking if docker image 'estafette/scratch:latest' exists locally...\n"},{"line":142,"timestamp":"2020-08-31T13:22:22.951340571Z","streamType":"stdout","text":"[services-test][cockroachdb] -e \\x1b[38;5;250m\u003e exec /cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\\x1b[0m\n"},{"line":143,"timestamp":"2020-08-31T13:22:22.951347863Z","streamType":"stdout","text":"\n"},{"line":144,"timestamp":"2020-08-31T13:22:22.994680753Z","streamType":"stdout","text":"Adding container id d780a6c15c1e242fc3e0688a409542f34a463285ec4ca9e86e20bb36803d6609 to containerIDs\n"},{"line":145,"timestamp":"2020-08-31T13:22:23.032293931Z","streamType":"stdout","text":"[services-test][cockroachdb] *\n"},{"line":146,"timestamp":"2020-08-31T13:22:23.032304762Z","streamType":"stdout","text":"\n"},{"line":147,"timestamp":"2020-08-31T13:22:23.032959083Z","streamType":"stdout","text":"[services-test][cockroachdb] * WARNING: RUNNING IN INSECURE MODE!\n"},{"line":148,"timestamp":"2020-08-31T13:22:23.032966122Z","streamType":"stdout","text":"\n"},{"line":149,"timestamp":"2020-08-31T13:22:23.033435681Z","streamType":"stdout","text":"[services-test][cockroachdb] * \n"},{"line":150,"timestamp":"2020-08-31T13:22:23.033442359Z","streamType":"stdout","text":"\n"},{"line":151,"timestamp":"2020-08-31T13:22:23.033904658Z","streamType":"stdout","text":"[services-test][cockroachdb] * - Your cluster is open for any client that can access \u003call your IP addresses\u003e.\n"},{"line":152,"timestamp":"2020-08-31T13:22:23.033908917Z","streamType":"stdout","text":"\n"},{"line":153,"timestamp":"2020-08-31T13:22:23.034343317Z","streamType":"stdout","text":"[services-test][cockroachdb] * - Any user, even root, can log in without providing a password.\n"},{"line":154,"timestamp":"2020-08-31T13:22:23.034349767Z","streamType":"stdout","text":"\n"},{"line":155,"timestamp":"2020-08-31T13:22:23.034805899Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:23.034426793Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":156,"timestamp":"2020-08-31T13:22:23.034812855Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:23.034465045Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":157,"timestamp":"2020-08-31T13:22:23.035140192Z","streamType":"stdout","text":"[services-test][cockroachdb] * - Any user, connecting as root, can read or write any data in your cluster.\n"},{"line":158,"timestamp":"2020-08-31T13:22:23.035146503Z","streamType":"stdout","text":"\n"},{"line":159,"timestamp":"2020-08-31T13:22:23.035470138Z","streamType":"stdout","text":"[services-test][cockroachdb] * - There is no network encryption nor authentication, and thus no confidentiality.\n"},{"line":160,"timestamp":"2020-08-31T13:22:23.035474179Z","streamType":"stdout","text":"\n"},{"line":161,"timestamp":"2020-08-31T13:22:23.035753012Z","streamType":"stdout","text":"[services-test][cockroachdb] * \n"},{"line":162,"timestamp":"2020-08-31T13:22:23.035756786Z","streamType":"stdout","text":"\n"},{"line":163,"timestamp":"2020-08-31T13:22:23.036038883Z","streamType":"stdout","text":"[services-test][cockroachdb] * Check out how to secure your cluster: https://www.cockroachlabs.com/docs/v19.2/secure-a-cluster.html\n"},{"line":164,"timestamp":"2020-08-31T13:22:23.036043124Z","streamType":"stdout","text":"\n"},{"line":165,"timestamp":"2020-08-31T13:22:23.036393103Z","streamType":"stdout","text":"[services-test][cockroachdb] *\n"},{"line":166,"timestamp":"2020-08-31T13:22:23.036397175Z","streamType":"stdout","text":"\n"},{"line":167,"timestamp":"2020-08-31T13:22:23.109503784Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:23.109025563Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/d780a6c15c1e242fc3e0688a409542f34a463285ec4ca9e86e20bb36803d6609/shim.sock\" debug=false pid=602 \n"},{"line":168,"timestamp":"2020-08-31T13:22:23.618540976Z","streamType":"stdout","text":"[services-test][cockroachdb] Starting estafette-ci-builder version 0.0.683... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-31T13:20:32Z \u001b[36mgoVersion=\u001b[0mgo1.15 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0mfedcec403962470e21b635cb2da34d027e634858\n"},{"line":169,"timestamp":"2020-08-31T13:22:23.618551149Z","streamType":"stdout","text":"\n"},{"line":170,"timestamp":"2020-08-31T13:22:23.620427626Z","streamType":"stdout","text":"[services-test][cockroachdb] Running readiness probe against http://cockroachdb:8080/health?ready=1 with host header cockroachdb\n"},{"line":171,"timestamp":"2020-08-31T13:22:23.62043432Z","streamType":"stdout","text":"\n"},{"line":172,"timestamp":"2020-08-31T13:22:23.639356643Z","streamType":"stdout","text":"[services-test][cockroachdb] Readiness probe against http://cockroachdb:8080/health?ready=1 with host header cockroachdb succeeded in time\n"},{"line":173,"timestamp":"2020-08-31T13:22:23.639361618Z","streamType":"stdout","text":"\n"},{"line":174,"timestamp":"2020-08-31T13:22:23.696024428Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:23.695509798Z\" level=info msg=\"shim reaped\" id=d780a6c15c1e242fc3e0688a409542f34a463285ec4ca9e86e20bb36803d6609 \n"},{"line":175,"timestamp":"2020-08-31T13:22:23.706136971Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:23.705602711Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":176,"timestamp":"2020-08-31T13:22:23.721275841Z","streamType":"stdout","text":"[services-test][cockroachdb] *\n"},{"line":177,"timestamp":"2020-08-31T13:22:23.721283671Z","streamType":"stdout","text":"\n"},{"line":178,"timestamp":"2020-08-31T13:22:23.721288581Z","streamType":"stdout","text":"[services-test][cockroachdb] * INFO: Replication was disabled for this cluster.\n"},{"line":179,"timestamp":"2020-08-31T13:22:23.721289441Z","streamType":"stdout","text":"\n"},{"line":180,"timestamp":"2020-08-31T13:22:23.721294046Z","streamType":"stdout","text":"[services-test][cockroachdb] * When/if adding nodes in the future, update zone configurations to increase the replication factor.\n"},{"line":181,"timestamp":"2020-08-31T13:22:23.72129487Z","streamType":"stdout","text":"\n"},{"line":182,"timestamp":"2020-08-31T13:22:23.721296502Z","streamType":"stdout","text":"[services-test][cockroachdb] *\n"},{"line":183,"timestamp":"2020-08-31T13:22:23.721297262Z","streamType":"stdout","text":"\n"},{"line":184,"timestamp":"2020-08-31T13:22:23.721922211Z","streamType":"stdout","text":"[services-test][cockroachdb] CockroachDB node starting at 2020-08-31 13:22:23.720033068 +0000 UTC (took 0.7s)\n"},{"line":185,"timestamp":"2020-08-31T13:22:23.721923855Z","streamType":"stdout","text":"\n"},{"line":186,"timestamp":"2020-08-31T13:22:23.721932468Z","streamType":"stdout","text":"[services-test][cockroachdb] build:               CCL v19.2.0 @ 2019/11/12 05:13:04 (go1.12.12)\n"},{"line":187,"timestamp":"2020-08-31T13:22:23.721933107Z","streamType":"stdout","text":"\n"},{"line":188,"timestamp":"2020-08-31T13:22:23.721937507Z","streamType":"stdout","text":"[services-test][cockroachdb] webui:               http://cockroachdb:8080\n"},{"line":189,"timestamp":"2020-08-31T13:22:23.721938038Z","streamType":"stdout","text":"\n"},{"line":190,"timestamp":"2020-08-31T13:22:23.721940713Z","streamType":"stdout","text":"[services-test][cockroachdb] sql:                 postgresql://root@cockroachdb:26257?sslmode=disable\n"},{"line":191,"timestamp":"2020-08-31T13:22:23.721969892Z","streamType":"stdout","text":"\n"},{"line":192,"timestamp":"2020-08-31T13:22:23.721972637Z","streamType":"stdout","text":"[services-test][cockroachdb] RPC client flags:    /cockroach/cockroach \u003cclient cmd\u003e --host=cockroachdb:26257 --insecure\n"},{"line":193,"timestamp":"2020-08-31T13:22:23.721973104Z","streamType":"stdout","text":"\n"},{"line":194,"timestamp":"2020-08-31T13:22:23.721974757Z","streamType":"stdout","text":"[services-test][cockroachdb] logs:                /cockroach/cockroach-data/logs\n"},{"line":195,"timestamp":"2020-08-31T13:22:23.721975256Z","streamType":"stdout","text":"\n"},{"line":196,"timestamp":"2020-08-31T13:22:23.721977044Z","streamType":"stdout","text":"[services-test][cockroachdb] temp dir:            /cockroach/cockroach-data/cockroach-temp881308335\n"},{"line":197,"timestamp":"2020-08-31T13:22:23.723133413Z","streamType":"stdout","text":"\n"},{"line":198,"timestamp":"2020-08-31T13:22:23.723138472Z","streamType":"stdout","text":"[services-test][cockroachdb] external I/O path:   /cockroach/cockroach-data/extern\n"},{"line":199,"timestamp":"2020-08-31T13:22:23.723139372Z","streamType":"stdout","text":"\n"},{"line":200,"timestamp":"2020-08-31T13:22:23.723157732Z","streamType":"stdout","text":"[services-test][cockroachdb] store[0]:            path=/cockroach/cockroach-data\n"},{"line":201,"timestamp":"2020-08-31T13:22:23.723158539Z","streamType":"stdout","text":"\n"},{"line":202,"timestamp":"2020-08-31T13:22:23.723161227Z","streamType":"stdout","text":"[services-test][cockroachdb] status:              initialized new cluster\n"},{"line":203,"timestamp":"2020-08-31T13:22:23.723162006Z","streamType":"stdout","text":"\n"},{"line":204,"timestamp":"2020-08-31T13:22:23.72319338Z","streamType":"stdout","text":"[services-test][cockroachdb] clusterID:           a1a67d70-61ca-4307-9c2a-3a453cc9243f\n"},{"line":205,"timestamp":"2020-08-31T13:22:23.723194195Z","streamType":"stdout","text":"\n"},{"line":206,"timestamp":"2020-08-31T13:22:23.723196937Z","streamType":"stdout","text":"[services-test][cockroachdb] nodeID:              1\n"},{"line":207,"timestamp":"2020-08-31T13:22:23.723197404Z","streamType":"stdout","text":"\n"},{"line":208,"timestamp":"2020-08-31T13:22:23.91963216Z","streamType":"stdout","text":"Removing container id d780a6c15c1e242fc3e0688a409542f34a463285ec4ca9e86e20bb36803d6609 from containerIDs\n"},{"line":209,"timestamp":"2020-08-31T13:22:23.9198799Z","streamType":"stdout","text":"[services-test] [cockroachdb] Service up and running\n"},{"line":210,"timestamp":"2020-08-31T13:22:23.92097971Z","streamType":"stdout","text":"Inspecting entrypoint script at /estafette-entrypoints/estafette-entrypoint-012809321.sh \u001b[36mentrypoint=\u001b[0m\"#!/bin/sh\\nset -e\\necho -e \\\"\\\\x1b[38;5;250m\u003e route \u0026\\\\x1b[0m\\\"\\nroute \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\necho -e \\\"\\\\x1b[38;5;250m\u003e ip addr show eth0 \u0026\\\\x1b[0m\\\"\\nip addr show eth0 \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\necho -e \\\"\\\\x1b[38;5;250m\u003e cat /etc/hosts \u0026\\\\x1b[0m\\\"\\ncat /etc/hosts \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\necho -e \\\"\\\\x1b[38;5;250m\u003e cat /etc/resolv.conf \u0026\\\\x1b[0m\\\"\\ncat /etc/resolv.conf \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\necho -e \\\"\\\\x1b[38;5;250m\u003e apk add curl \u0026\\\\x1b[0m\\\"\\napk add curl \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\n\\necho -e \\\"\\\\x1b[38;5;250m\u003e exec curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused http://nginx:80/\\\\x1b[0m\\\"\\nexec curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused http://nginx:80/\"\n"},{"line":211,"timestamp":"2020-08-31T13:22:23.97684304Z","streamType":"stdout","text":"Adding container id 71e4c3e2e330a324abe5f0efbc9ec442f7cfbc717bc6aef7bcfd12df574492c4 to containerIDs\n"},{"line":212,"timestamp":"2020-08-31T13:22:24.014265625Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:24.013703725Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":213,"timestamp":"2020-08-31T13:22:24.014279969Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:24.013733177Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":214,"timestamp":"2020-08-31T13:22:24.078313029Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:24.077776304Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/71e4c3e2e330a324abe5f0efbc9ec442f7cfbc717bc6aef7bcfd12df574492c4/shim.sock\" debug=false pid=740 \n"},{"line":215,"timestamp":"2020-08-31T13:22:24.563464357Z","streamType":"stdout","text":"[services-test] \u001b[38;5;250m\u003e route \u0026\u001b[0m\n"},{"line":216,"timestamp":"2020-08-31T13:22:24.563474439Z","streamType":"stdout","text":"\n"},{"line":217,"timestamp":"2020-08-31T13:22:24.563477052Z","streamType":"stdout","text":"[services-test] Kernel IP routing table\n"},{"line":218,"timestamp":"2020-08-31T13:22:24.563478318Z","streamType":"stdout","text":"\n"},{"line":219,"timestamp":"2020-08-31T13:22:24.563481381Z","streamType":"stdout","text":"[services-test] Destination     Gateway         Genmask         Flags Metric Ref    Use Iface\n"},{"line":220,"timestamp":"2020-08-31T13:22:24.5634822Z","streamType":"stdout","text":"\n"},{"line":221,"timestamp":"2020-08-31T13:22:24.563484401Z","streamType":"stdout","text":"[services-test] default         192.168.3.1     0.0.0.0         UG    0      0        0 eth0\n"},{"line":222,"timestamp":"2020-08-31T13:22:24.563485788Z","streamType":"stdout","text":"\n"},{"line":223,"timestamp":"2020-08-31T13:22:24.563487601Z","streamType":"stdout","text":"[services-test] 192.168.3.0     *               255.255.255.0   U     0      0        0 eth0\n"},{"line":224,"timestamp":"2020-08-31T13:22:24.563488355Z","streamType":"stdout","text":"\n"},{"line":225,"timestamp":"2020-08-31T13:22:24.563490127Z","streamType":"stdout","text":"[services-test] 192.168.4.0     *               255.255.255.0   U     0      0        0 eth1\n"},{"line":226,"timestamp":"2020-08-31T13:22:24.563495156Z","streamType":"stdout","text":"\n"},{"line":227,"timestamp":"2020-08-31T13:22:24.563497596Z","streamType":"stdout","text":"[services-test] \u001b[38;5;250m\u003e ip addr show eth0 \u0026\u001b[0m\n"},{"line":228,"timestamp":"2020-08-31T13:22:24.563498468Z","streamType":"stdout","text":"\n"},{"line":229,"timestamp":"2020-08-31T13:22:24.563502189Z","streamType":"stdout","text":"[services-test] 20: eth0@if21: \u003cBROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN\u003e mtu 1460 qdisc noqueue state UP \n"},{"line":230,"timestamp":"2020-08-31T13:22:24.563503009Z","streamType":"stdout","text":"\n"},{"line":231,"timestamp":"2020-08-31T13:22:24.563505545Z","streamType":"stdout","text":"[services-test]     link/ether 02:42:c0:a8:03:04 brd ff:ff:ff:ff:ff:ff\n"},{"line":232,"timestamp":"2020-08-31T13:22:24.56351709Z","streamType":"stdout","text":"\n"},{"line":233,"timestamp":"2020-08-31T13:22:24.563519573Z","streamType":"stdout","text":"[services-test]     inet 192.168.3.4/24 brd 192.168.3.255 scope global eth0\n"},{"line":234,"timestamp":"2020-08-31T13:22:24.563520537Z","streamType":"stdout","text":"\n"},{"line":235,"timestamp":"2020-08-31T13:22:24.563522901Z","streamType":"stdout","text":"[services-test]        valid_lft forever preferred_lft forever\n"},{"line":236,"timestamp":"2020-08-31T13:22:24.563523711Z","streamType":"stdout","text":"\n"},{"line":237,"timestamp":"2020-08-31T13:22:24.563525419Z","streamType":"stdout","text":"[services-test] \u001b[38;5;250m\u003e cat /etc/hosts \u0026\u001b[0m\n"},{"line":238,"timestamp":"2020-08-31T13:22:24.563526176Z","streamType":"stdout","text":"\n"},{"line":239,"timestamp":"2020-08-31T13:22:24.564833208Z","streamType":"stdout","text":"[services-test] 127.0.0.1\tlocalhost\n"},{"line":240,"timestamp":"2020-08-31T13:22:24.564835045Z","streamType":"stdout","text":"\n"},{"line":241,"timestamp":"2020-08-31T13:22:24.564837977Z","streamType":"stdout","text":"[services-test] ::1\tlocalhost ip6-localhost ip6-loopback\n"},{"line":242,"timestamp":"2020-08-31T13:22:24.56483901Z","streamType":"stdout","text":"\n"},{"line":243,"timestamp":"2020-08-31T13:22:24.564840723Z","streamType":"stdout","text":"[services-test] fe00::0\tip6-localnet\n"},{"line":244,"timestamp":"2020-08-31T13:22:24.564850272Z","streamType":"stdout","text":"\n"},{"line":245,"timestamp":"2020-08-31T13:22:24.564852027Z","streamType":"stdout","text":"[services-test] ff00::0\tip6-mcastprefix\n"},{"line":246,"timestamp":"2020-08-31T13:22:24.564853033Z","streamType":"stdout","text":"\n"},{"line":247,"timestamp":"2020-08-31T13:22:24.564854274Z","streamType":"stdout","text":"[services-test] ff02::1\tip6-allnodes\n"},{"line":248,"timestamp":"2020-08-31T13:22:24.564854917Z","streamType":"stdout","text":"\n"},{"line":249,"timestamp":"2020-08-31T13:22:24.564856213Z","streamType":"stdout","text":"[services-test] ff02::2\tip6-allrouters\n"},{"line":250,"timestamp":"2020-08-31T13:22:24.564856935Z","streamType":"stdout","text":"\n"},{"line":251,"timestamp":"2020-08-31T13:22:24.564858602Z","streamType":"stdout","text":"[services-test] 192.168.3.4\t71e4c3e2e330\n"},{"line":252,"timestamp":"2020-08-31T13:22:24.56485921Z","streamType":"stdout","text":"\n"},{"line":253,"timestamp":"2020-08-31T13:22:24.564860592Z","streamType":"stdout","text":"[services-test] 192.168.4.4\t71e4c3e2e330\n"},{"line":254,"timestamp":"2020-08-31T13:22:24.564861076Z","streamType":"stdout","text":"\n"},{"line":255,"timestamp":"2020-08-31T13:22:24.564863139Z","streamType":"stdout","text":"[services-test] \u001b[38;5;250m\u003e cat /etc/resolv.conf \u0026\u001b[0m\n"},{"line":256,"timestamp":"2020-08-31T13:22:24.564863795Z","streamType":"stdout","text":"\n"},{"line":257,"timestamp":"2020-08-31T13:22:24.565307969Z","streamType":"stdout","text":"[services-test] search estafette-ci-jobs.svc.cluster.local svc.cluster.local cluster.local c.tooling-estafette-lezmb.internal google.internal\n"},{"line":258,"timestamp":"2020-08-31T13:22:24.565309509Z","streamType":"stdout","text":"\n"},{"line":259,"timestamp":"2020-08-31T13:22:24.565440123Z","streamType":"stdout","text":"[services-test] nameserver 127.0.0.11\n"},{"line":260,"timestamp":"2020-08-31T13:22:24.565454404Z","streamType":"stdout","text":"\n"},{"line":261,"timestamp":"2020-08-31T13:22:24.565729179Z","streamType":"stdout","text":"[services-test] options ndots:5\n"},{"line":262,"timestamp":"2020-08-31T13:22:24.565741746Z","streamType":"stdout","text":"\n"},{"line":263,"timestamp":"2020-08-31T13:22:24.56574367Z","streamType":"stdout","text":"[services-test] \u001b[38;5;250m\u003e apk add curl \u0026\u001b[0m\n"},{"line":264,"timestamp":"2020-08-31T13:22:24.56574427Z","streamType":"stdout","text":"\n"},{"line":265,"timestamp":"2020-08-31T13:22:24.571638021Z","streamType":"stdout","text":"[services-test] fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz\n"},{"line":266,"timestamp":"2020-08-31T13:22:24.571645463Z","streamType":"stdout","text":"\n"},{"line":267,"timestamp":"2020-08-31T13:22:24.695914769Z","streamType":"stdout","text":"[services-test] fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz\n"},{"line":268,"timestamp":"2020-08-31T13:22:24.695931799Z","streamType":"stdout","text":"\n"},{"line":269,"timestamp":"2020-08-31T13:22:24.863445932Z","streamType":"stdout","text":"[services-test] (1/4) Installing ca-certificates (20191127-r4)\n"},{"line":270,"timestamp":"2020-08-31T13:22:24.863455256Z","streamType":"stdout","text":"\n"},{"line":271,"timestamp":"2020-08-31T13:22:24.882698248Z","streamType":"stdout","text":"[services-test] (2/4) Installing nghttp2-libs (1.41.0-r0)\n"},{"line":272,"timestamp":"2020-08-31T13:22:24.882711644Z","streamType":"stdout","text":"\n"},{"line":273,"timestamp":"2020-08-31T13:22:24.88998131Z","streamType":"stdout","text":"[services-test] (3/4) Installing libcurl (7.69.1-r0)\n"},{"line":274,"timestamp":"2020-08-31T13:22:24.889990527Z","streamType":"stdout","text":"\n"},{"line":275,"timestamp":"2020-08-31T13:22:24.901824504Z","streamType":"stdout","text":"[services-test] (4/4) Installing curl (7.69.1-r0)\n"},{"line":276,"timestamp":"2020-08-31T13:22:24.901831908Z","streamType":"stdout","text":"\n"},{"line":277,"timestamp":"2020-08-31T13:22:24.910682623Z","streamType":"stdout","text":"[services-test] Executing busybox-1.31.1-r16.trigger\n"},{"line":278,"timestamp":"2020-08-31T13:22:24.910688006Z","streamType":"stdout","text":"\n"},{"line":279,"timestamp":"2020-08-31T13:22:24.916402212Z","streamType":"stdout","text":"[services-test] Executing ca-certificates-20191127-r4.trigger\n"},{"line":280,"timestamp":"2020-08-31T13:22:24.91641Z","streamType":"stdout","text":"\n"},{"line":281,"timestamp":"2020-08-31T13:22:24.954856327Z","streamType":"stdout","text":"[services-test] OK: 7 MiB in 18 packages\n"},{"line":282,"timestamp":"2020-08-31T13:22:24.954862279Z","streamType":"stdout","text":"\n"},{"line":283,"timestamp":"2020-08-31T13:22:24.986395345Z","streamType":"stdout","text":"[services-test] \u001b[38;5;250m\u003e exec curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused http://nginx:80/\u001b[0m\n"},{"line":284,"timestamp":"2020-08-31T13:22:24.986401866Z","streamType":"stdout","text":"\n"},{"line":285,"timestamp":"2020-08-31T13:22:24.991173777Z","streamType":"stdout","text":"[services-test]   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n"},{"line":286,"timestamp":"2020-08-31T13:22:24.991179113Z","streamType":"stdout","text":"\n"},{"line":287,"timestamp":"2020-08-31T13:22:24.991648754Z","streamType":"stdout","text":"[services-test]                                  Dload  Upload   Total   Spent    Left  Speed\n"},{"line":288,"timestamp":"2020-08-31T13:22:24.991655617Z","streamType":"stdout","text":"\n"},{"line":289,"timestamp":"2020-08-31T13:22:25.005683718Z","streamType":"stdout","text":"[services-test] \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 192.168.4.2:80...\n"},{"line":290,"timestamp":"2020-08-31T13:22:25.005697402Z","streamType":"stdout","text":"\n"},{"line":291,"timestamp":"2020-08-31T13:22:25.006777161Z","streamType":"stdout","text":"[services-test] * Connected to nginx (192.168.4.2) port 80 (#0)\n"},{"line":292,"timestamp":"2020-08-31T13:22:25.006800043Z","streamType":"stdout","text":"\n"},{"line":293,"timestamp":"2020-08-31T13:22:25.006802421Z","streamType":"stdout","text":"[services-test] \u003e GET / HTTP/1.1\r\n"},{"line":294,"timestamp":"2020-08-31T13:22:25.006851386Z","streamType":"stdout","text":"\n"},{"line":295,"timestamp":"2020-08-31T13:22:25.006876271Z","streamType":"stdout","text":"[services-test] \u003e Host: nginx\r\n"},{"line":296,"timestamp":"2020-08-31T13:22:25.006894243Z","streamType":"stdout","text":"\n"},{"line":297,"timestamp":"2020-08-31T13:22:25.006896389Z","streamType":"stdout","text":"[services-test] \u003e User-Agent: curl/7.69.1\r\n"},{"line":298,"timestamp":"2020-08-31T13:22:25.006897344Z","streamType":"stdout","text":"\n"},{"line":299,"timestamp":"2020-08-31T13:22:25.006899037Z","streamType":"stdout","text":"[services-test] \u003e Accept: */*\r\n"},{"line":300,"timestamp":"2020-08-31T13:22:25.006899872Z","streamType":"stdout","text":"\n"},{"line":301,"timestamp":"2020-08-31T13:22:25.006901266Z","streamType":"stdout","text":"[services-test] \u003e \r\n"},{"line":302,"timestamp":"2020-08-31T13:22:25.006902109Z","streamType":"stdout","text":"\n"},{"line":303,"timestamp":"2020-08-31T13:22:25.006925941Z","streamType":"stdout","text":"[services-test] \u003c!DOCTYPE html\u003e\n"},{"line":304,"timestamp":"2020-08-31T13:22:25.006926776Z","streamType":"stdout","text":"\n"},{"line":305,"timestamp":"2020-08-31T13:22:25.006931052Z","streamType":"stdout","text":"[services-test][nginx] 192.168.4.4 - - [31/Aug/2020:13:22:25 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.69.1\" \"-\"\n"},{"line":306,"timestamp":"2020-08-31T13:22:25.006931979Z","streamType":"stdout","text":"\n"},{"line":307,"timestamp":"2020-08-31T13:22:25.00693665Z","streamType":"stdout","text":"[services-test] \u003chtml\u003e\n"},{"line":308,"timestamp":"2020-08-31T13:22:25.006937452Z","streamType":"stdout","text":"\n"},{"line":309,"timestamp":"2020-08-31T13:22:25.006939126Z","streamType":"stdout","text":"[services-test] \u003chead\u003e\n"},{"line":310,"timestamp":"2020-08-31T13:22:25.006940013Z","streamType":"stdout","text":"\n"},{"line":311,"timestamp":"2020-08-31T13:22:25.006942392Z","streamType":"stdout","text":"[services-test] \u003ctitle\u003eWelcome to nginx!\u003c/title\u003e\n"},{"line":312,"timestamp":"2020-08-31T13:22:25.006943199Z","streamType":"stdout","text":"\n"},{"line":313,"timestamp":"2020-08-31T13:22:25.006944784Z","streamType":"stdout","text":"[services-test] \u003cstyle\u003e\n"},{"line":314,"timestamp":"2020-08-31T13:22:25.006945711Z","streamType":"stdout","text":"\n"},{"line":315,"timestamp":"2020-08-31T13:22:25.006947507Z","streamType":"stdout","text":"[services-test]     body {\n"},{"line":316,"timestamp":"2020-08-31T13:22:25.006948419Z","streamType":"stdout","text":"\n"},{"line":317,"timestamp":"2020-08-31T13:22:25.00786975Z","streamType":"stdout","text":"[services-test]         width: 35em;\n"},{"line":318,"timestamp":"2020-08-31T13:22:25.007871245Z","streamType":"stdout","text":"\n"},{"line":319,"timestamp":"2020-08-31T13:22:25.007872543Z","streamType":"stdout","text":"[services-test]         margin: 0 auto;\n"},{"line":320,"timestamp":"2020-08-31T13:22:25.007873128Z","streamType":"stdout","text":"\n"},{"line":321,"timestamp":"2020-08-31T13:22:25.007876121Z","streamType":"stdout","text":"[services-test]         font-family: Tahoma, Verdana, Arial, sans-serif;\n"},{"line":322,"timestamp":"2020-08-31T13:22:25.007876664Z","streamType":"stdout","text":"\n"},{"line":323,"timestamp":"2020-08-31T13:22:25.007878585Z","streamType":"stdout","text":"[services-test]     }\n"},{"line":324,"timestamp":"2020-08-31T13:22:25.007879219Z","streamType":"stdout","text":"\n"},{"line":325,"timestamp":"2020-08-31T13:22:25.00788031Z","streamType":"stdout","text":"[services-test] \u003c/style\u003e\n"},{"line":326,"timestamp":"2020-08-31T13:22:25.007880824Z","streamType":"stdout","text":"\n"},{"line":327,"timestamp":"2020-08-31T13:22:25.007882204Z","streamType":"stdout","text":"[services-test] \u003c/head\u003e\n"},{"line":328,"timestamp":"2020-08-31T13:22:25.007882691Z","streamType":"stdout","text":"\n"},{"line":329,"timestamp":"2020-08-31T13:22:25.007883547Z","streamType":"stdout","text":"[services-test] \u003cbody\u003e\n"},{"line":330,"timestamp":"2020-08-31T13:22:25.007884075Z","streamType":"stdout","text":"\n"},{"line":331,"timestamp":"2020-08-31T13:22:25.008530564Z","streamType":"stdout","text":"[services-test] \u003ch1\u003eWelcome to nginx!\u003c/h1\u003e\n"},{"line":332,"timestamp":"2020-08-31T13:22:25.008531494Z","streamType":"stdout","text":"\n"},{"line":333,"timestamp":"2020-08-31T13:22:25.008534177Z","streamType":"stdout","text":"[services-test] \u003cp\u003eIf you see this page, the nginx web server is successfully installed and\n"},{"line":334,"timestamp":"2020-08-31T13:22:25.008534849Z","streamType":"stdout","text":"\n"},{"line":335,"timestamp":"2020-08-31T13:22:25.008538797Z","streamType":"stdout","text":"[services-test] working. Further configuration is required.\u003c/p\u003e\n"},{"line":336,"timestamp":"2020-08-31T13:22:25.008539342Z","streamType":"stdout","text":"\n"},{"line":337,"timestamp":"2020-08-31T13:22:25.008540359Z","streamType":"stdout","text":"[services-test] \n"},{"line":338,"timestamp":"2020-08-31T13:22:25.00854086Z","streamType":"stdout","text":"\n"},{"line":339,"timestamp":"2020-08-31T13:22:25.008543137Z","streamType":"stdout","text":"[services-test] \u003cp\u003eFor online documentation and support please refer to\n"},{"line":340,"timestamp":"2020-08-31T13:22:25.00854374Z","streamType":"stdout","text":"\n"},{"line":341,"timestamp":"2020-08-31T13:22:25.008545452Z","streamType":"stdout","text":"[services-test] \u003ca href=\"http://nginx.org/\"\u003enginx.org\u003c/a\u003e.\u003cbr/\u003e\n"},{"line":342,"timestamp":"2020-08-31T13:22:25.008545939Z","streamType":"stdout","text":"\n"},{"line":343,"timestamp":"2020-08-31T13:22:25.008547502Z","streamType":"stdout","text":"[services-test] Commercial support is available at\n"},{"line":344,"timestamp":"2020-08-31T13:22:25.008548277Z","streamType":"stdout","text":"\n"},{"line":345,"timestamp":"2020-08-31T13:22:25.008549579Z","streamType":"stdout","text":"[services-test] \u003ca href=\"http://nginx.com/\"\u003enginx.com\u003c/a\u003e.\u003c/p\u003e\n"},{"line":346,"timestamp":"2020-08-31T13:22:25.00855Z","streamType":"stdout","text":"\n"},{"line":347,"timestamp":"2020-08-31T13:22:25.008564753Z","streamType":"stdout","text":"[services-test] \n"},{"line":348,"timestamp":"2020-08-31T13:22:25.008565186Z","streamType":"stdout","text":"\n"},{"line":349,"timestamp":"2020-08-31T13:22:25.008581193Z","streamType":"stdout","text":"[services-test] \u003cp\u003e\u003cem\u003eThank you for using nginx.\u003c/em\u003e\u003c/p\u003e\n"},{"line":350,"timestamp":"2020-08-31T13:22:25.008581754Z","streamType":"stdout","text":"\n"},{"line":351,"timestamp":"2020-08-31T13:22:25.008582771Z","streamType":"stdout","text":"[services-test] \u003c/body\u003e\n"},{"line":352,"timestamp":"2020-08-31T13:22:25.008583262Z","streamType":"stdout","text":"\n"},{"line":353,"timestamp":"2020-08-31T13:22:25.008584243Z","streamType":"stdout","text":"[services-test] \u003c/html\u003e\n"},{"line":354,"timestamp":"2020-08-31T13:22:25.008584677Z","streamType":"stdout","text":"\n"},{"line":355,"timestamp":"2020-08-31T13:22:25.008586005Z","streamType":"stdout","text":"[services-test] * Mark bundle as not supporting multiuse\n"},{"line":356,"timestamp":"2020-08-31T13:22:25.008586519Z","streamType":"stdout","text":"\n"},{"line":357,"timestamp":"2020-08-31T13:22:25.008587378Z","streamType":"stdout","text":"[services-test] \u003c HTTP/1.1 200 OK\r\n"},{"line":358,"timestamp":"2020-08-31T13:22:25.008587832Z","streamType":"stdout","text":"\n"},{"line":359,"timestamp":"2020-08-31T13:22:25.008588827Z","streamType":"stdout","text":"[services-test] \u003c Server: nginx/1.19.2\r\n"},{"line":360,"timestamp":"2020-08-31T13:22:25.008589233Z","streamType":"stdout","text":"\n"},{"line":361,"timestamp":"2020-08-31T13:22:25.008590626Z","streamType":"stdout","text":"[services-test] \u003c Date: Mon, 31 Aug 2020 13:22:25 GMT\r\n"},{"line":362,"timestamp":"2020-08-31T13:22:25.008590984Z","streamType":"stdout","text":"\n"},{"line":363,"timestamp":"2020-08-31T13:22:25.008591816Z","streamType":"stdout","text":"[services-test] \u003c Content-Type: text/html\r\n"},{"line":364,"timestamp":"2020-08-31T13:22:25.008592149Z","streamType":"stdout","text":"\n"},{"line":365,"timestamp":"2020-08-31T13:22:25.008593007Z","streamType":"stdout","text":"[services-test] \u003c Content-Length: 612\r\n"},{"line":366,"timestamp":"2020-08-31T13:22:25.008593475Z","streamType":"stdout","text":"\n"},{"line":367,"timestamp":"2020-08-31T13:22:25.008602794Z","streamType":"stdout","text":"[services-test] \u003c Last-Modified: Tue, 11 Aug 2020 15:16:45 GMT\r\n"},{"line":368,"timestamp":"2020-08-31T13:22:25.008609541Z","streamType":"stdout","text":"\n"},{"line":369,"timestamp":"2020-08-31T13:22:25.008610478Z","streamType":"stdout","text":"[services-test] \u003c Connection: keep-alive\r\n"},{"line":370,"timestamp":"2020-08-31T13:22:25.008610856Z","streamType":"stdout","text":"\n"},{"line":371,"timestamp":"2020-08-31T13:22:25.008611599Z","streamType":"stdout","text":"[services-test] \u003c ETag: \"5f32b65d-264\"\r\n"},{"line":372,"timestamp":"2020-08-31T13:22:25.008612009Z","streamType":"stdout","text":"\n"},{"line":373,"timestamp":"2020-08-31T13:22:25.008612672Z","streamType":"stdout","text":"[services-test] \u003c Accept-Ranges: bytes\r\n"},{"line":374,"timestamp":"2020-08-31T13:22:25.008613082Z","streamType":"stdout","text":"\n"},{"line":375,"timestamp":"2020-08-31T13:22:25.008614247Z","streamType":"stdout","text":"[services-test] \u003c \r\n"},{"line":376,"timestamp":"2020-08-31T13:22:25.0086224Z","streamType":"stdout","text":"\n"},{"line":377,"timestamp":"2020-08-31T13:22:25.008623689Z","streamType":"stdout","text":"[services-test] { [612 bytes data]\n"},{"line":378,"timestamp":"2020-08-31T13:22:25.00862419Z","streamType":"stdout","text":"\n"},{"line":379,"timestamp":"2020-08-31T13:22:25.00862974Z","streamType":"stdout","text":"[services-test] \r100   612  100   612    0     0  40800      0 --:--:-- --:--:-- --:--:-- 40800\n"},{"line":380,"timestamp":"2020-08-31T13:22:25.008630175Z","streamType":"stdout","text":"\n"},{"line":381,"timestamp":"2020-08-31T13:22:25.008631522Z","streamType":"stdout","text":"[services-test] * Connection #0 to host nginx left intact\n"},{"line":382,"timestamp":"2020-08-31T13:22:25.008631973Z","streamType":"stdout","text":"\n"},{"line":383,"timestamp":"2020-08-31T13:22:25.064065107Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:25.063626501Z\" level=info msg=\"shim reaped\" id=71e4c3e2e330a324abe5f0efbc9ec442f7cfbc717bc6aef7bcfd12df574492c4 \n"},{"line":384,"timestamp":"2020-08-31T13:22:25.074137101Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:25.073603824Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":385,"timestamp":"2020-08-31T13:22:25.299161005Z","streamType":"stdout","text":"Removing container id 71e4c3e2e330a324abe5f0efbc9ec442f7cfbc717bc6aef7bcfd12df574492c4 from containerIDs\n"},{"line":386,"timestamp":"2020-08-31T13:22:25.299489365Z","streamType":"stdout","text":"[services-test] Stage succeeded\n"},{"line":387,"timestamp":"2020-08-31T13:22:25.299776258Z","streamType":"stdout","text":"[services-test] Stopping single-stage service containers...\n"},{"line":388,"timestamp":"2020-08-31T13:22:25.299972799Z","streamType":"stdout","text":"Stopping 2 containers\n"},{"line":389,"timestamp":"2020-08-31T13:22:25.300375584Z","streamType":"stdout","text":"Stopping container with id f3af18e2c5b09c041789e1d49e339c2e6b8fa787aeba9a6b9cbb751865d57426\n"},{"line":390,"timestamp":"2020-08-31T13:22:25.301262159Z","streamType":"stdout","text":"Stopping container with id 4a16eebb27b16683e0e149f61405768a17c7b50667a73554cdef07f573ddd328\n"},{"line":391,"timestamp":"2020-08-31T13:22:25.327805694Z","streamType":"stdout","text":"[services-test][cockroachdb] initiating graceful shutdown of server\n"},{"line":392,"timestamp":"2020-08-31T13:22:25.327813339Z","streamType":"stdout","text":"\n"},{"line":393,"timestamp":"2020-08-31T13:22:25.358846804Z","streamType":"stdout","text":"[services-test][cockroachdb] server drained and shutdown completed\n"},{"line":394,"timestamp":"2020-08-31T13:22:25.358852754Z","streamType":"stdout","text":"\n"},{"line":395,"timestamp":"2020-08-31T13:22:25.395477026Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:25.395015146Z\" level=info msg=\"shim reaped\" id=f3af18e2c5b09c041789e1d49e339c2e6b8fa787aeba9a6b9cbb751865d57426 \n"},{"line":396,"timestamp":"2020-08-31T13:22:25.405515421Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:25.405031508Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":397,"timestamp":"2020-08-31T13:22:25.419303981Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:25.418815884Z\" level=info msg=\"shim reaped\" id=4a16eebb27b16683e0e149f61405768a17c7b50667a73554cdef07f573ddd328 \n"},{"line":398,"timestamp":"2020-08-31T13:22:25.430817248Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:25.428829292Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":399,"timestamp":"2020-08-31T13:22:25.735661312Z","streamType":"stdout","text":"Stopped container with id f3af18e2c5b09c041789e1d49e339c2e6b8fa787aeba9a6b9cbb751865d57426\n"},{"line":400,"timestamp":"2020-08-31T13:22:25.735672301Z","streamType":"stdout","text":"[services-test] [nginx] Service succeeded\n"},{"line":401,"timestamp":"2020-08-31T13:22:25.765677633Z","streamType":"stdout","text":"Stopped container with id 4a16eebb27b16683e0e149f61405768a17c7b50667a73554cdef07f573ddd328\n"},{"line":402,"timestamp":"2020-08-31T13:22:25.765918893Z","streamType":"stdout","text":"Stopped 2 containers\n"},{"line":403,"timestamp":"2020-08-31T13:22:25.765923139Z","streamType":"stdout","text":"[services-test] Stopped single-stage service containers...\n"},{"line":404,"timestamp":"2020-08-31T13:22:25.765929607Z","streamType":"stdout","text":"[git-clone] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":405,"timestamp":"2020-08-31T13:22:25.766108262Z","streamType":"stdout","text":"[git-clone] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":406,"timestamp":"2020-08-31T13:22:25.766111466Z","streamType":"stdout","text":"[git-clone] Starting stage\n"},{"line":407,"timestamp":"2020-08-31T13:22:25.76611493Z","streamType":"stdout","text":"[git-clone] Checking if docker image 'extensions/git-clone:dev' exists locally...\n"},{"line":408,"timestamp":"2020-08-31T13:22:25.766123838Z","streamType":"stdout","text":"[services-test] [cockroachdb] Service succeeded\n"},{"line":409,"timestamp":"2020-08-31T13:22:25.76750597Z","streamType":"stdout","text":"[git-clone] Checking if docker image 'extensions/git-clone:dev' is trusted...\n"},{"line":410,"timestamp":"2020-08-31T13:22:25.767513427Z","streamType":"stdout","text":"[git-clone] Pulling docker image 'extensions/git-clone:dev'\n"},{"line":411,"timestamp":"2020-08-31T13:22:28.133895175Z","streamType":"stdout","text":"Adding container id a18f6680b76341f050b4873d549ba3c887a81197a382e910448f21b93b41ecf0 to containerIDs\n"},{"line":412,"timestamp":"2020-08-31T13:22:28.158310718Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:28.157868257Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":413,"timestamp":"2020-08-31T13:22:28.158321755Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:28.157897847Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":414,"timestamp":"2020-08-31T13:22:28.225234958Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:28.224726346Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/a18f6680b76341f050b4873d549ba3c887a81197a382e910448f21b93b41ecf0/shim.sock\" debug=false pid=921 \n"},{"line":415,"timestamp":"2020-08-31T13:22:28.696039997Z","streamType":"stdout","text":"[git-clone] Starting \u001b[1mestafette-extension-git-clone\u001b[0m version \u001b[1m0.1.81\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-04-01T15:00:17Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m50245b030d6c4f5911a8332aeef550ca39da8115\n"},{"line":416,"timestamp":"2020-08-31T13:22:28.696048987Z","streamType":"stdout","text":"\n"},{"line":417,"timestamp":"2020-08-31T13:22:28.696054252Z","streamType":"stdout","text":"[git-clone] Cloning git repository estafette-ci-builder to branch integration-test and revision 4ba7791566e3f6f69e8542183168ec9b1ad03ca7 with shallow clone is true and depth 50...\n"},{"line":418,"timestamp":"2020-08-31T13:22:28.696054891Z","streamType":"stdout","text":"\n"},{"line":419,"timestamp":"2020-08-31T13:22:28.696058348Z","streamType":"stdout","text":"[git-clone] \u001b[38;5;250m\u003e git clone --depth=50 --branch=integration-test https://github.com/estafette/estafette-ci-builder /estafette-work\u001b[0m\n"},{"line":420,"timestamp":"2020-08-31T13:22:28.696071277Z","streamType":"stdout","text":"\n"},{"line":421,"timestamp":"2020-08-31T13:22:28.696072929Z","streamType":"stdout","text":"[git-clone] Cloning into '/estafette-work'...\n"},{"line":422,"timestamp":"2020-08-31T13:22:28.696073576Z","streamType":"stdout","text":"\n"},{"line":423,"timestamp":"2020-08-31T13:22:32.306068069Z","streamType":"stdout","text":"[git-clone] \u001b[38;5;250m\u003e git checkout --quiet --force 4ba7791566e3f6f69e8542183168ec9b1ad03ca7\u001b[0m\n"},{"line":424,"timestamp":"2020-08-31T13:22:32.306094786Z","streamType":"stdout","text":"\n"},{"line":425,"timestamp":"2020-08-31T13:22:32.311425278Z","streamType":"stdout","text":"[git-clone] Finished cloning git repository estafette-ci-builder to branch integration-test and revision 4ba7791566e3f6f69e8542183168ec9b1ad03ca7 with shallow clone is true and depth 50\n"},{"line":426,"timestamp":"2020-08-31T13:22:32.311436474Z","streamType":"stdout","text":"\n"},{"line":427,"timestamp":"2020-08-31T13:22:32.363440624Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:32.362643905Z\" level=info msg=\"shim reaped\" id=a18f6680b76341f050b4873d549ba3c887a81197a382e910448f21b93b41ecf0 \n"},{"line":428,"timestamp":"2020-08-31T13:22:32.373140385Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:32.372735335Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":429,"timestamp":"2020-08-31T13:22:32.594164048Z","streamType":"stdout","text":"Removing container id a18f6680b76341f050b4873d549ba3c887a81197a382e910448f21b93b41ecf0 from containerIDs\n"},{"line":430,"timestamp":"2020-08-31T13:22:32.594798667Z","streamType":"stdout","text":"[git-clone] Stage succeeded\n"},{"line":431,"timestamp":"2020-08-31T13:22:32.594810565Z","streamType":"stdout","text":"[parallel-builds] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":432,"timestamp":"2020-08-31T13:22:32.594815138Z","streamType":"stdout","text":"[parallel-builds] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":433,"timestamp":"2020-08-31T13:22:32.59481714Z","streamType":"stdout","text":"[parallel-builds] Starting stage\n"},{"line":434,"timestamp":"2020-08-31T13:22:32.594818947Z","streamType":"stdout","text":"[parallel-builds] Running 2 parallel stages\n"},{"line":435,"timestamp":"2020-08-31T13:22:32.594823127Z","streamType":"stdout","text":"[buildB] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":436,"timestamp":"2020-08-31T13:22:32.594825425Z","streamType":"stdout","text":"[buildB] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":437,"timestamp":"2020-08-31T13:22:32.594826996Z","streamType":"stdout","text":"[parallel-builds] [buildB] Starting stage\n"},{"line":438,"timestamp":"2020-08-31T13:22:32.594829273Z","streamType":"stdout","text":"[buildB] Checking if docker image 'alpine:3.10' exists locally...\n"},{"line":439,"timestamp":"2020-08-31T13:22:32.59525532Z","streamType":"stdout","text":"[buildA] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":440,"timestamp":"2020-08-31T13:22:32.595261933Z","streamType":"stdout","text":"[buildA] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":441,"timestamp":"2020-08-31T13:22:32.595264586Z","streamType":"stdout","text":"[parallel-builds] [buildA] Starting stage\n"},{"line":442,"timestamp":"2020-08-31T13:22:32.59526721Z","streamType":"stdout","text":"[buildA] Checking if docker image 'golang:1.14.0-alpine3.11' exists locally...\n"},{"line":443,"timestamp":"2020-08-31T13:22:32.596560937Z","streamType":"stdout","text":"[buildB] Checking if docker image 'alpine:3.10' is trusted...\n"},{"line":444,"timestamp":"2020-08-31T13:22:32.596576205Z","streamType":"stdout","text":"[buildB] Pulling docker image 'alpine:3.10'\n"},{"line":445,"timestamp":"2020-08-31T13:22:32.597615698Z","streamType":"stdout","text":"[buildA] Checking if docker image 'golang:1.14.0-alpine3.11' is trusted...\n"},{"line":446,"timestamp":"2020-08-31T13:22:32.597621845Z","streamType":"stdout","text":"[buildA] Pulling docker image 'golang:1.14.0-alpine3.11'\n"},{"line":447,"timestamp":"2020-08-31T13:22:35.129349642Z","streamType":"stdout","text":"Inspecting entrypoint script at /estafette-entrypoints/estafette-entrypoint-065785012.sh \u001b[36mentrypoint=\u001b[0m\"#!/bin/sh\\nset -e\\n\\necho -e \\\"\\\\x1b[38;5;250m\u003e exec echo hi\\\\x1b[0m\\\"\\nexec echo hi\"\n"},{"line":448,"timestamp":"2020-08-31T13:22:35.604260732Z","streamType":"stdout","text":"Adding container id 282f0867332cba74cc6cae2f4ac01463f3858bae7768197330a77c869394f301 to containerIDs\n"},{"line":449,"timestamp":"2020-08-31T13:22:35.630326389Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:35.629724000Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":450,"timestamp":"2020-08-31T13:22:35.630337362Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:35.629753227Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":451,"timestamp":"2020-08-31T13:22:35.699228639Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:35.698579468Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/282f0867332cba74cc6cae2f4ac01463f3858bae7768197330a77c869394f301/shim.sock\" debug=false pid=1085 \n"},{"line":452,"timestamp":"2020-08-31T13:22:36.252687439Z","streamType":"stdout","text":"[parallel-builds][buildB] \u001b[38;5;250m\u003e exec echo hi\u001b[0m\n"},{"line":453,"timestamp":"2020-08-31T13:22:36.252696892Z","streamType":"stdout","text":"\n"},{"line":454,"timestamp":"2020-08-31T13:22:36.253257668Z","streamType":"stdout","text":"[parallel-builds][buildB] hi\n"},{"line":455,"timestamp":"2020-08-31T13:22:36.253263958Z","streamType":"stdout","text":"\n"},{"line":456,"timestamp":"2020-08-31T13:22:36.314204227Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:36.313700761Z\" level=info msg=\"shim reaped\" id=282f0867332cba74cc6cae2f4ac01463f3858bae7768197330a77c869394f301 \n"},{"line":457,"timestamp":"2020-08-31T13:22:36.324421054Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:36.323872547Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":458,"timestamp":"2020-08-31T13:22:38.663235338Z","streamType":"stdout","text":"Removing container id 282f0867332cba74cc6cae2f4ac01463f3858bae7768197330a77c869394f301 from containerIDs\n"},{"line":459,"timestamp":"2020-08-31T13:22:38.663256844Z","streamType":"stdout","text":"[parallel-builds] [buildB] Stage succeeded\n"},{"line":460,"timestamp":"2020-08-31T13:22:43.445614069Z","streamType":"stdout","text":"Inspecting entrypoint script at /estafette-entrypoints/estafette-entrypoint-367859843.sh \u001b[36mentrypoint=\u001b[0m\"#!/bin/sh\\nset -e\\necho -e \\\"\\\\x1b[38;5;250m\u003e go test ./... \u0026\\\\x1b[0m\\\"\\ngo test ./... \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\necho -e \\\"\\\\x1b[38;5;250m\u003e go build -v -ldflags \\\\\\\"-X main.version=0.0.683 -X main.revision=fedcec403962470e21b635cb2da34d027e634858 -X main.branch=master -X main.buildDate=2020-08-31T13:20:32Z\\\\\\\" -o ./publish/estafette-ci-builder\\\\x1b[0m\\\"\\ngo build -v -ldflags \\\"-X main.version=0.0.683 -X main.revision=fedcec403962470e21b635cb2da34d027e634858 -X main.branch=master -X main.buildDate=2020-08-31T13:20:32Z\\\" -o ./publish/estafette-ci-builder\\necho -e \\\"\\\\x1b[38;5;250m\u003e echo ${PWD} \u0026\\\\x1b[0m\\\"\\necho ${PWD} \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\necho -e \\\"\\\\x1b[38;5;250m\u003e ls -latr \u0026\\\\x1b[0m\\\"\\nls -latr \u0026\\ntrap \\\"kill $!; wait; exit\\\" 1 2 15\\nwait $!\\n\\necho -e \\\"\\\\x1b[38;5;250m\u003e exec ls -latr ./publish\\\\x1b[0m\\\"\\nexec ls -latr ./publish\"\n"},{"line":461,"timestamp":"2020-08-31T13:22:43.446182322Z","streamType":"stdout","text":"Setting docker user to 0:0\n"},{"line":462,"timestamp":"2020-08-31T13:22:43.740540934Z","streamType":"stdout","text":"Adding container id 1c73fc665577fe43a2e8774b0e80017f6b0d11f5c547890f17ceca29e15f3632 to containerIDs\n"},{"line":463,"timestamp":"2020-08-31T13:22:43.78368707Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:43.783312639Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":464,"timestamp":"2020-08-31T13:22:43.783695687Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:43.783343548Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":465,"timestamp":"2020-08-31T13:22:43.87568344Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:43.875158721Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/1c73fc665577fe43a2e8774b0e80017f6b0d11f5c547890f17ceca29e15f3632/shim.sock\" debug=false pid=1202 \n"},{"line":466,"timestamp":"2020-08-31T13:22:44.295878345Z","streamType":"stdout","text":"[parallel-builds][buildA] \u001b[38;5;250m\u003e go test ./... \u0026\u001b[0m\n"},{"line":467,"timestamp":"2020-08-31T13:22:44.295885926Z","streamType":"stdout","text":"\n"},{"line":468,"timestamp":"2020-08-31T13:22:44.489008553Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/sethgrid/pester v0.0.0-20190127155807-68a33a018ad0\n"},{"line":469,"timestamp":"2020-08-31T13:22:44.489017142Z","streamType":"stdout","text":"\n"},{"line":470,"timestamp":"2020-08-31T13:22:44.489900328Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/opentracing/opentracing-go v1.1.0\n"},{"line":471,"timestamp":"2020-08-31T13:22:44.489912499Z","streamType":"stdout","text":"\n"},{"line":472,"timestamp":"2020-08-31T13:22:44.489917412Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/opentracing-contrib/go-stdlib v0.0.0-20190519235532-cf7a6c988dc9\n"},{"line":473,"timestamp":"2020-08-31T13:22:44.489918294Z","streamType":"stdout","text":"\n"},{"line":474,"timestamp":"2020-08-31T13:22:44.489920854Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/estafette/estafette-ci-crypt v0.0.27\n"},{"line":475,"timestamp":"2020-08-31T13:22:44.489921713Z","streamType":"stdout","text":"\n"},{"line":476,"timestamp":"2020-08-31T13:22:44.494153219Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/docker/engine v0.0.0-20190822205725-ed20165a37b4\n"},{"line":477,"timestamp":"2020-08-31T13:22:44.494164978Z","streamType":"stdout","text":"\n"},{"line":478,"timestamp":"2020-08-31T13:22:44.496187262Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/Knetic/govaluate v3.0.0+incompatible\n"},{"line":479,"timestamp":"2020-08-31T13:22:44.496198858Z","streamType":"stdout","text":"\n"},{"line":480,"timestamp":"2020-08-31T13:22:44.499433588Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/rs/zerolog v1.15.0\n"},{"line":481,"timestamp":"2020-08-31T13:22:44.499440415Z","streamType":"stdout","text":"\n"},{"line":482,"timestamp":"2020-08-31T13:22:44.504896323Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/stretchr/testify v1.4.0\n"},{"line":483,"timestamp":"2020-08-31T13:22:44.50490264Z","streamType":"stdout","text":"\n"},{"line":484,"timestamp":"2020-08-31T13:22:44.50744416Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/uber/jaeger-client-go v2.17.0+incompatible\n"},{"line":485,"timestamp":"2020-08-31T13:22:44.507450257Z","streamType":"stdout","text":"\n"},{"line":486,"timestamp":"2020-08-31T13:22:44.512383906Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading gopkg.in/yaml.v2 v2.2.2\n"},{"line":487,"timestamp":"2020-08-31T13:22:44.512390349Z","streamType":"stdout","text":"\n"},{"line":488,"timestamp":"2020-08-31T13:22:44.515690973Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/estafette/estafette-ci-contracts v0.0.135\n"},{"line":489,"timestamp":"2020-08-31T13:22:44.515696526Z","streamType":"stdout","text":"\n"},{"line":490,"timestamp":"2020-08-31T13:22:44.541922504Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/davecgh/go-spew v1.1.1\n"},{"line":491,"timestamp":"2020-08-31T13:22:44.541931615Z","streamType":"stdout","text":"\n"},{"line":492,"timestamp":"2020-08-31T13:22:44.550761939Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/pmezard/go-difflib v1.0.0\n"},{"line":493,"timestamp":"2020-08-31T13:22:44.550773096Z","streamType":"stdout","text":"\n"},{"line":494,"timestamp":"2020-08-31T13:22:44.55096891Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/estafette/estafette-ci-manifest v0.1.118\n"},{"line":495,"timestamp":"2020-08-31T13:22:44.550970991Z","streamType":"stdout","text":"\n"},{"line":496,"timestamp":"2020-08-31T13:22:44.561476115Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/olekukonko/tablewriter v0.0.1\n"},{"line":497,"timestamp":"2020-08-31T13:22:44.561487015Z","streamType":"stdout","text":"\n"},{"line":498,"timestamp":"2020-08-31T13:22:44.569050586Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/alecthomas/kingpin v2.2.6+incompatible\n"},{"line":499,"timestamp":"2020-08-31T13:22:44.569058586Z","streamType":"stdout","text":"\n"},{"line":500,"timestamp":"2020-08-31T13:22:44.575584191Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/mattn/go-runewidth v0.0.4\n"},{"line":501,"timestamp":"2020-08-31T13:22:44.575591454Z","streamType":"stdout","text":"\n"},{"line":502,"timestamp":"2020-08-31T13:22:44.591872574Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/alecthomas/units v0.0.0-20190910110746-680d30ca3117\n"},{"line":503,"timestamp":"2020-08-31T13:22:44.591883931Z","streamType":"stdout","text":"\n"},{"line":504,"timestamp":"2020-08-31T13:22:44.593439487Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751\n"},{"line":505,"timestamp":"2020-08-31T13:22:44.593452571Z","streamType":"stdout","text":"\n"},{"line":506,"timestamp":"2020-08-31T13:22:44.61756839Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/pkg/errors v0.8.1\n"},{"line":507,"timestamp":"2020-08-31T13:22:44.617578704Z","streamType":"stdout","text":"\n"},{"line":508,"timestamp":"2020-08-31T13:22:44.618472819Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/uber/jaeger-lib v2.1.1+incompatible\n"},{"line":509,"timestamp":"2020-08-31T13:22:44.618479508Z","streamType":"stdout","text":"\n"},{"line":510,"timestamp":"2020-08-31T13:22:44.638259415Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/robfig/cron v0.0.0-20180505203441-b41be1df6967\n"},{"line":511,"timestamp":"2020-08-31T13:22:44.638265468Z","streamType":"stdout","text":"\n"},{"line":512,"timestamp":"2020-08-31T13:22:45.07862487Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/docker/go-connections v0.4.0\n"},{"line":513,"timestamp":"2020-08-31T13:22:45.078640749Z","streamType":"stdout","text":"\n"},{"line":514,"timestamp":"2020-08-31T13:22:45.078643242Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/docker/go-units v0.4.0\n"},{"line":515,"timestamp":"2020-08-31T13:22:45.078643883Z","streamType":"stdout","text":"\n"},{"line":516,"timestamp":"2020-08-31T13:22:45.07864535Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading google.golang.org/grpc v1.23.1\n"},{"line":517,"timestamp":"2020-08-31T13:22:45.078645934Z","streamType":"stdout","text":"\n"},{"line":518,"timestamp":"2020-08-31T13:22:45.078647453Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/opencontainers/image-spec v1.0.1\n"},{"line":519,"timestamp":"2020-08-31T13:22:45.078651281Z","streamType":"stdout","text":"\n"},{"line":520,"timestamp":"2020-08-31T13:22:45.078652922Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/docker/distribution v2.7.1+incompatible\n"},{"line":521,"timestamp":"2020-08-31T13:22:45.078653731Z","streamType":"stdout","text":"\n"},{"line":522,"timestamp":"2020-08-31T13:22:45.078654955Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/sirupsen/logrus v1.4.1\n"},{"line":523,"timestamp":"2020-08-31T13:22:45.078655468Z","streamType":"stdout","text":"\n"},{"line":524,"timestamp":"2020-08-31T13:22:45.078667833Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/gogo/protobuf v1.3.0\n"},{"line":525,"timestamp":"2020-08-31T13:22:45.07866833Z","streamType":"stdout","text":"\n"},{"line":526,"timestamp":"2020-08-31T13:22:45.108940538Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/opencontainers/go-digest v1.0.0-rc1\n"},{"line":527,"timestamp":"2020-08-31T13:22:45.108954622Z","streamType":"stdout","text":"\n"},{"line":528,"timestamp":"2020-08-31T13:22:45.108957726Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading golang.org/x/net v0.0.0-20190724013045-ca1201d0de80\n"},{"line":529,"timestamp":"2020-08-31T13:22:45.108958324Z","streamType":"stdout","text":"\n"},{"line":530,"timestamp":"2020-08-31T13:22:45.1259599Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading golang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a\n"},{"line":531,"timestamp":"2020-08-31T13:22:45.125966513Z","streamType":"stdout","text":"\n"},{"line":532,"timestamp":"2020-08-31T13:22:45.322477728Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading github.com/golang/protobuf v1.2.0\n"},{"line":533,"timestamp":"2020-08-31T13:22:45.322494816Z","streamType":"stdout","text":"\n"},{"line":534,"timestamp":"2020-08-31T13:22:45.322970694Z","streamType":"stdout","text":"[parallel-builds][buildA] go: downloading google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8\n"},{"line":535,"timestamp":"2020-08-31T13:22:45.322979987Z","streamType":"stdout","text":"\n"},{"line":536,"timestamp":"2020-08-31T13:22:59.414827218Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:59.414249136Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":537,"timestamp":"2020-08-31T13:22:59.414839223Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:59.414413010Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":538,"timestamp":"2020-08-31T13:22:59.435199711Z","streamType":"stdout","text":"time=\"2020-08-31T13:22:59.434762493Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/4365b03ad4fc82b5fcfc26677045419d9379c434dc3acf67dd122aefdf5e7f06/shim.sock\" debug=false pid=3551 \n"},{"line":539,"timestamp":"2020-08-31T13:23:00.020159322Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.019627797Z\" level=info msg=\"shim reaped\" id=4365b03ad4fc82b5fcfc26677045419d9379c434dc3acf67dd122aefdf5e7f06 \n"},{"line":540,"timestamp":"2020-08-31T13:23:00.030478977Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.029986492Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":541,"timestamp":"2020-08-31T13:23:00.622116936Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.621576862Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":542,"timestamp":"2020-08-31T13:23:00.622130302Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.621608719Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":543,"timestamp":"2020-08-31T13:23:00.641167252Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.640700315Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/dd82fa07655b83cbe7197627626897023a42f1564b2cb89346145b8171058124/shim.sock\" debug=false pid=3614 \n"},{"line":544,"timestamp":"2020-08-31T13:23:00.961896512Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.961244174Z\" level=info msg=\"shim reaped\" id=dd82fa07655b83cbe7197627626897023a42f1564b2cb89346145b8171058124 \n"},{"line":545,"timestamp":"2020-08-31T13:23:00.972481426Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:00.971988227Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":546,"timestamp":"2020-08-31T13:23:01.182164304Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.181477416Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":547,"timestamp":"2020-08-31T13:23:01.18217808Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.181509150Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":548,"timestamp":"2020-08-31T13:23:01.202441654Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.201859393Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/b4bccff9b09b2687a1369c8e631056bb65da879507221b8dfa199462d2338591/shim.sock\" debug=false pid=3674 \n"},{"line":549,"timestamp":"2020-08-31T13:23:01.555347256Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.554714080Z\" level=info msg=\"shim reaped\" id=b4bccff9b09b2687a1369c8e631056bb65da879507221b8dfa199462d2338591 \n"},{"line":550,"timestamp":"2020-08-31T13:23:01.565131206Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.564737574Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":551,"timestamp":"2020-08-31T13:23:01.756022706Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.755415383Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":552,"timestamp":"2020-08-31T13:23:01.756035977Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.755446602Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":553,"timestamp":"2020-08-31T13:23:01.773806662Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:01.773256457Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/bfbde981cc9a5429a7b3e0cf86e69b2a0ebfebab4026509004d412cde379f460/shim.sock\" debug=false pid=3738 \n"},{"line":554,"timestamp":"2020-08-31T13:23:02.119846759Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:02.119232561Z\" level=info msg=\"shim reaped\" id=bfbde981cc9a5429a7b3e0cf86e69b2a0ebfebab4026509004d412cde379f460 \n"},{"line":555,"timestamp":"2020-08-31T13:23:02.129841174Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:02.129375778Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":556,"timestamp":"2020-08-31T13:23:02.750039236Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:02.749250136Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":557,"timestamp":"2020-08-31T13:23:02.750049895Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:02.749295228Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":558,"timestamp":"2020-08-31T13:23:02.771555854Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:02.771006595Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/b32ff8dd4f0105e00519b901cf3b4104d50e8a949e4623afe00c91140f11c560/shim.sock\" debug=false pid=3798 \n"},{"line":559,"timestamp":"2020-08-31T13:23:03.109885862Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:03.109370510Z\" level=info msg=\"shim reaped\" id=b32ff8dd4f0105e00519b901cf3b4104d50e8a949e4623afe00c91140f11c560 \n"},{"line":560,"timestamp":"2020-08-31T13:23:03.121677416Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:03.119589444Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":561,"timestamp":"2020-08-31T13:23:03.94261961Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:03.942065541Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":562,"timestamp":"2020-08-31T13:23:03.942628567Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:03.942140128Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":563,"timestamp":"2020-08-31T13:23:03.971106378Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:03.970591366Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/7f98c5f071153fdc3e9ed62689acbeb21a1af78fa46a11f2b9c46612472533d5/shim.sock\" debug=false pid=3859 \n"},{"line":564,"timestamp":"2020-08-31T13:23:04.311933435Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:04.311300008Z\" level=info msg=\"shim reaped\" id=7f98c5f071153fdc3e9ed62689acbeb21a1af78fa46a11f2b9c46612472533d5 \n"},{"line":565,"timestamp":"2020-08-31T13:23:04.326871651Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:04.321767900Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":566,"timestamp":"2020-08-31T13:23:05.403036604Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:05.402539355Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":567,"timestamp":"2020-08-31T13:23:05.403054911Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:05.402580347Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":568,"timestamp":"2020-08-31T13:23:05.429238009Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:05.428714823Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/942d9b7275963cdeda6aae47805bf2421483076c622e248e2622b159fa624997/shim.sock\" debug=false pid=3920 \n"},{"line":569,"timestamp":"2020-08-31T13:23:05.760989756Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:05.760443137Z\" level=info msg=\"shim reaped\" id=942d9b7275963cdeda6aae47805bf2421483076c622e248e2622b159fa624997 \n"},{"line":570,"timestamp":"2020-08-31T13:23:05.771192577Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:05.770637317Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":571,"timestamp":"2020-08-31T13:23:06.854597893Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:06.853906690Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":572,"timestamp":"2020-08-31T13:23:06.854623662Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:06.853950083Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":573,"timestamp":"2020-08-31T13:23:06.88249472Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:06.881709562Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/b4ae4a231f06cc7c78ce04781310fb6938b65aa83d0c2f0972012dd610edaca2/shim.sock\" debug=false pid=3983 \n"},{"line":574,"timestamp":"2020-08-31T13:23:07.194504215Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:07.193844867Z\" level=info msg=\"shim reaped\" id=b4ae4a231f06cc7c78ce04781310fb6938b65aa83d0c2f0972012dd610edaca2 \n"},{"line":575,"timestamp":"2020-08-31T13:23:07.204632256Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:07.204048459Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":576,"timestamp":"2020-08-31T13:23:08.562465257Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:08.561827868Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":577,"timestamp":"2020-08-31T13:23:08.562478772Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:08.562020878Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":578,"timestamp":"2020-08-31T13:23:08.585357908Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:08.584585547Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/e7eb0f655ffa89f80771d71b8daa9e7e93efeb84da476ef4993b3b26c4398f53/shim.sock\" debug=false pid=4046 \n"},{"line":579,"timestamp":"2020-08-31T13:23:08.932245897Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:08.931650362Z\" level=info msg=\"shim reaped\" id=e7eb0f655ffa89f80771d71b8daa9e7e93efeb84da476ef4993b3b26c4398f53 \n"},{"line":580,"timestamp":"2020-08-31T13:23:08.942029052Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:08.941616003Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":581,"timestamp":"2020-08-31T13:23:10.273126239Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:10.272420910Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":582,"timestamp":"2020-08-31T13:23:10.273141625Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:10.272464186Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":583,"timestamp":"2020-08-31T13:23:10.297448443Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:10.296729435Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/f87bbf057c0a76247ec6eb3d08a0117faaae223d1f0834a1abdc67e6602c8920/shim.sock\" debug=false pid=4107 \n"},{"line":584,"timestamp":"2020-08-31T13:23:10.637204303Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:10.636552838Z\" level=info msg=\"shim reaped\" id=f87bbf057c0a76247ec6eb3d08a0117faaae223d1f0834a1abdc67e6602c8920 \n"},{"line":585,"timestamp":"2020-08-31T13:23:10.647238548Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:10.646721363Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":586,"timestamp":"2020-08-31T13:23:12.706757979Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:12.706049748Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":587,"timestamp":"2020-08-31T13:23:12.707504662Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:12.706283690Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":588,"timestamp":"2020-08-31T13:23:12.7293543Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:12.728950207Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/174f0eabc6897646dd6694e2420c13e442164d5c3f348259f9ff670faede646c/shim.sock\" debug=false pid=4169 \n"},{"line":589,"timestamp":"2020-08-31T13:23:13.085649678Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:13.085069745Z\" level=info msg=\"shim reaped\" id=174f0eabc6897646dd6694e2420c13e442164d5c3f348259f9ff670faede646c \n"},{"line":590,"timestamp":"2020-08-31T13:23:13.095604335Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:13.095139145Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":591,"timestamp":"2020-08-31T13:23:14.585376798Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:14.584769024Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":592,"timestamp":"2020-08-31T13:23:14.586095643Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:14.585005911Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":593,"timestamp":"2020-08-31T13:23:14.61667671Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:14.616152454Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/93278fd6e3b2682e2862358bd3cb5ac563d60233f2f20ba877dd18d1d3533972/shim.sock\" debug=false pid=4234 \n"},{"line":594,"timestamp":"2020-08-31T13:23:14.998581131Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:14.998129127Z\" level=info msg=\"shim reaped\" id=93278fd6e3b2682e2862358bd3cb5ac563d60233f2f20ba877dd18d1d3533972 \n"},{"line":595,"timestamp":"2020-08-31T13:23:15.008698036Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:15.008285255Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":596,"timestamp":"2020-08-31T13:23:16.277331901Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:16.276753405Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":597,"timestamp":"2020-08-31T13:23:16.277353266Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:16.276785145Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":598,"timestamp":"2020-08-31T13:23:16.299651183Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:16.299147944Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/4bad71932a81fe5a3d0d87893637986917bdbe1ab30496055a7741595aa74e69/shim.sock\" debug=false pid=4295 \n"},{"line":599,"timestamp":"2020-08-31T13:23:16.643332128Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:16.642551610Z\" level=info msg=\"shim reaped\" id=4bad71932a81fe5a3d0d87893637986917bdbe1ab30496055a7741595aa74e69 \n"},{"line":600,"timestamp":"2020-08-31T13:23:16.654101023Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:16.652790938Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":601,"timestamp":"2020-08-31T13:23:17.016869915Z","streamType":"stdout","text":"[parallel-builds][buildA] ok  \tgithub.com/estafette/estafette-ci-builder\t23.152s\n"},{"line":602,"timestamp":"2020-08-31T13:23:17.016878867Z","streamType":"stdout","text":"\n"},{"line":603,"timestamp":"2020-08-31T13:23:17.090220687Z","streamType":"stdout","text":"[parallel-builds][buildA] \u001b[38;5;250m\u003e go build -v -ldflags \"-X main.version=0.0.683 -X main.revision=fedcec403962470e21b635cb2da34d027e634858 -X main.branch=master -X main.buildDate=2020-08-31T13:20:32Z\" -o ./publish/estafette-ci-builder\u001b[0m\n"},{"line":604,"timestamp":"2020-08-31T13:23:17.090229502Z","streamType":"stdout","text":"\n"},{"line":605,"timestamp":"2020-08-31T13:23:17.350227927Z","streamType":"stdout","text":"[parallel-builds][buildA] github.com/estafette/estafette-ci-builder\n"},{"line":606,"timestamp":"2020-08-31T13:23:17.350237507Z","streamType":"stdout","text":"\n"},{"line":607,"timestamp":"2020-08-31T13:23:18.920711274Z","streamType":"stdout","text":"[parallel-builds][buildA] \u001b[38;5;250m\u003e echo /estafette-work \u0026\u001b[0m\n"},{"line":608,"timestamp":"2020-08-31T13:23:18.920720551Z","streamType":"stdout","text":"\n"},{"line":609,"timestamp":"2020-08-31T13:23:18.921376186Z","streamType":"stdout","text":"[parallel-builds][buildA] /estafette-work\n"},{"line":610,"timestamp":"2020-08-31T13:23:18.921381248Z","streamType":"stdout","text":"\n"},{"line":611,"timestamp":"2020-08-31T13:23:18.921384772Z","streamType":"stdout","text":"[parallel-builds][buildA] \u001b[38;5;250m\u003e ls -latr \u0026\u001b[0m\n"},{"line":612,"timestamp":"2020-08-31T13:23:18.921386088Z","streamType":"stdout","text":"\n"},{"line":613,"timestamp":"2020-08-31T13:23:18.922442185Z","streamType":"stdout","text":"[parallel-builds][buildA] total 212\n"},{"line":614,"timestamp":"2020-08-31T13:23:18.922446851Z","streamType":"stdout","text":"\n"},{"line":615,"timestamp":"2020-08-31T13:23:18.923420391Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          2602 Aug 31 13:22 whenEvaluator_test.go\n"},{"line":616,"timestamp":"2020-08-31T13:23:18.923424923Z","streamType":"stdout","text":"\n"},{"line":617,"timestamp":"2020-08-31T13:23:18.923427898Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          1749 Aug 31 13:22 whenEvaluator.go\n"},{"line":618,"timestamp":"2020-08-31T13:23:18.923428676Z","streamType":"stdout","text":"\n"},{"line":619,"timestamp":"2020-08-31T13:23:18.92343146Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          9622 Aug 31 13:22 pipelineRunner_test.go\n"},{"line":620,"timestamp":"2020-08-31T13:23:18.923432098Z","streamType":"stdout","text":"\n"},{"line":621,"timestamp":"2020-08-31T13:23:18.923433336Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          8124 Aug 31 13:22 pipelineRunner.go\n"},{"line":622,"timestamp":"2020-08-31T13:23:18.923433839Z","streamType":"stdout","text":"\n"},{"line":623,"timestamp":"2020-08-31T13:23:18.923434996Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           611 Aug 31 13:22 obfuscator_test.go\n"},{"line":624,"timestamp":"2020-08-31T13:23:18.923435437Z","streamType":"stdout","text":"\n"},{"line":625,"timestamp":"2020-08-31T13:23:18.923436519Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          1709 Aug 31 13:22 obfuscator.go\n"},{"line":626,"timestamp":"2020-08-31T13:23:18.923437118Z","streamType":"stdout","text":"\n"},{"line":627,"timestamp":"2020-08-31T13:23:18.923438666Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root         14280 Aug 31 13:22 main.go\n"},{"line":628,"timestamp":"2020-08-31T13:23:18.923438998Z","streamType":"stdout","text":"\n"},{"line":629,"timestamp":"2020-08-31T13:23:18.923440555Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          3527 Aug 31 13:22 helpers.go\n"},{"line":630,"timestamp":"2020-08-31T13:23:18.923440993Z","streamType":"stdout","text":"\n"},{"line":631,"timestamp":"2020-08-31T13:23:18.923442613Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           519 Aug 31 13:22 gocdFatalHandler.go\n"},{"line":632,"timestamp":"2020-08-31T13:23:18.923442978Z","streamType":"stdout","text":"\n"},{"line":633,"timestamp":"2020-08-31T13:23:18.923444129Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root         13616 Aug 31 13:22 go.sum\n"},{"line":634,"timestamp":"2020-08-31T13:23:18.923444575Z","streamType":"stdout","text":"\n"},{"line":635,"timestamp":"2020-08-31T13:23:18.92344566Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          2279 Aug 31 13:22 go.mod\n"},{"line":636,"timestamp":"2020-08-31T13:23:18.92344608Z","streamType":"stdout","text":"\n"},{"line":637,"timestamp":"2020-08-31T13:23:18.923447269Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           570 Aug 31 13:22 estafetteDomain.go\n"},{"line":638,"timestamp":"2020-08-31T13:23:18.923447717Z","streamType":"stdout","text":"\n"},{"line":639,"timestamp":"2020-08-31T13:23:18.92425258Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root         20065 Aug 31 13:22 envvarHelper_test.go\n"},{"line":640,"timestamp":"2020-08-31T13:23:18.925440952Z","streamType":"stdout","text":"\n"},{"line":641,"timestamp":"2020-08-31T13:23:18.925447059Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root         15604 Aug 31 13:22 envvarHelper.go\n"},{"line":642,"timestamp":"2020-08-31T13:23:18.925448159Z","streamType":"stdout","text":"\n"},{"line":643,"timestamp":"2020-08-31T13:23:18.925468082Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          9171 Aug 31 13:22 endOfLifeHelper.go\n"},{"line":644,"timestamp":"2020-08-31T13:23:18.92561958Z","streamType":"stdout","text":"\n"},{"line":645,"timestamp":"2020-08-31T13:23:18.925623397Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root            12 Aug 31 13:22 dummy.yaml\n"},{"line":646,"timestamp":"2020-08-31T13:23:18.925624375Z","streamType":"stdout","text":"\n"},{"line":647,"timestamp":"2020-08-31T13:23:18.925627593Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           267 Aug 31 13:22 dockerRunner_test.go\n"},{"line":648,"timestamp":"2020-08-31T13:23:18.92562852Z","streamType":"stdout","text":"\n"},{"line":649,"timestamp":"2020-08-31T13:23:18.925720144Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root         18761 Aug 31 13:22 dockerRunner.go\n"},{"line":650,"timestamp":"2020-08-31T13:23:18.925798703Z","streamType":"stdout","text":"\n"},{"line":651,"timestamp":"2020-08-31T13:23:18.925944391Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          1328 Aug 31 13:22 README.md\n"},{"line":652,"timestamp":"2020-08-31T13:23:18.925945522Z","streamType":"stdout","text":"\n"},{"line":653,"timestamp":"2020-08-31T13:23:18.925953351Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          1066 Aug 31 13:22 LICENSE\n"},{"line":654,"timestamp":"2020-08-31T13:23:18.925954291Z","streamType":"stdout","text":"\n"},{"line":655,"timestamp":"2020-08-31T13:23:18.925958654Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           289 Aug 31 13:22 Dockerfile.windowsservercore-1809\n"},{"line":656,"timestamp":"2020-08-31T13:23:18.926118239Z","streamType":"stdout","text":"\n"},{"line":657,"timestamp":"2020-08-31T13:23:18.926121537Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           178 Aug 31 13:22 Dockerfile.gocd\n"},{"line":658,"timestamp":"2020-08-31T13:23:18.926122419Z","streamType":"stdout","text":"\n"},{"line":659,"timestamp":"2020-08-31T13:23:18.926124544Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           410 Aug 31 13:22 Dockerfile\n"},{"line":660,"timestamp":"2020-08-31T13:23:18.926125311Z","streamType":"stdout","text":"\n"},{"line":661,"timestamp":"2020-08-31T13:23:18.926127637Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root           295 Aug 31 13:22 .gitignore\n"},{"line":662,"timestamp":"2020-08-31T13:23:18.926128578Z","streamType":"stdout","text":"\n"},{"line":663,"timestamp":"2020-08-31T13:23:18.926279232Z","streamType":"stdout","text":"[parallel-builds][buildA] -rw-r--r--    1 root     root          8942 Aug 31 13:22 .estafette.yaml\n"},{"line":664,"timestamp":"2020-08-31T13:23:18.926280259Z","streamType":"stdout","text":"\n"},{"line":665,"timestamp":"2020-08-31T13:23:18.92628271Z","streamType":"stdout","text":"[parallel-builds][buildA] drwxr-xr-x    8 root     root          4096 Aug 31 13:22 .git\n"},{"line":666,"timestamp":"2020-08-31T13:23:18.926283802Z","streamType":"stdout","text":"\n"},{"line":667,"timestamp":"2020-08-31T13:23:18.926285904Z","streamType":"stdout","text":"[parallel-builds][buildA] drwxr-xr-x    1 root     root          4096 Aug 31 13:22 ..\n"},{"line":668,"timestamp":"2020-08-31T13:23:18.926286898Z","streamType":"stdout","text":"\n"},{"line":669,"timestamp":"2020-08-31T13:23:18.926289824Z","streamType":"stdout","text":"[parallel-builds][buildA] drwxr-xr-x    2 root     root          4096 Aug 31 13:23 publish\n"},{"line":670,"timestamp":"2020-08-31T13:23:18.926290665Z","streamType":"stdout","text":"\n"},{"line":671,"timestamp":"2020-08-31T13:23:18.926292585Z","streamType":"stdout","text":"[parallel-builds][buildA] drwxr-xr-x    1 root     root          4096 Aug 31 13:23 .\n"},{"line":672,"timestamp":"2020-08-31T13:23:18.92629353Z","streamType":"stdout","text":"\n"},{"line":673,"timestamp":"2020-08-31T13:23:18.926362874Z","streamType":"stdout","text":"[parallel-builds][buildA] \u001b[38;5;250m\u003e exec ls -latr ./publish\u001b[0m\n"},{"line":674,"timestamp":"2020-08-31T13:23:18.926467829Z","streamType":"stdout","text":"\n"},{"line":675,"timestamp":"2020-08-31T13:23:18.926615236Z","streamType":"stdout","text":"[parallel-builds][buildA] total 16776\n"},{"line":676,"timestamp":"2020-08-31T13:23:18.926616341Z","streamType":"stdout","text":"\n"},{"line":677,"timestamp":"2020-08-31T13:23:18.926619332Z","streamType":"stdout","text":"[parallel-builds][buildA] -rwxr-xr-x    1 root     root      17169134 Aug 31 13:23 estafette-ci-builder\n"},{"line":678,"timestamp":"2020-08-31T13:23:18.926620292Z","streamType":"stdout","text":"\n"},{"line":679,"timestamp":"2020-08-31T13:23:18.926622664Z","streamType":"stdout","text":"[parallel-builds][buildA] drwxr-xr-x    1 root     root          4096 Aug 31 13:23 ..\n"},{"line":680,"timestamp":"2020-08-31T13:23:18.926678468Z","streamType":"stdout","text":"\n"},{"line":681,"timestamp":"2020-08-31T13:23:18.926680954Z","streamType":"stdout","text":"[parallel-builds][buildA] drwxr-xr-x    2 root     root          4096 Aug 31 13:23 .\n"},{"line":682,"timestamp":"2020-08-31T13:23:18.926767537Z","streamType":"stdout","text":"\n"},{"line":683,"timestamp":"2020-08-31T13:23:18.989864889Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:18.989315684Z\" level=info msg=\"shim reaped\" id=1c73fc665577fe43a2e8774b0e80017f6b0d11f5c547890f17ceca29e15f3632 \n"},{"line":684,"timestamp":"2020-08-31T13:23:18.999867266Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:18.999425157Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":685,"timestamp":"2020-08-31T13:23:20.160586504Z","streamType":"stdout","text":"Removing container id 1c73fc665577fe43a2e8774b0e80017f6b0d11f5c547890f17ceca29e15f3632 from containerIDs\n"},{"line":686,"timestamp":"2020-08-31T13:23:20.161412962Z","streamType":"stdout","text":"[parallel-builds] [buildA] Stage succeeded\n"},{"line":687,"timestamp":"2020-08-31T13:23:20.161963922Z","streamType":"stdout","text":"[parallel-builds] Stage succeeded\n"},{"line":688,"timestamp":"2020-08-31T13:23:20.162252489Z","streamType":"stdout","text":"[bake-estafette] Evaluating when expression \"status == 'succeeded'\" with parameters \"map[action: branch:integration-test server:estafette status:succeeded trigger:]\"\n"},{"line":689,"timestamp":"2020-08-31T13:23:20.16245196Z","streamType":"stdout","text":"[bake-estafette] Result of when expression \"status == 'succeeded'\" is \"true\"\n"},{"line":690,"timestamp":"2020-08-31T13:23:20.162454786Z","streamType":"stdout","text":"[bake-estafette] Starting stage\n"},{"line":691,"timestamp":"2020-08-31T13:23:20.162459801Z","streamType":"stdout","text":"[bake-estafette] Checking if docker image 'extensions/docker:dev' exists locally...\n"},{"line":692,"timestamp":"2020-08-31T13:23:20.166144844Z","streamType":"stdout","text":"[bake-estafette] Checking if docker image 'extensions/docker:dev' is trusted...\n"},{"line":693,"timestamp":"2020-08-31T13:23:20.166156772Z","streamType":"stdout","text":"[bake-estafette] Pulling docker image 'extensions/docker:dev'\n"},{"line":694,"timestamp":"2020-08-31T13:23:24.368490846Z","streamType":"stdout","text":"Setting docker user to 0:0\n"},{"line":695,"timestamp":"2020-08-31T13:23:24.744269301Z","streamType":"stdout","text":"Adding container id f1476472abe2588697e8396e3cbef7d63a530f1d1f096d510ca91580a96baab0 to containerIDs\n"},{"line":696,"timestamp":"2020-08-31T13:23:24.791554219Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:24.789169052Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":697,"timestamp":"2020-08-31T13:23:24.791563174Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:24.789211006Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":698,"timestamp":"2020-08-31T13:23:24.867526127Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:24.866938062Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/f1476472abe2588697e8396e3cbef7d63a530f1d1f096d510ca91580a96baab0/shim.sock\" debug=false pid=4553 \n"},{"line":699,"timestamp":"2020-08-31T13:23:25.435504694Z","streamType":"stdout","text":"[bake-estafette] Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":700,"timestamp":"2020-08-31T13:23:25.435512945Z","streamType":"stdout","text":"\n"},{"line":701,"timestamp":"2020-08-31T13:23:25.43551599Z","streamType":"stdout","text":"[bake-estafette] Ensuring build directory ./publish exists\n"},{"line":702,"timestamp":"2020-08-31T13:23:25.435516632Z","streamType":"stdout","text":"\n"},{"line":703,"timestamp":"2020-08-31T13:23:25.435819453Z","streamType":"stdout","text":"[bake-estafette] Reading dockerfile content from Dockerfile...\n"},{"line":704,"timestamp":"2020-08-31T13:23:25.435824499Z","streamType":"stdout","text":"\n"},{"line":705,"timestamp":"2020-08-31T13:23:25.436259877Z","streamType":"stdout","text":"[bake-estafette] Writing Dockerfile to publish/Dockerfile...\n"},{"line":706,"timestamp":"2020-08-31T13:23:25.436264751Z","streamType":"stdout","text":"\n"},{"line":707,"timestamp":"2020-08-31T13:23:25.436629936Z","streamType":"stdout","text":"[bake-estafette] Listing directory ./publish content\n"},{"line":708,"timestamp":"2020-08-31T13:23:25.436634035Z","streamType":"stdout","text":"\n"},{"line":709,"timestamp":"2020-08-31T13:23:25.436924663Z","streamType":"stdout","text":"[bake-estafette] - Dockerfile\n"},{"line":710,"timestamp":"2020-08-31T13:23:25.436928488Z","streamType":"stdout","text":"\n"},{"line":711,"timestamp":"2020-08-31T13:23:25.437346295Z","streamType":"stdout","text":"[bake-estafette] - estafette-ci-builder\n"},{"line":712,"timestamp":"2020-08-31T13:23:25.437354053Z","streamType":"stdout","text":"\n"},{"line":713,"timestamp":"2020-08-31T13:23:25.437730752Z","streamType":"stdout","text":"[bake-estafette] Filtering credentials for images [estafette/estafette-ci-builder:0.0.0-integration-test]\n"},{"line":714,"timestamp":"2020-08-31T13:23:25.43773457Z","streamType":"stdout","text":"\n"},{"line":715,"timestamp":"2020-08-31T13:23:25.438017385Z","streamType":"stdout","text":"[bake-estafette] Filtered 0 container-registry credentials down to 0\n"},{"line":716,"timestamp":"2020-08-31T13:23:25.438021173Z","streamType":"stdout","text":"\n"},{"line":717,"timestamp":"2020-08-31T13:23:25.43835462Z","streamType":"stdout","text":"[bake-estafette] Building docker image estafette/estafette-ci-builder:0.0.0-integration-test...\n"},{"line":718,"timestamp":"2020-08-31T13:23:25.438358396Z","streamType":"stdout","text":"\n"},{"line":719,"timestamp":"2020-08-31T13:23:25.438629869Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":720,"timestamp":"2020-08-31T13:23:25.438633635Z","streamType":"stdout","text":"\n"},{"line":721,"timestamp":"2020-08-31T13:23:25.43890907Z","streamType":"stdout","text":"[bake-estafette] FROM docker:19.03.2-dind\n"},{"line":722,"timestamp":"2020-08-31T13:23:25.438912798Z","streamType":"stdout","text":"\n"},{"line":723,"timestamp":"2020-08-31T13:23:25.439244444Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":724,"timestamp":"2020-08-31T13:23:25.439248571Z","streamType":"stdout","text":"\n"},{"line":725,"timestamp":"2020-08-31T13:23:25.43953135Z","streamType":"stdout","text":"[bake-estafette] LABEL maintainer=\"estafette.io\" \\\n"},{"line":726,"timestamp":"2020-08-31T13:23:25.439535139Z","streamType":"stdout","text":"\n"},{"line":727,"timestamp":"2020-08-31T13:23:25.43987343Z","streamType":"stdout","text":"[bake-estafette]       description=\"The estafette-ci-builder is the component that runs builds as defined in the .estafette.yaml manifest\"\n"},{"line":728,"timestamp":"2020-08-31T13:23:25.439879697Z","streamType":"stdout","text":"\n"},{"line":729,"timestamp":"2020-08-31T13:23:25.440203763Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":730,"timestamp":"2020-08-31T13:23:25.440216384Z","streamType":"stdout","text":"\n"},{"line":731,"timestamp":"2020-08-31T13:23:25.440421051Z","streamType":"stdout","text":"[bake-estafette] RUN addgroup docker\n"},{"line":732,"timestamp":"2020-08-31T13:23:25.440429427Z","streamType":"stdout","text":"\n"},{"line":733,"timestamp":"2020-08-31T13:23:25.440699809Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":734,"timestamp":"2020-08-31T13:23:25.440722116Z","streamType":"stdout","text":"\n"},{"line":735,"timestamp":"2020-08-31T13:23:25.441060575Z","streamType":"stdout","text":"[bake-estafette] # copy builder \u0026 startup script\n"},{"line":736,"timestamp":"2020-08-31T13:23:25.441068422Z","streamType":"stdout","text":"\n"},{"line":737,"timestamp":"2020-08-31T13:23:25.441372951Z","streamType":"stdout","text":"[bake-estafette] COPY estafette-ci-builder /\n"},{"line":738,"timestamp":"2020-08-31T13:23:25.441381664Z","streamType":"stdout","text":"\n"},{"line":739,"timestamp":"2020-08-31T13:23:25.441383252Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":740,"timestamp":"2020-08-31T13:23:25.441384332Z","streamType":"stdout","text":"\n"},{"line":741,"timestamp":"2020-08-31T13:23:25.441738614Z","streamType":"stdout","text":"[bake-estafette] ENV ESTAFETTE_CI_SERVER=\"estafette\" \\\n"},{"line":742,"timestamp":"2020-08-31T13:23:25.441747879Z","streamType":"stdout","text":"\n"},{"line":743,"timestamp":"2020-08-31T13:23:25.44200781Z","streamType":"stdout","text":"[bake-estafette]     ESTAFETTE_WORKDIR=\"/estafette-work\"\n"},{"line":744,"timestamp":"2020-08-31T13:23:25.442013957Z","streamType":"stdout","text":"\n"},{"line":745,"timestamp":"2020-08-31T13:23:25.442451604Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":746,"timestamp":"2020-08-31T13:23:25.44245731Z","streamType":"stdout","text":"\n"},{"line":747,"timestamp":"2020-08-31T13:23:25.44280656Z","streamType":"stdout","text":"[bake-estafette] WORKDIR ${ESTAFETTE_WORKDIR}\n"},{"line":748,"timestamp":"2020-08-31T13:23:25.442812026Z","streamType":"stdout","text":"\n"},{"line":749,"timestamp":"2020-08-31T13:23:25.44318979Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":750,"timestamp":"2020-08-31T13:23:25.443362274Z","streamType":"stdout","text":"\n"},{"line":751,"timestamp":"2020-08-31T13:23:25.44378133Z","streamType":"stdout","text":"[bake-estafette] ENTRYPOINT [\"/estafette-ci-builder\"]\n"},{"line":752,"timestamp":"2020-08-31T13:23:25.443786891Z","streamType":"stdout","text":"\n"},{"line":753,"timestamp":"2020-08-31T13:23:25.444128435Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":754,"timestamp":"2020-08-31T13:23:25.444134206Z","streamType":"stdout","text":"\n"},{"line":755,"timestamp":"2020-08-31T13:23:25.444487256Z","streamType":"stdout","text":"[bake-estafette] \u001b[38;5;250m\u003e docker build --no-cache --tag estafette/estafette-ci-builder:cache-integration-test --tag estafette/estafette-ci-builder:0.0.0-integration-test --file publish/Dockerfile ./publish\u001b[0m\n"},{"line":756,"timestamp":"2020-08-31T13:23:25.444492913Z","streamType":"stdout","text":"\n"},{"line":757,"timestamp":"2020-08-31T13:23:25.639542218Z","streamType":"stdout","text":"[bake-estafette] Sending build context to Docker daemon  17.17MB\r\r\n"},{"line":758,"timestamp":"2020-08-31T13:23:25.639554271Z","streamType":"stdout","text":"\n"},{"line":759,"timestamp":"2020-08-31T13:23:25.645013355Z","streamType":"stdout","text":"[bake-estafette] Step 1/7 : FROM docker:19.03.2-dind\n"},{"line":760,"timestamp":"2020-08-31T13:23:25.645022101Z","streamType":"stdout","text":"\n"},{"line":761,"timestamp":"2020-08-31T13:23:26.78556856Z","streamType":"stdout","text":"[bake-estafette] 19.03.2-dind: Pulling from library/docker\n"},{"line":762,"timestamp":"2020-08-31T13:23:26.785580682Z","streamType":"stdout","text":"\n"},{"line":763,"timestamp":"2020-08-31T13:23:27.401461357Z","streamType":"stdout","text":"[bake-estafette] 9d48c3bd43c5: Pulling fs layer\n"},{"line":764,"timestamp":"2020-08-31T13:23:27.401470637Z","streamType":"stdout","text":"\n"},{"line":765,"timestamp":"2020-08-31T13:23:27.401473007Z","streamType":"stdout","text":"[bake-estafette] 7f94eaf8af20: Pulling fs layer\n"},{"line":766,"timestamp":"2020-08-31T13:23:27.401474005Z","streamType":"stdout","text":"\n"},{"line":767,"timestamp":"2020-08-31T13:23:27.401475773Z","streamType":"stdout","text":"[bake-estafette] 9fe9984849c1: Pulling fs layer\n"},{"line":768,"timestamp":"2020-08-31T13:23:27.40147688Z","streamType":"stdout","text":"\n"},{"line":769,"timestamp":"2020-08-31T13:23:27.401478383Z","streamType":"stdout","text":"[bake-estafette] 92cf76c8818a: Pulling fs layer\n"},{"line":770,"timestamp":"2020-08-31T13:23:27.401479036Z","streamType":"stdout","text":"\n"},{"line":771,"timestamp":"2020-08-31T13:23:27.401480565Z","streamType":"stdout","text":"[bake-estafette] fc3e8b8912c8: Pulling fs layer\n"},{"line":772,"timestamp":"2020-08-31T13:23:27.401481311Z","streamType":"stdout","text":"\n"},{"line":773,"timestamp":"2020-08-31T13:23:27.401482685Z","streamType":"stdout","text":"[bake-estafette] bf02db085c95: Pulling fs layer\n"},{"line":774,"timestamp":"2020-08-31T13:23:27.401483399Z","streamType":"stdout","text":"\n"},{"line":775,"timestamp":"2020-08-31T13:23:27.401484636Z","streamType":"stdout","text":"[bake-estafette] 9479c7497144: Pulling fs layer\n"},{"line":776,"timestamp":"2020-08-31T13:23:27.401485264Z","streamType":"stdout","text":"\n"},{"line":777,"timestamp":"2020-08-31T13:23:27.401486685Z","streamType":"stdout","text":"[bake-estafette] 689185fbf3c3: Pulling fs layer\n"},{"line":778,"timestamp":"2020-08-31T13:23:27.401487336Z","streamType":"stdout","text":"\n"},{"line":779,"timestamp":"2020-08-31T13:23:27.401712373Z","streamType":"stdout","text":"[bake-estafette] 54732b86f96e: Pulling fs layer\n"},{"line":780,"timestamp":"2020-08-31T13:23:27.40171474Z","streamType":"stdout","text":"\n"},{"line":781,"timestamp":"2020-08-31T13:23:27.401773719Z","streamType":"stdout","text":"[bake-estafette] 81f9c4494a30: Pulling fs layer\n"},{"line":782,"timestamp":"2020-08-31T13:23:27.401775093Z","streamType":"stdout","text":"\n"},{"line":783,"timestamp":"2020-08-31T13:23:27.40205305Z","streamType":"stdout","text":"[bake-estafette] bac67c70bbb3: Pulling fs layer\n"},{"line":784,"timestamp":"2020-08-31T13:23:27.402054414Z","streamType":"stdout","text":"\n"},{"line":785,"timestamp":"2020-08-31T13:23:27.402058704Z","streamType":"stdout","text":"[bake-estafette] 9479c7497144: Waiting\n"},{"line":786,"timestamp":"2020-08-31T13:23:27.402059478Z","streamType":"stdout","text":"\n"},{"line":787,"timestamp":"2020-08-31T13:23:27.402376221Z","streamType":"stdout","text":"[bake-estafette] 689185fbf3c3: Waiting\n"},{"line":788,"timestamp":"2020-08-31T13:23:27.402377227Z","streamType":"stdout","text":"\n"},{"line":789,"timestamp":"2020-08-31T13:23:27.402560615Z","streamType":"stdout","text":"[bake-estafette] 54732b86f96e: Waiting\n"},{"line":790,"timestamp":"2020-08-31T13:23:27.402561841Z","streamType":"stdout","text":"\n"},{"line":791,"timestamp":"2020-08-31T13:23:27.402733542Z","streamType":"stdout","text":"[bake-estafette] 81f9c4494a30: Waiting\n"},{"line":792,"timestamp":"2020-08-31T13:23:27.402734784Z","streamType":"stdout","text":"\n"},{"line":793,"timestamp":"2020-08-31T13:23:27.402907043Z","streamType":"stdout","text":"[bake-estafette] bac67c70bbb3: Waiting\n"},{"line":794,"timestamp":"2020-08-31T13:23:27.402907942Z","streamType":"stdout","text":"\n"},{"line":795,"timestamp":"2020-08-31T13:23:27.403066828Z","streamType":"stdout","text":"[bake-estafette] 92cf76c8818a: Waiting\n"},{"line":796,"timestamp":"2020-08-31T13:23:27.403076498Z","streamType":"stdout","text":"\n"},{"line":797,"timestamp":"2020-08-31T13:23:27.403327405Z","streamType":"stdout","text":"[bake-estafette] bf02db085c95: Waiting\n"},{"line":798,"timestamp":"2020-08-31T13:23:27.403328486Z","streamType":"stdout","text":"\n"},{"line":799,"timestamp":"2020-08-31T13:23:27.403497699Z","streamType":"stdout","text":"[bake-estafette] fc3e8b8912c8: Waiting\n"},{"line":800,"timestamp":"2020-08-31T13:23:27.403498518Z","streamType":"stdout","text":"\n"},{"line":801,"timestamp":"2020-08-31T13:23:27.815408446Z","streamType":"stdout","text":"[bake-estafette] 9fe9984849c1: Verifying Checksum\n"},{"line":802,"timestamp":"2020-08-31T13:23:27.815421049Z","streamType":"stdout","text":"\n"},{"line":803,"timestamp":"2020-08-31T13:23:27.815424091Z","streamType":"stdout","text":"[bake-estafette] 9fe9984849c1: Download complete\n"},{"line":804,"timestamp":"2020-08-31T13:23:27.815425044Z","streamType":"stdout","text":"\n"},{"line":805,"timestamp":"2020-08-31T13:23:27.866532086Z","streamType":"stdout","text":"[bake-estafette] 9d48c3bd43c5: Verifying Checksum\n"},{"line":806,"timestamp":"2020-08-31T13:23:27.866541367Z","streamType":"stdout","text":"\n"},{"line":807,"timestamp":"2020-08-31T13:23:27.867138772Z","streamType":"stdout","text":"[bake-estafette] 9d48c3bd43c5: Download complete\n"},{"line":808,"timestamp":"2020-08-31T13:23:27.867141463Z","streamType":"stdout","text":"\n"},{"line":809,"timestamp":"2020-08-31T13:23:27.868049004Z","streamType":"stdout","text":"[bake-estafette] 7f94eaf8af20: Download complete\n"},{"line":810,"timestamp":"2020-08-31T13:23:27.868055071Z","streamType":"stdout","text":"\n"},{"line":811,"timestamp":"2020-08-31T13:23:28.044876946Z","streamType":"stdout","text":"[bake-estafette] 9d48c3bd43c5: Pull complete\n"},{"line":812,"timestamp":"2020-08-31T13:23:28.044885664Z","streamType":"stdout","text":"\n"},{"line":813,"timestamp":"2020-08-31T13:23:28.182841363Z","streamType":"stdout","text":"[bake-estafette] 7f94eaf8af20: Pull complete\n"},{"line":814,"timestamp":"2020-08-31T13:23:28.182854988Z","streamType":"stdout","text":"\n"},{"line":815,"timestamp":"2020-08-31T13:23:28.255472119Z","streamType":"stdout","text":"[bake-estafette] 9fe9984849c1: Pull complete\n"},{"line":816,"timestamp":"2020-08-31T13:23:28.255488203Z","streamType":"stdout","text":"\n"},{"line":817,"timestamp":"2020-08-31T13:23:28.290692017Z","streamType":"stdout","text":"[bake-estafette] bf02db085c95: Download complete\n"},{"line":818,"timestamp":"2020-08-31T13:23:28.290701924Z","streamType":"stdout","text":"\n"},{"line":819,"timestamp":"2020-08-31T13:23:28.291609907Z","streamType":"stdout","text":"[bake-estafette] fc3e8b8912c8: Download complete\n"},{"line":820,"timestamp":"2020-08-31T13:23:28.291617403Z","streamType":"stdout","text":"\n"},{"line":821,"timestamp":"2020-08-31T13:23:28.707458684Z","streamType":"stdout","text":"[bake-estafette] 9479c7497144: Verifying Checksum\n"},{"line":822,"timestamp":"2020-08-31T13:23:28.707465871Z","streamType":"stdout","text":"\n"},{"line":823,"timestamp":"2020-08-31T13:23:28.707467959Z","streamType":"stdout","text":"[bake-estafette] 9479c7497144: Download complete\n"},{"line":824,"timestamp":"2020-08-31T13:23:28.707468586Z","streamType":"stdout","text":"\n"},{"line":825,"timestamp":"2020-08-31T13:23:28.806370342Z","streamType":"stdout","text":"[bake-estafette] 689185fbf3c3: Verifying Checksum\n"},{"line":826,"timestamp":"2020-08-31T13:23:28.806379832Z","streamType":"stdout","text":"\n"},{"line":827,"timestamp":"2020-08-31T13:23:28.80638298Z","streamType":"stdout","text":"[bake-estafette] 689185fbf3c3: Download complete\n"},{"line":828,"timestamp":"2020-08-31T13:23:28.806383888Z","streamType":"stdout","text":"\n"},{"line":829,"timestamp":"2020-08-31T13:23:28.920236047Z","streamType":"stdout","text":"[bake-estafette] 92cf76c8818a: Verifying Checksum\n"},{"line":830,"timestamp":"2020-08-31T13:23:28.92024735Z","streamType":"stdout","text":"\n"},{"line":831,"timestamp":"2020-08-31T13:23:28.920251528Z","streamType":"stdout","text":"[bake-estafette] 92cf76c8818a: Download complete\n"},{"line":832,"timestamp":"2020-08-31T13:23:28.920252614Z","streamType":"stdout","text":"\n"},{"line":833,"timestamp":"2020-08-31T13:23:29.138198875Z","streamType":"stdout","text":"[bake-estafette] 54732b86f96e: Verifying Checksum\n"},{"line":834,"timestamp":"2020-08-31T13:23:29.138212067Z","streamType":"stdout","text":"\n"},{"line":835,"timestamp":"2020-08-31T13:23:29.138214943Z","streamType":"stdout","text":"[bake-estafette] 54732b86f96e: Download complete\n"},{"line":836,"timestamp":"2020-08-31T13:23:29.138216018Z","streamType":"stdout","text":"\n"},{"line":837,"timestamp":"2020-08-31T13:23:29.247750563Z","streamType":"stdout","text":"[bake-estafette] 81f9c4494a30: Verifying Checksum\n"},{"line":838,"timestamp":"2020-08-31T13:23:29.247771445Z","streamType":"stdout","text":"\n"},{"line":839,"timestamp":"2020-08-31T13:23:29.248567994Z","streamType":"stdout","text":"[bake-estafette] 81f9c4494a30: Download complete\n"},{"line":840,"timestamp":"2020-08-31T13:23:29.248570281Z","streamType":"stdout","text":"\n"},{"line":841,"timestamp":"2020-08-31T13:23:29.349430174Z","streamType":"stdout","text":"[bake-estafette] bac67c70bbb3: Download complete\n"},{"line":842,"timestamp":"2020-08-31T13:23:29.349441713Z","streamType":"stdout","text":"\n"},{"line":843,"timestamp":"2020-08-31T13:23:30.847453822Z","streamType":"stdout","text":"[bake-estafette] 92cf76c8818a: Pull complete\n"},{"line":844,"timestamp":"2020-08-31T13:23:30.84746403Z","streamType":"stdout","text":"\n"},{"line":845,"timestamp":"2020-08-31T13:23:30.935739659Z","streamType":"stdout","text":"[bake-estafette] fc3e8b8912c8: Pull complete\n"},{"line":846,"timestamp":"2020-08-31T13:23:30.93576558Z","streamType":"stdout","text":"\n"},{"line":847,"timestamp":"2020-08-31T13:23:31.029637869Z","streamType":"stdout","text":"[bake-estafette] bf02db085c95: Pull complete\n"},{"line":848,"timestamp":"2020-08-31T13:23:31.029646827Z","streamType":"stdout","text":"\n"},{"line":849,"timestamp":"2020-08-31T13:23:31.115178561Z","streamType":"stdout","text":"[bake-estafette] 9479c7497144: Pull complete\n"},{"line":850,"timestamp":"2020-08-31T13:23:31.115189208Z","streamType":"stdout","text":"\n"},{"line":851,"timestamp":"2020-08-31T13:23:31.368960872Z","streamType":"stdout","text":"[bake-estafette] 689185fbf3c3: Pull complete\n"},{"line":852,"timestamp":"2020-08-31T13:23:31.368970594Z","streamType":"stdout","text":"\n"},{"line":853,"timestamp":"2020-08-31T13:23:31.4545321Z","streamType":"stdout","text":"[bake-estafette] 54732b86f96e: Pull complete\n"},{"line":854,"timestamp":"2020-08-31T13:23:31.454542143Z","streamType":"stdout","text":"\n"},{"line":855,"timestamp":"2020-08-31T13:23:31.52747777Z","streamType":"stdout","text":"[bake-estafette] 81f9c4494a30: Pull complete\n"},{"line":856,"timestamp":"2020-08-31T13:23:31.527486546Z","streamType":"stdout","text":"\n"},{"line":857,"timestamp":"2020-08-31T13:23:31.59539705Z","streamType":"stdout","text":"[bake-estafette] bac67c70bbb3: Pull complete\n"},{"line":858,"timestamp":"2020-08-31T13:23:31.595412635Z","streamType":"stdout","text":"\n"},{"line":859,"timestamp":"2020-08-31T13:23:31.601470155Z","streamType":"stdout","text":"[bake-estafette] Digest: sha256:615eb3922630a30a52f7c46760f3d08a9eb4a1b0474d038281af8eade8c43f40\n"},{"line":860,"timestamp":"2020-08-31T13:23:31.601478289Z","streamType":"stdout","text":"\n"},{"line":861,"timestamp":"2020-08-31T13:23:31.605599614Z","streamType":"stdout","text":"[bake-estafette] Status: Downloaded newer image for docker:19.03.2-dind\n"},{"line":862,"timestamp":"2020-08-31T13:23:31.605606468Z","streamType":"stdout","text":"\n"},{"line":863,"timestamp":"2020-08-31T13:23:31.606379665Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e 5768e15eefd1\n"},{"line":864,"timestamp":"2020-08-31T13:23:31.606387502Z","streamType":"stdout","text":"\n"},{"line":865,"timestamp":"2020-08-31T13:23:31.606394644Z","streamType":"stdout","text":"[bake-estafette] Step 2/7 : LABEL maintainer=\"estafette.io\"       description=\"The estafette-ci-builder is the component that runs builds as defined in the .estafette.yaml manifest\"\n"},{"line":866,"timestamp":"2020-08-31T13:23:31.606395647Z","streamType":"stdout","text":"\n"},{"line":867,"timestamp":"2020-08-31T13:23:33.795134701Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e Running in 344b07f65689\n"},{"line":868,"timestamp":"2020-08-31T13:23:33.795150121Z","streamType":"stdout","text":"\n"},{"line":869,"timestamp":"2020-08-31T13:23:33.880988437Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:33.880403681Z\" level=info msg=\"Layer sha256:fec2e9b1a922868194036adb5be98345f6059d8f175ba9fb78dbd5ecf6804800 cleaned up\"\n"},{"line":870,"timestamp":"2020-08-31T13:23:33.915300388Z","streamType":"stdout","text":"[bake-estafette] Removing intermediate container 344b07f65689\n"},{"line":871,"timestamp":"2020-08-31T13:23:33.915314097Z","streamType":"stdout","text":"\n"},{"line":872,"timestamp":"2020-08-31T13:23:33.915683972Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e 11c327c0683b\n"},{"line":873,"timestamp":"2020-08-31T13:23:33.91569049Z","streamType":"stdout","text":"\n"},{"line":874,"timestamp":"2020-08-31T13:23:33.915692667Z","streamType":"stdout","text":"[bake-estafette] Step 3/7 : RUN addgroup docker\n"},{"line":875,"timestamp":"2020-08-31T13:23:33.915694101Z","streamType":"stdout","text":"\n"},{"line":876,"timestamp":"2020-08-31T13:23:34.081683506Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e Running in 1d8d21253109\n"},{"line":877,"timestamp":"2020-08-31T13:23:34.081693789Z","streamType":"stdout","text":"\n"},{"line":878,"timestamp":"2020-08-31T13:23:34.107671455Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:34.107046037Z\" level=info msg=\"No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]\"\n"},{"line":879,"timestamp":"2020-08-31T13:23:34.107683855Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:34.107238370Z\" level=info msg=\"IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]\"\n"},{"line":880,"timestamp":"2020-08-31T13:23:34.135771642Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:34.135295487Z\" level=info msg=\"shim containerd-shim started\" address=\"/containerd-shim/moby/1d8d21253109fb7f4c2026e895729d2cc9ac2dcd3117c3507f128b26dba68b55/shim.sock\" debug=false pid=4820 \n"},{"line":881,"timestamp":"2020-08-31T13:23:34.514388366Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:34.513779498Z\" level=info msg=\"shim reaped\" id=1d8d21253109fb7f4c2026e895729d2cc9ac2dcd3117c3507f128b26dba68b55 \n"},{"line":882,"timestamp":"2020-08-31T13:23:34.52471502Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:34.524245904Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":883,"timestamp":"2020-08-31T13:23:34.75414238Z","streamType":"stdout","text":"[bake-estafette] Removing intermediate container 1d8d21253109\n"},{"line":884,"timestamp":"2020-08-31T13:23:34.754151196Z","streamType":"stdout","text":"\n"},{"line":885,"timestamp":"2020-08-31T13:23:34.754153159Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e d9e002dde147\n"},{"line":886,"timestamp":"2020-08-31T13:23:34.75415385Z","streamType":"stdout","text":"\n"},{"line":887,"timestamp":"2020-08-31T13:23:34.754683948Z","streamType":"stdout","text":"[bake-estafette] Step 4/7 : COPY estafette-ci-builder /\n"},{"line":888,"timestamp":"2020-08-31T13:23:34.754694824Z","streamType":"stdout","text":"\n"},{"line":889,"timestamp":"2020-08-31T13:23:35.196237445Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e ed883e26b54e\n"},{"line":890,"timestamp":"2020-08-31T13:23:35.196246654Z","streamType":"stdout","text":"\n"},{"line":891,"timestamp":"2020-08-31T13:23:35.196251276Z","streamType":"stdout","text":"[bake-estafette] Step 5/7 : ENV ESTAFETTE_CI_SERVER=\"estafette\"     ESTAFETTE_WORKDIR=\"/estafette-work\"\n"},{"line":892,"timestamp":"2020-08-31T13:23:35.196252248Z","streamType":"stdout","text":"\n"},{"line":893,"timestamp":"2020-08-31T13:23:35.253944288Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e Running in d95a6a9771c3\n"},{"line":894,"timestamp":"2020-08-31T13:23:35.253954013Z","streamType":"stdout","text":"\n"},{"line":895,"timestamp":"2020-08-31T13:23:35.338051067Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:35.337488495Z\" level=info msg=\"Layer sha256:62ae16afadd4f2b463e6cfecd4dde69c29cadfca2517c91a547d9855b8636dfa cleaned up\"\n"},{"line":896,"timestamp":"2020-08-31T13:23:35.365485771Z","streamType":"stdout","text":"[bake-estafette] Removing intermediate container d95a6a9771c3\n"},{"line":897,"timestamp":"2020-08-31T13:23:35.365500339Z","streamType":"stdout","text":"\n"},{"line":898,"timestamp":"2020-08-31T13:23:35.365503643Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e d03ef4a6342f\n"},{"line":899,"timestamp":"2020-08-31T13:23:35.365504732Z","streamType":"stdout","text":"\n"},{"line":900,"timestamp":"2020-08-31T13:23:35.365507652Z","streamType":"stdout","text":"[bake-estafette] Step 6/7 : WORKDIR ${ESTAFETTE_WORKDIR}\n"},{"line":901,"timestamp":"2020-08-31T13:23:35.365508657Z","streamType":"stdout","text":"\n"},{"line":902,"timestamp":"2020-08-31T13:23:35.420293146Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e Running in 877dc998fe87\n"},{"line":903,"timestamp":"2020-08-31T13:23:35.420305853Z","streamType":"stdout","text":"\n"},{"line":904,"timestamp":"2020-08-31T13:23:35.599225929Z","streamType":"stdout","text":"[bake-estafette] Removing intermediate container 877dc998fe87\n"},{"line":905,"timestamp":"2020-08-31T13:23:35.59923524Z","streamType":"stdout","text":"\n"},{"line":906,"timestamp":"2020-08-31T13:23:35.599238104Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e 7180c83ea53f\n"},{"line":907,"timestamp":"2020-08-31T13:23:35.599238709Z","streamType":"stdout","text":"\n"},{"line":908,"timestamp":"2020-08-31T13:23:35.599241448Z","streamType":"stdout","text":"[bake-estafette] Step 7/7 : ENTRYPOINT [\"/estafette-ci-builder\"]\n"},{"line":909,"timestamp":"2020-08-31T13:23:35.599241972Z","streamType":"stdout","text":"\n"},{"line":910,"timestamp":"2020-08-31T13:23:35.763989701Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e Running in b84ac29c3ae9\n"},{"line":911,"timestamp":"2020-08-31T13:23:35.764003769Z","streamType":"stdout","text":"\n"},{"line":912,"timestamp":"2020-08-31T13:23:35.837193394Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:35.836638082Z\" level=info msg=\"Layer sha256:f8e53713a2d197d4f83c1636ca99ab1e86fcc4aa9a62594da647da51f94cd2f7 cleaned up\"\n"},{"line":913,"timestamp":"2020-08-31T13:23:35.876553447Z","streamType":"stdout","text":"[bake-estafette] Removing intermediate container b84ac29c3ae9\n"},{"line":914,"timestamp":"2020-08-31T13:23:35.876562422Z","streamType":"stdout","text":"\n"},{"line":915,"timestamp":"2020-08-31T13:23:35.87657562Z","streamType":"stdout","text":"[bake-estafette]  ---\u003e 31762593c006\n"},{"line":916,"timestamp":"2020-08-31T13:23:35.876576604Z","streamType":"stdout","text":"\n"},{"line":917,"timestamp":"2020-08-31T13:23:35.881162705Z","streamType":"stdout","text":"[bake-estafette] Successfully built 31762593c006\n"},{"line":918,"timestamp":"2020-08-31T13:23:35.881168872Z","streamType":"stdout","text":"\n"},{"line":919,"timestamp":"2020-08-31T13:23:35.888340841Z","streamType":"stdout","text":"[bake-estafette] Successfully tagged estafette/estafette-ci-builder:cache-integration-test\n"},{"line":920,"timestamp":"2020-08-31T13:23:35.888353446Z","streamType":"stdout","text":"\n"},{"line":921,"timestamp":"2020-08-31T13:23:35.897271291Z","streamType":"stdout","text":"[bake-estafette] Successfully tagged estafette/estafette-ci-builder:0.0.0-integration-test\n"},{"line":922,"timestamp":"2020-08-31T13:23:35.897281624Z","streamType":"stdout","text":"\n"},{"line":923,"timestamp":"2020-08-31T13:23:35.897285878Z","streamType":"stdout","text":"[bake-estafette] Updating trivy vulnerabilities database...\n"},{"line":924,"timestamp":"2020-08-31T13:23:35.897286926Z","streamType":"stdout","text":"\n"},{"line":925,"timestamp":"2020-08-31T13:23:35.897294019Z","streamType":"stdout","text":"[bake-estafette] \u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --light --download-db-only estafette/estafette-ci-builder:0.0.0-integration-test\u001b[0m\n"},{"line":926,"timestamp":"2020-08-31T13:23:35.897295061Z","streamType":"stdout","text":"\n"},{"line":927,"timestamp":"2020-08-31T13:23:35.917515231Z","streamType":"stdout","text":"[bake-estafette] 2020-08-31T13:23:35.916Z\t\u001b[34mINFO\u001b[0m\tNeed to update DB\n"},{"line":928,"timestamp":"2020-08-31T13:23:35.917522692Z","streamType":"stdout","text":"\n"},{"line":929,"timestamp":"2020-08-31T13:23:35.917820164Z","streamType":"stdout","text":"[bake-estafette] 2020-08-31T13:23:35.917Z\t\u001b[34mINFO\u001b[0m\tDownloading DB...\n"},{"line":930,"timestamp":"2020-08-31T13:23:35.917822995Z","streamType":"stdout","text":"\n"},{"line":931,"timestamp":"2020-08-31T13:23:39.976077951Z","streamType":"stdout","text":"[bake-estafette] Saving docker image to file for scanning...\n"},{"line":932,"timestamp":"2020-08-31T13:23:39.976098931Z","streamType":"stdout","text":"\n"},{"line":933,"timestamp":"2020-08-31T13:23:39.985204243Z","streamType":"stdout","text":"[bake-estafette] \u001b[38;5;250m\u003e docker save estafette/estafette-ci-builder:0.0.0-integration-test -o /tmp/468472669.tar\u001b[0m\n"},{"line":934,"timestamp":"2020-08-31T13:23:39.985213678Z","streamType":"stdout","text":"\n"},{"line":935,"timestamp":"2020-08-31T13:23:43.966875244Z","streamType":"stdout","text":"[bake-estafette] Scanning container image estafette/estafette-ci-builder:0.0.0-integration-test for vulnerabilities of severities CRITICAL...\n"},{"line":936,"timestamp":"2020-08-31T13:23:43.966912734Z","streamType":"stdout","text":"\n"},{"line":937,"timestamp":"2020-08-31T13:23:43.967732725Z","streamType":"stdout","text":"[bake-estafette] \u001b[38;5;250m\u003e /trivy --cache-dir /trivy-cache image --severity CRITICAL --light --skip-update --no-progress --exit-code 15 --ignore-unfixed --input /tmp/468472669.tar\u001b[0m\n"},{"line":938,"timestamp":"2020-08-31T13:23:43.967740058Z","streamType":"stdout","text":"\n"},{"line":939,"timestamp":"2020-08-31T13:23:44.654581349Z","streamType":"stdout","text":"[bake-estafette] 2020-08-31T13:23:44.653Z\t\u001b[34mINFO\u001b[0m\tDetecting Alpine vulnerabilities...\n"},{"line":940,"timestamp":"2020-08-31T13:23:44.654592201Z","streamType":"stdout","text":"\n"},{"line":941,"timestamp":"2020-08-31T13:23:44.655345929Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":942,"timestamp":"2020-08-31T13:23:44.655355522Z","streamType":"stdout","text":"\n"},{"line":943,"timestamp":"2020-08-31T13:23:44.655359109Z","streamType":"stdout","text":"[bake-estafette] /tmp/468472669.tar (alpine 3.10.2)\n"},{"line":944,"timestamp":"2020-08-31T13:23:44.655360265Z","streamType":"stdout","text":"\n"},{"line":945,"timestamp":"2020-08-31T13:23:44.655361708Z","streamType":"stdout","text":"[bake-estafette] ==================================\n"},{"line":946,"timestamp":"2020-08-31T13:23:44.655362502Z","streamType":"stdout","text":"\n"},{"line":947,"timestamp":"2020-08-31T13:23:44.655365012Z","streamType":"stdout","text":"[bake-estafette] Total: 0 (CRITICAL: 0)\n"},{"line":948,"timestamp":"2020-08-31T13:23:44.655365792Z","streamType":"stdout","text":"\n"},{"line":949,"timestamp":"2020-08-31T13:23:44.655367135Z","streamType":"stdout","text":"[bake-estafette] \n"},{"line":950,"timestamp":"2020-08-31T13:23:44.655367916Z","streamType":"stdout","text":"\n"},{"line":951,"timestamp":"2020-08-31T13:23:44.705807102Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:44.705290645Z\" level=info msg=\"shim reaped\" id=f1476472abe2588697e8396e3cbef7d63a530f1d1f096d510ca91580a96baab0 \n"},{"line":952,"timestamp":"2020-08-31T13:23:44.715766562Z","streamType":"stdout","text":"time=\"2020-08-31T13:23:44.715284324Z\" level=info msg=\"ignoring event\" module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\n"},{"line":953,"timestamp":"2020-08-31T13:23:44.920703574Z","streamType":"stdout","text":"Removing container id f1476472abe2588697e8396e3cbef7d63a530f1d1f096d510ca91580a96baab0 from containerIDs\n"},{"line":954,"timestamp":"2020-08-31T13:23:44.921146215Z","streamType":"stdout","text":"[bake-estafette] Stage succeeded\n"},{"line":955,"timestamp":"2020-08-31T13:23:44.921334917Z","streamType":"stdout","text":"Stopping multi-stage service containers...\n"},{"line":956,"timestamp":"2020-08-31T13:23:44.921346481Z","streamType":"stdout","text":"No containers to stop\n"},{"line":957,"timestamp":"2020-08-31T13:23:44.921348616Z","streamType":"stdout","text":"Stopped multi-stage service containers...\n"},{"line":958,"timestamp":"2020-08-31T13:23:44.921352947Z","streamType":"stdout","text":"Deleting docker network estafette with id 9f67c5c9e6222160f0824482864fcc127ed8c3aaa83385e7855c05015e2a8b05...\n"},{"line":959,"timestamp":"2020-08-31T13:23:44.967622141Z","streamType":"stdout","text":"Succesfully deleted docker network estafette with id \n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"push-all","image":null,"duration":20217193482,"logLines":null,"exitCode":0,"status":"SUCCEEDED","nestedSteps":[{"step":"push-gocd-agent-to-docker-hub","depth":1,"image":null,"duration":20209412358,"logLines":[{"line":1,"timestamp":"2020-08-31T13:23:46.135279466Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:23:46.135288272Z","streamType":"stdout","text":"Filtering credentials for images [estafette/estafette-ci-builder:0.0.683-gocd]\n"},{"line":3,"timestamp":"2020-08-31T13:23:46.135291714Z","streamType":"stdout","text":"Filtered 9 container-registry credentials down to 1\n"},{"line":4,"timestamp":"2020-08-31T13:23:46.135298373Z","streamType":"stdout","text":"Logging in to repository 'estafette'\n"},{"line":5,"timestamp":"2020-08-31T13:23:47.261496852Z","streamType":"stdout","text":"Pushing container image estafette/estafette-ci-builder:0.0.683-gocd\n"},{"line":6,"timestamp":"2020-08-31T13:23:47.261511788Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker push estafette/estafette-ci-builder:0.0.683-gocd\u001b[0m\n"},{"line":7,"timestamp":"2020-08-31T13:23:47.306879112Z","streamType":"stdout","text":"The push refers to repository [docker.io/estafette/estafette-ci-builder]\n"},{"line":8,"timestamp":"2020-08-31T13:23:47.656832983Z","streamType":"stdout","text":"626f29988f7c: Preparing\n"},{"line":9,"timestamp":"2020-08-31T13:23:47.65720431Z","streamType":"stdout","text":"4789c78cd6d3: Preparing\n"},{"line":10,"timestamp":"2020-08-31T13:23:47.657224419Z","streamType":"stdout","text":"b0ff31d01252: Preparing\n"},{"line":11,"timestamp":"2020-08-31T13:23:47.657226802Z","streamType":"stdout","text":"cde2e80021fc: Preparing\n"},{"line":12,"timestamp":"2020-08-31T13:23:47.657498954Z","streamType":"stdout","text":"3585d7cfca18: Preparing\n"},{"line":13,"timestamp":"2020-08-31T13:23:47.657716227Z","streamType":"stdout","text":"39cd9cfa8093: Preparing\n"},{"line":14,"timestamp":"2020-08-31T13:23:47.658000739Z","streamType":"stdout","text":"f4cb228ea0ce: Preparing\n"},{"line":15,"timestamp":"2020-08-31T13:23:47.658369497Z","streamType":"stdout","text":"1a298368ea02: Preparing\n"},{"line":16,"timestamp":"2020-08-31T13:23:47.658646479Z","streamType":"stdout","text":"d4bb883ca3b3: Preparing\n"},{"line":17,"timestamp":"2020-08-31T13:23:47.658925858Z","streamType":"stdout","text":"626f29988f7c: Waiting\n"},{"line":18,"timestamp":"2020-08-31T13:23:47.659231778Z","streamType":"stdout","text":"22e9a33aae2b: Preparing\n"},{"line":19,"timestamp":"2020-08-31T13:23:47.659526898Z","streamType":"stdout","text":"4789c78cd6d3: Waiting\n"},{"line":20,"timestamp":"2020-08-31T13:23:47.659819045Z","streamType":"stdout","text":"e761d06cfee2: Preparing\n"},{"line":21,"timestamp":"2020-08-31T13:23:47.660165181Z","streamType":"stdout","text":"83785f9d9898: Preparing\n"},{"line":22,"timestamp":"2020-08-31T13:23:47.660444015Z","streamType":"stdout","text":"17b1083dac31: Preparing\n"},{"line":23,"timestamp":"2020-08-31T13:23:47.66074433Z","streamType":"stdout","text":"cde2e80021fc: Waiting\n"},{"line":24,"timestamp":"2020-08-31T13:23:47.661348048Z","streamType":"stdout","text":"dff7c4625815: Preparing\n"},{"line":25,"timestamp":"2020-08-31T13:23:47.661457648Z","streamType":"stdout","text":"1a298368ea02: Waiting\n"},{"line":26,"timestamp":"2020-08-31T13:23:47.661728393Z","streamType":"stdout","text":"8e86436db412: Preparing\n"},{"line":27,"timestamp":"2020-08-31T13:23:47.662052842Z","streamType":"stdout","text":"3585d7cfca18: Waiting\n"},{"line":28,"timestamp":"2020-08-31T13:23:47.662321505Z","streamType":"stdout","text":"8f9d4132e7c8: Preparing\n"},{"line":29,"timestamp":"2020-08-31T13:23:47.662650337Z","streamType":"stdout","text":"d4bb883ca3b3: Waiting\n"},{"line":30,"timestamp":"2020-08-31T13:23:47.662976595Z","streamType":"stdout","text":"39cd9cfa8093: Waiting\n"},{"line":31,"timestamp":"2020-08-31T13:23:47.66329868Z","streamType":"stdout","text":"57fa87c558f4: Preparing\n"},{"line":32,"timestamp":"2020-08-31T13:23:47.663553675Z","streamType":"stdout","text":"22e9a33aae2b: Waiting\n"},{"line":33,"timestamp":"2020-08-31T13:23:47.663829608Z","streamType":"stdout","text":"f4cb228ea0ce: Waiting\n"},{"line":34,"timestamp":"2020-08-31T13:23:47.664060652Z","streamType":"stdout","text":"de7d5141d3ca: Preparing\n"},{"line":35,"timestamp":"2020-08-31T13:23:47.664337876Z","streamType":"stdout","text":"7f0dc87fa1ae: Preparing\n"},{"line":36,"timestamp":"2020-08-31T13:23:47.664589168Z","streamType":"stdout","text":"e761d06cfee2: Waiting\n"},{"line":37,"timestamp":"2020-08-31T13:23:47.664852397Z","streamType":"stdout","text":"18ae731a51c1: Preparing\n"},{"line":38,"timestamp":"2020-08-31T13:23:47.665109578Z","streamType":"stdout","text":"51d6d3d09136: Preparing\n"},{"line":39,"timestamp":"2020-08-31T13:23:47.665388084Z","streamType":"stdout","text":"17b1083dac31: Waiting\n"},{"line":40,"timestamp":"2020-08-31T13:23:47.665395067Z","streamType":"stdout","text":"83785f9d9898: Waiting\n"},{"line":41,"timestamp":"2020-08-31T13:23:47.66539855Z","streamType":"stdout","text":"1507bc794612: Preparing\n"},{"line":42,"timestamp":"2020-08-31T13:23:47.665498674Z","streamType":"stdout","text":"50644c29ef5a: Preparing\n"},{"line":43,"timestamp":"2020-08-31T13:23:47.665500285Z","streamType":"stdout","text":"dff7c4625815: Waiting\n"},{"line":44,"timestamp":"2020-08-31T13:23:47.665501176Z","streamType":"stdout","text":"8e86436db412: Waiting\n"},{"line":45,"timestamp":"2020-08-31T13:23:47.665502065Z","streamType":"stdout","text":"7f0dc87fa1ae: Waiting\n"},{"line":46,"timestamp":"2020-08-31T13:23:47.66550505Z","streamType":"stdout","text":"57fa87c558f4: Waiting\n"},{"line":47,"timestamp":"2020-08-31T13:23:47.66550598Z","streamType":"stdout","text":"18ae731a51c1: Waiting\n"},{"line":48,"timestamp":"2020-08-31T13:23:47.665927998Z","streamType":"stdout","text":"8f9d4132e7c8: Waiting\n"},{"line":49,"timestamp":"2020-08-31T13:23:47.665929206Z","streamType":"stdout","text":"51d6d3d09136: Waiting\n"},{"line":50,"timestamp":"2020-08-31T13:23:47.665929961Z","streamType":"stdout","text":"de7d5141d3ca: Waiting\n"},{"line":51,"timestamp":"2020-08-31T13:23:47.66594334Z","streamType":"stdout","text":"50644c29ef5a: Waiting\n"},{"line":52,"timestamp":"2020-08-31T13:23:52.225500892Z","streamType":"stdout","text":"cde2e80021fc: Layer already exists\n"},{"line":53,"timestamp":"2020-08-31T13:23:52.650198052Z","streamType":"stdout","text":"3585d7cfca18: Layer already exists\n"},{"line":54,"timestamp":"2020-08-31T13:23:53.176946327Z","streamType":"stdout","text":"39cd9cfa8093: Layer already exists\n"},{"line":55,"timestamp":"2020-08-31T13:23:53.643873813Z","streamType":"stdout","text":"f4cb228ea0ce: Layer already exists\n"},{"line":56,"timestamp":"2020-08-31T13:23:53.942644733Z","streamType":"stdout","text":"1a298368ea02: Layer already exists\n"},{"line":57,"timestamp":"2020-08-31T13:23:54.091436897Z","streamType":"stdout","text":"d4bb883ca3b3: Layer already exists\n"},{"line":58,"timestamp":"2020-08-31T13:23:54.398403586Z","streamType":"stdout","text":"22e9a33aae2b: Layer already exists\n"},{"line":59,"timestamp":"2020-08-31T13:23:54.517696579Z","streamType":"stdout","text":"e761d06cfee2: Layer already exists\n"},{"line":60,"timestamp":"2020-08-31T13:23:54.613352614Z","streamType":"stdout","text":"626f29988f7c: Pushed\n"},{"line":61,"timestamp":"2020-08-31T13:23:54.888398749Z","streamType":"stdout","text":"83785f9d9898: Layer already exists\n"},{"line":62,"timestamp":"2020-08-31T13:23:54.963750134Z","streamType":"stdout","text":"17b1083dac31: Layer already exists\n"},{"line":63,"timestamp":"2020-08-31T13:23:55.061292937Z","streamType":"stdout","text":"dff7c4625815: Layer already exists\n"},{"line":64,"timestamp":"2020-08-31T13:23:55.125889698Z","streamType":"stdout","text":"b0ff31d01252: Pushed\n"},{"line":65,"timestamp":"2020-08-31T13:23:55.321260375Z","streamType":"stdout","text":"8e86436db412: Layer already exists\n"},{"line":66,"timestamp":"2020-08-31T13:23:55.389727037Z","streamType":"stdout","text":"8f9d4132e7c8: Layer already exists\n"},{"line":67,"timestamp":"2020-08-31T13:23:55.505901562Z","streamType":"stdout","text":"57fa87c558f4: Layer already exists\n"},{"line":68,"timestamp":"2020-08-31T13:23:55.553669594Z","streamType":"stdout","text":"de7d5141d3ca: Layer already exists\n"},{"line":69,"timestamp":"2020-08-31T13:23:55.733793345Z","streamType":"stdout","text":"7f0dc87fa1ae: Layer already exists\n"},{"line":70,"timestamp":"2020-08-31T13:23:55.827521547Z","streamType":"stdout","text":"18ae731a51c1: Layer already exists\n"},{"line":71,"timestamp":"2020-08-31T13:23:55.96167348Z","streamType":"stdout","text":"51d6d3d09136: Layer already exists\n"},{"line":72,"timestamp":"2020-08-31T13:23:55.984950286Z","streamType":"stdout","text":"1507bc794612: Layer already exists\n"},{"line":73,"timestamp":"2020-08-31T13:23:56.182161355Z","streamType":"stdout","text":"50644c29ef5a: Layer already exists\n"},{"line":74,"timestamp":"2020-08-31T13:23:57.121638731Z","streamType":"stdout","text":"4789c78cd6d3: Pushed\n"},{"line":75,"timestamp":"2020-08-31T13:24:01.301429012Z","streamType":"stdout","text":"0.0.683-gocd: digest: sha256:890fd0ea098c456f70a91158395e5bbc2cb9f4af724368f09977df4721f8c248 size: 5117\n"},{"line":76,"timestamp":"2020-08-31T13:24:01.310211406Z","streamType":"stdout","text":"Pushing cache container image estafette/estafette-ci-builder:cache-master\n"},{"line":77,"timestamp":"2020-08-31T13:24:01.310222686Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker push estafette/estafette-ci-builder:cache-master\u001b[0m\n"},{"line":78,"timestamp":"2020-08-31T13:24:01.360694538Z","streamType":"stdout","text":"The push refers to repository [docker.io/estafette/estafette-ci-builder]\n"},{"line":79,"timestamp":"2020-08-31T13:24:01.712762607Z","streamType":"stdout","text":"14dd5124b125: Preparing\n"},{"line":80,"timestamp":"2020-08-31T13:24:01.71277369Z","streamType":"stdout","text":"4296503d8fad: Preparing\n"},{"line":81,"timestamp":"2020-08-31T13:24:01.712774827Z","streamType":"stdout","text":"d2d602a06d8f: Preparing\n"},{"line":82,"timestamp":"2020-08-31T13:24:01.712776101Z","streamType":"stdout","text":"8e1ed46aee4f: Preparing\n"},{"line":83,"timestamp":"2020-08-31T13:24:01.712777747Z","streamType":"stdout","text":"31e9e160a059: Preparing\n"},{"line":84,"timestamp":"2020-08-31T13:24:01.712778403Z","streamType":"stdout","text":"71f17ba1c9fa: Preparing\n"},{"line":85,"timestamp":"2020-08-31T13:24:01.712779145Z","streamType":"stdout","text":"0a93894d10ca: Preparing\n"},{"line":86,"timestamp":"2020-08-31T13:24:01.712779921Z","streamType":"stdout","text":"3c0c763e9bbf: Preparing\n"},{"line":87,"timestamp":"2020-08-31T13:24:01.712780484Z","streamType":"stdout","text":"f515a0a7c1d2: Preparing\n"},{"line":88,"timestamp":"2020-08-31T13:24:01.712781121Z","streamType":"stdout","text":"6767f082575b: Preparing\n"},{"line":89,"timestamp":"2020-08-31T13:24:01.712781781Z","streamType":"stdout","text":"87e877868403: Preparing\n"},{"line":90,"timestamp":"2020-08-31T13:24:01.712797288Z","streamType":"stdout","text":"711643813209: Preparing\n"},{"line":91,"timestamp":"2020-08-31T13:24:01.71279813Z","streamType":"stdout","text":"fbec51084b83: Preparing\n"},{"line":92,"timestamp":"2020-08-31T13:24:01.712798836Z","streamType":"stdout","text":"bab50396a451: Preparing\n"},{"line":93,"timestamp":"2020-08-31T13:24:01.712799623Z","streamType":"stdout","text":"3e207b409db3: Preparing\n"},{"line":94,"timestamp":"2020-08-31T13:24:01.712800312Z","streamType":"stdout","text":"71f17ba1c9fa: Waiting\n"},{"line":95,"timestamp":"2020-08-31T13:24:01.712800968Z","streamType":"stdout","text":"0a93894d10ca: Waiting\n"},{"line":96,"timestamp":"2020-08-31T13:24:01.71280165Z","streamType":"stdout","text":"87e877868403: Waiting\n"},{"line":97,"timestamp":"2020-08-31T13:24:01.712802437Z","streamType":"stdout","text":"3c0c763e9bbf: Waiting\n"},{"line":98,"timestamp":"2020-08-31T13:24:01.712803256Z","streamType":"stdout","text":"f515a0a7c1d2: Waiting\n"},{"line":99,"timestamp":"2020-08-31T13:24:01.712804043Z","streamType":"stdout","text":"6767f082575b: Waiting\n"},{"line":100,"timestamp":"2020-08-31T13:24:01.712804617Z","streamType":"stdout","text":"711643813209: Waiting\n"},{"line":101,"timestamp":"2020-08-31T13:24:01.712805193Z","streamType":"stdout","text":"fbec51084b83: Waiting\n"},{"line":102,"timestamp":"2020-08-31T13:24:01.712805783Z","streamType":"stdout","text":"3e207b409db3: Waiting\n"},{"line":103,"timestamp":"2020-08-31T13:24:01.71280647Z","streamType":"stdout","text":"bab50396a451: Waiting\n"},{"line":104,"timestamp":"2020-08-31T13:24:02.518415025Z","streamType":"stdout","text":"14dd5124b125: Layer already exists\n"},{"line":105,"timestamp":"2020-08-31T13:24:02.520952204Z","streamType":"stdout","text":"d2d602a06d8f: Layer already exists\n"},{"line":106,"timestamp":"2020-08-31T13:24:02.530375278Z","streamType":"stdout","text":"31e9e160a059: Layer already exists\n"},{"line":107,"timestamp":"2020-08-31T13:24:02.533025164Z","streamType":"stdout","text":"8e1ed46aee4f: Layer already exists\n"},{"line":108,"timestamp":"2020-08-31T13:24:02.553938115Z","streamType":"stdout","text":"4296503d8fad: Layer already exists\n"},{"line":109,"timestamp":"2020-08-31T13:24:02.928373459Z","streamType":"stdout","text":"3c0c763e9bbf: Layer already exists\n"},{"line":110,"timestamp":"2020-08-31T13:24:02.932337022Z","streamType":"stdout","text":"0a93894d10ca: Layer already exists\n"},{"line":111,"timestamp":"2020-08-31T13:24:02.934858361Z","streamType":"stdout","text":"71f17ba1c9fa: Layer already exists\n"},{"line":112,"timestamp":"2020-08-31T13:24:02.945614418Z","streamType":"stdout","text":"f515a0a7c1d2: Layer already exists\n"},{"line":113,"timestamp":"2020-08-31T13:24:02.959424049Z","streamType":"stdout","text":"6767f082575b: Layer already exists\n"},{"line":114,"timestamp":"2020-08-31T13:24:03.324180162Z","streamType":"stdout","text":"fbec51084b83: Layer already exists\n"},{"line":115,"timestamp":"2020-08-31T13:24:03.328705578Z","streamType":"stdout","text":"711643813209: Layer already exists\n"},{"line":116,"timestamp":"2020-08-31T13:24:03.346033297Z","streamType":"stdout","text":"bab50396a451: Layer already exists\n"},{"line":117,"timestamp":"2020-08-31T13:24:03.352100051Z","streamType":"stdout","text":"87e877868403: Layer already exists\n"},{"line":118,"timestamp":"2020-08-31T13:24:03.372053826Z","streamType":"stdout","text":"3e207b409db3: Layer already exists\n"},{"line":119,"timestamp":"2020-08-31T13:24:04.223691322Z","streamType":"stdout","text":"cache-master: digest: sha256:6f7a5061e16d9a2218b8368fe83dedacf78971d3617b20423219de5e80b87568 size: 3449\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"push-to-docker-hub","depth":1,"image":null,"duration":15611312160,"logLines":[{"line":1,"timestamp":"2020-08-31T13:23:46.041394781Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-docker\u001b[0m version \u001b[1m0.1.194\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-08-11T09:34:11Z \u001b[36mgoVersion=\u001b[0mgo1.14.2 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m68cf712425d094cccdc132eb0f9de53af7cd8854\n"},{"line":2,"timestamp":"2020-08-31T13:23:46.041397694Z","streamType":"stdout","text":"Filtering credentials for images [estafette/estafette-ci-builder:0.0.683]\n"},{"line":3,"timestamp":"2020-08-31T13:23:46.04140037Z","streamType":"stdout","text":"Filtered 9 container-registry credentials down to 1\n"},{"line":4,"timestamp":"2020-08-31T13:23:46.041401744Z","streamType":"stdout","text":"Logging in to repository 'estafette'\n"},{"line":5,"timestamp":"2020-08-31T13:23:47.186808274Z","streamType":"stdout","text":"Pushing container image estafette/estafette-ci-builder:0.0.683\n"},{"line":6,"timestamp":"2020-08-31T13:23:47.186819671Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker push estafette/estafette-ci-builder:0.0.683\u001b[0m\n"},{"line":7,"timestamp":"2020-08-31T13:23:47.227672217Z","streamType":"stdout","text":"The push refers to repository [docker.io/estafette/estafette-ci-builder]\n"},{"line":8,"timestamp":"2020-08-31T13:23:47.586931948Z","streamType":"stdout","text":"14dd5124b125: Preparing\n"},{"line":9,"timestamp":"2020-08-31T13:23:47.586941593Z","streamType":"stdout","text":"4296503d8fad: Preparing\n"},{"line":10,"timestamp":"2020-08-31T13:23:47.586944207Z","streamType":"stdout","text":"d2d602a06d8f: Preparing\n"},{"line":11,"timestamp":"2020-08-31T13:23:47.586946212Z","streamType":"stdout","text":"8e1ed46aee4f: Preparing\n"},{"line":12,"timestamp":"2020-08-31T13:23:47.586951726Z","streamType":"stdout","text":"31e9e160a059: Preparing\n"},{"line":13,"timestamp":"2020-08-31T13:23:47.588626506Z","streamType":"stdout","text":"71f17ba1c9fa: Preparing\n"},{"line":14,"timestamp":"2020-08-31T13:23:47.588960113Z","streamType":"stdout","text":"0a93894d10ca: Preparing\n"},{"line":15,"timestamp":"2020-08-31T13:23:47.589142717Z","streamType":"stdout","text":"3c0c763e9bbf: Preparing\n"},{"line":16,"timestamp":"2020-08-31T13:23:47.58925626Z","streamType":"stdout","text":"f515a0a7c1d2: Preparing\n"},{"line":17,"timestamp":"2020-08-31T13:23:47.589730278Z","streamType":"stdout","text":"6767f082575b: Preparing\n"},{"line":18,"timestamp":"2020-08-31T13:23:47.58973753Z","streamType":"stdout","text":"87e877868403: Preparing\n"},{"line":19,"timestamp":"2020-08-31T13:23:47.590012994Z","streamType":"stdout","text":"711643813209: Preparing\n"},{"line":20,"timestamp":"2020-08-31T13:23:47.590148935Z","streamType":"stdout","text":"fbec51084b83: Preparing\n"},{"line":21,"timestamp":"2020-08-31T13:23:47.590311226Z","streamType":"stdout","text":"bab50396a451: Preparing\n"},{"line":22,"timestamp":"2020-08-31T13:23:47.590314396Z","streamType":"stdout","text":"3e207b409db3: Preparing\n"},{"line":23,"timestamp":"2020-08-31T13:23:47.590316267Z","streamType":"stdout","text":"6767f082575b: Waiting\n"},{"line":24,"timestamp":"2020-08-31T13:23:47.590317771Z","streamType":"stdout","text":"3c0c763e9bbf: Waiting\n"},{"line":25,"timestamp":"2020-08-31T13:23:47.59032301Z","streamType":"stdout","text":"87e877868403: Waiting\n"},{"line":26,"timestamp":"2020-08-31T13:23:47.590406089Z","streamType":"stdout","text":"71f17ba1c9fa: Waiting\n"},{"line":27,"timestamp":"2020-08-31T13:23:47.590437538Z","streamType":"stdout","text":"711643813209: Waiting\n"},{"line":28,"timestamp":"2020-08-31T13:23:47.59060129Z","streamType":"stdout","text":"0a93894d10ca: Waiting\n"},{"line":29,"timestamp":"2020-08-31T13:23:47.590625968Z","streamType":"stdout","text":"3e207b409db3: Waiting\n"},{"line":30,"timestamp":"2020-08-31T13:23:47.590657284Z","streamType":"stdout","text":"fbec51084b83: Waiting\n"},{"line":31,"timestamp":"2020-08-31T13:23:47.59072053Z","streamType":"stdout","text":"bab50396a451: Waiting\n"},{"line":32,"timestamp":"2020-08-31T13:23:47.590743007Z","streamType":"stdout","text":"f515a0a7c1d2: Waiting\n"},{"line":33,"timestamp":"2020-08-31T13:23:48.402029575Z","streamType":"stdout","text":"31e9e160a059: Layer already exists\n"},{"line":34,"timestamp":"2020-08-31T13:23:48.853528112Z","streamType":"stdout","text":"71f17ba1c9fa: Layer already exists\n"},{"line":35,"timestamp":"2020-08-31T13:23:49.284838813Z","streamType":"stdout","text":"0a93894d10ca: Layer already exists\n"},{"line":36,"timestamp":"2020-08-31T13:23:49.713153952Z","streamType":"stdout","text":"3c0c763e9bbf: Layer already exists\n"},{"line":37,"timestamp":"2020-08-31T13:23:50.130832259Z","streamType":"stdout","text":"f515a0a7c1d2: Layer already exists\n"},{"line":38,"timestamp":"2020-08-31T13:23:50.573814282Z","streamType":"stdout","text":"6767f082575b: Layer already exists\n"},{"line":39,"timestamp":"2020-08-31T13:23:50.77243092Z","streamType":"stdout","text":"4296503d8fad: Pushed\n"},{"line":40,"timestamp":"2020-08-31T13:23:50.944547763Z","streamType":"stdout","text":"14dd5124b125: Pushed\n"},{"line":41,"timestamp":"2020-08-31T13:23:50.988003072Z","streamType":"stdout","text":"87e877868403: Layer already exists\n"},{"line":42,"timestamp":"2020-08-31T13:23:51.202761828Z","streamType":"stdout","text":"711643813209: Layer already exists\n"},{"line":43,"timestamp":"2020-08-31T13:23:51.376447324Z","streamType":"stdout","text":"fbec51084b83: Layer already exists\n"},{"line":44,"timestamp":"2020-08-31T13:23:51.408774834Z","streamType":"stdout","text":"bab50396a451: Layer already exists\n"},{"line":45,"timestamp":"2020-08-31T13:23:51.539915542Z","streamType":"stdout","text":"8e1ed46aee4f: Pushed\n"},{"line":46,"timestamp":"2020-08-31T13:23:51.653433541Z","streamType":"stdout","text":"3e207b409db3: Layer already exists\n"},{"line":47,"timestamp":"2020-08-31T13:23:53.489347588Z","streamType":"stdout","text":"d2d602a06d8f: Pushed\n"},{"line":48,"timestamp":"2020-08-31T13:23:57.608004559Z","streamType":"stdout","text":"0.0.683: digest: sha256:6f7a5061e16d9a2218b8368fe83dedacf78971d3617b20423219de5e80b87568 size: 3449\n"},{"line":49,"timestamp":"2020-08-31T13:23:57.621500784Z","streamType":"stdout","text":"Pushing cache container image estafette/estafette-ci-builder:cache-master\n"},{"line":50,"timestamp":"2020-08-31T13:23:57.621510102Z","streamType":"stdout","text":"\u001b[38;5;250m\u003e docker push estafette/estafette-ci-builder:cache-master\u001b[0m\n"},{"line":51,"timestamp":"2020-08-31T13:23:57.675884658Z","streamType":"stdout","text":"The push refers to repository [docker.io/estafette/estafette-ci-builder]\n"},{"line":52,"timestamp":"2020-08-31T13:23:58.021729335Z","streamType":"stdout","text":"14dd5124b125: Preparing\n"},{"line":53,"timestamp":"2020-08-31T13:23:58.021747468Z","streamType":"stdout","text":"4296503d8fad: Preparing\n"},{"line":54,"timestamp":"2020-08-31T13:23:58.021749116Z","streamType":"stdout","text":"d2d602a06d8f: Preparing\n"},{"line":55,"timestamp":"2020-08-31T13:23:58.021751084Z","streamType":"stdout","text":"8e1ed46aee4f: Preparing\n"},{"line":56,"timestamp":"2020-08-31T13:23:58.021753432Z","streamType":"stdout","text":"31e9e160a059: Preparing\n"},{"line":57,"timestamp":"2020-08-31T13:23:58.021754697Z","streamType":"stdout","text":"71f17ba1c9fa: Preparing\n"},{"line":58,"timestamp":"2020-08-31T13:23:58.021756352Z","streamType":"stdout","text":"0a93894d10ca: Preparing\n"},{"line":59,"timestamp":"2020-08-31T13:23:58.021757615Z","streamType":"stdout","text":"3c0c763e9bbf: Preparing\n"},{"line":60,"timestamp":"2020-08-31T13:23:58.021758706Z","streamType":"stdout","text":"f515a0a7c1d2: Preparing\n"},{"line":61,"timestamp":"2020-08-31T13:23:58.021759634Z","streamType":"stdout","text":"6767f082575b: Preparing\n"},{"line":62,"timestamp":"2020-08-31T13:23:58.02176067Z","streamType":"stdout","text":"87e877868403: Preparing\n"},{"line":63,"timestamp":"2020-08-31T13:23:58.02176174Z","streamType":"stdout","text":"711643813209: Preparing\n"},{"line":64,"timestamp":"2020-08-31T13:23:58.021762635Z","streamType":"stdout","text":"fbec51084b83: Preparing\n"},{"line":65,"timestamp":"2020-08-31T13:23:58.021763754Z","streamType":"stdout","text":"bab50396a451: Preparing\n"},{"line":66,"timestamp":"2020-08-31T13:23:58.021765117Z","streamType":"stdout","text":"3e207b409db3: Preparing\n"},{"line":67,"timestamp":"2020-08-31T13:23:58.021766504Z","streamType":"stdout","text":"f515a0a7c1d2: Waiting\n"},{"line":68,"timestamp":"2020-08-31T13:23:58.021767579Z","streamType":"stdout","text":"6767f082575b: Waiting\n"},{"line":69,"timestamp":"2020-08-31T13:23:58.021772903Z","streamType":"stdout","text":"87e877868403: Waiting\n"},{"line":70,"timestamp":"2020-08-31T13:23:58.022375831Z","streamType":"stdout","text":"fbec51084b83: Waiting\n"},{"line":71,"timestamp":"2020-08-31T13:23:58.022385348Z","streamType":"stdout","text":"711643813209: Waiting\n"},{"line":72,"timestamp":"2020-08-31T13:23:58.022386754Z","streamType":"stdout","text":"bab50396a451: Waiting\n"},{"line":73,"timestamp":"2020-08-31T13:23:58.022387684Z","streamType":"stdout","text":"71f17ba1c9fa: Waiting\n"},{"line":74,"timestamp":"2020-08-31T13:23:58.022388419Z","streamType":"stdout","text":"3e207b409db3: Waiting\n"},{"line":75,"timestamp":"2020-08-31T13:23:58.02238914Z","streamType":"stdout","text":"0a93894d10ca: Waiting\n"},{"line":76,"timestamp":"2020-08-31T13:23:58.022389968Z","streamType":"stdout","text":"3c0c763e9bbf: Waiting\n"},{"line":77,"timestamp":"2020-08-31T13:23:58.797957719Z","streamType":"stdout","text":"d2d602a06d8f: Layer already exists\n"},{"line":78,"timestamp":"2020-08-31T13:23:58.802862704Z","streamType":"stdout","text":"31e9e160a059: Layer already exists\n"},{"line":79,"timestamp":"2020-08-31T13:23:58.804898359Z","streamType":"stdout","text":"14dd5124b125: Layer already exists\n"},{"line":80,"timestamp":"2020-08-31T13:23:58.818159346Z","streamType":"stdout","text":"8e1ed46aee4f: Layer already exists\n"},{"line":81,"timestamp":"2020-08-31T13:23:58.818170394Z","streamType":"stdout","text":"4296503d8fad: Layer already exists\n"},{"line":82,"timestamp":"2020-08-31T13:23:59.203716014Z","streamType":"stdout","text":"3c0c763e9bbf: Layer already exists\n"},{"line":83,"timestamp":"2020-08-31T13:23:59.21035764Z","streamType":"stdout","text":"71f17ba1c9fa: Layer already exists\n"},{"line":84,"timestamp":"2020-08-31T13:23:59.224615561Z","streamType":"stdout","text":"6767f082575b: Layer already exists\n"},{"line":85,"timestamp":"2020-08-31T13:23:59.226154021Z","streamType":"stdout","text":"0a93894d10ca: Layer already exists\n"},{"line":86,"timestamp":"2020-08-31T13:23:59.227603074Z","streamType":"stdout","text":"f515a0a7c1d2: Layer already exists\n"},{"line":87,"timestamp":"2020-08-31T13:23:59.601173022Z","streamType":"stdout","text":"711643813209: Layer already exists\n"},{"line":88,"timestamp":"2020-08-31T13:23:59.612130384Z","streamType":"stdout","text":"87e877868403: Layer already exists\n"},{"line":89,"timestamp":"2020-08-31T13:23:59.622043499Z","streamType":"stdout","text":"fbec51084b83: Layer already exists\n"},{"line":90,"timestamp":"2020-08-31T13:23:59.622807337Z","streamType":"stdout","text":"bab50396a451: Layer already exists\n"},{"line":91,"timestamp":"2020-08-31T13:23:59.634611775Z","streamType":"stdout","text":"3e207b409db3: Layer already exists\n"},{"line":92,"timestamp":"2020-08-31T13:24:00.566824348Z","streamType":"stdout","text":"cache-master: digest: sha256:6f7a5061e16d9a2218b8368fe83dedacf78971d3617b20423219de5e80b87568 size: 3449\n"}],"exitCode":0,"status":"SUCCEEDED"}]},{"step":"slack-notify","image":{"name":"extensions/slack-build-status","tag":"dev","isPulled":false,"imageSize":12653738,"pullDuration":1894089743,"isTrusted":true},"duration":1120024569,"logLines":[{"line":1,"timestamp":"2020-08-31T13:24:08.019057201Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-slack-build-status\u001b[0m version \u001b[1m0.1.66\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:34:02Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0me3cdae7bc38d796404b561d6f47e0d28009738c2\n"},{"line":2,"timestamp":"2020-08-31T13:24:08.019067179Z","streamType":"stdout","text":"Unmarshalling credentials...\n"},{"line":3,"timestamp":"2020-08-31T13:24:08.019070084Z","streamType":"stdout","text":"Checking if credential estafette exists...\n"},{"line":4,"timestamp":"2020-08-31T13:24:08.0190952Z","streamType":"stdout","text":"Checking credential slack-webhook-estafette for workspace estafette...\n"},{"line":5,"timestamp":"2020-08-31T13:24:08.019097334Z","streamType":"stdout","text":"Found credential slack-webhook-estafette for workspace estafette\n"},{"line":6,"timestamp":"2020-08-31T13:24:08.221749567Z","streamType":"stdout","text":"Finished estafette-extension-slack-build-status...\n"}],"exitCode":0,"status":"SUCCEEDED"},{"step":"injected-after","image":null,"duration":1511853963,"logLines":null,"exitCode":0,"status":"SUCCEEDED","autoInjected":true,"nestedSteps":[{"step":"set-build-status","depth":1,"image":null,"duration":1504356595,"logLines":[{"line":1,"timestamp":"2020-08-31T13:24:09.167979916Z","streamType":"stdout","text":"Starting \u001b[1mestafette-extension-github-status\u001b[0m version \u001b[1m0.1.46\u001b[0m... \u001b[36mbranch=\u001b[0mmaster \u001b[36mbuildDate=\u001b[0m2020-03-04T09:32:11Z \u001b[36mgoVersion=\u001b[0mgo1.14 \u001b[36mos=\u001b[0mlinux \u001b[36mrevision=\u001b[0m6db9d43ca763f9104293785ed2c594320dd7946a\n"},{"line":2,"timestamp":"2020-08-31T13:24:09.167989931Z","streamType":"stdout","text":"Setting logs url https://estafette.***.com/pipelines/github.com/estafette/estafette-ci-builder/builds/585923392308051979/logs\n"},{"line":3,"timestamp":"2020-08-31T13:24:09.582025898Z","streamType":"stdout","text":"Received successful response for 'https://api.github.com/repos/estafette/estafette-ci-builder/statuses/fedcec403962470e21b635cb2da34d027e634858' Github api call with status code 201\n"},{"line":4,"timestamp":"2020-08-31T13:24:09.582218582Z","streamType":"stdout","text":"Finished estafette-extension-github-status...\n"}],"exitCode":0,"status":"SUCCEEDED","autoInjected":true}]}]