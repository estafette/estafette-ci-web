{
  "id": "556700225672118282",
  "repoSource": "github.com",
  "repoOwner": "estafette",
  "repoName": "estafette-ci-builder",
  "repoBranch": "master",
  "repoRevision": "4fb26973c5d99f42c69f072be4f0cd60c1fbee97",
  "buildVersion": "0.0.664",
  "buildStatus": "succeeded",
  "labels": [
    {
      "key": "app-group",
      "value": "estafette-ci"
    },
    {
      "key": "language",
      "value": "golang"
    },
    {
      "key": "team",
      "value": "estafette-team"
    }
  ],
  "releaseTargets": [
    {
      "name": "windows",
      "activeReleases": [
        {
          "name": "windows",
          "id": "489616731055620098",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.396",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2019-09-26T09:19:28.412442Z",
          "updatedAt": "2019-09-26T09:25:46.512726Z",
          "duration": 378000000000,
          "pendingDuration": 0
        }
      ]
    },
    {
      "name": "dev",
      "activeReleases": [
        {
          "name": "dev",
          "id": "562641488915169291",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.668",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "pipeline": {
                "buildVersion": "0.0.668",
                "repoSource": "github.com",
                "repoOwner": "estafette",
                "repoName": "estafette-ci-builder",
                "repoBranch": "master",
                "status": "succeeded",
                "event": "finished"
              }
            }
          ],
          "insertedAt": "2020-06-10T07:42:35.943039Z",
          "updatedAt": "2020-06-10T07:43:06.468886Z",
          "duration": 30000000000,
          "pendingDuration": 0
        }
      ]
    },
    {
      "name": "beta",
      "activeReleases": [
        {
          "name": "beta",
          "id": "561325733304205322",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.666",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-06-05T16:10:19.196566Z",
          "updatedAt": "2020-06-05T16:10:48.641763Z",
          "duration": 29000000000,
          "pendingDuration": 0
        }
      ]
    },
    {
      "name": "stable",
      "activeReleases": [
        {
          "name": "stable",
          "id": "561325742644035594",
          "repoSource": "github.com",
          "repoOwner": "estafette",
          "repoName": "estafette-ci-builder",
          "releaseVersion": "0.0.666",
          "releaseStatus": "succeeded",
          "triggerEvents": [
            {
              "manual": {
                "userID": "me@estafette.io"
              }
            }
          ],
          "insertedAt": "2020-06-05T16:10:22.046739Z",
          "updatedAt": "2020-06-05T16:10:53.824982Z",
          "duration": 31000000000,
          "pendingDuration": 0
        }
      ]
    }
  ],
  "manifest": "builder:\n  track: stable\n\nlabels:\n  app-group: estafette-ci\n  team: estafette-team\n  language: golang\n\nversion:\n  semver:\n    major: 0\n    minor: 0\n\nstages:\n  build:\n    image: golang:1.14.2-alpine3.11\n    env:\n      CGO_ENABLED: 0\n      GOOS: linux\n      GOARCH: amd64\n    commands:\n    - go test ./...\n    - go build -v -ldflags \"-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME} -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\" -o ./publish/${ESTAFETTE_GIT_NAME}\n\n  bake-all:\n    parallelStages:\n      bake:\n        image: extensions/docker:dev\n        action: build\n        no-cache: true\n        dontExpand:\n        - ESTAFETTE_WORKDIR\n        repositories:\n        - estafette\n        path: ./publish\n        copy:\n        - builder/templates\n\n      bake-gocd-agent:\n        image: extensions/docker:dev\n        action: build\n        no-cache: true\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n        path: ./publish\n        copy:\n        - builder/templates\n        dockerfile: Dockerfile.gocd\n\n  dive-and-trivy-all:\n    parallelStages:\n      dive:\n        image: extensions/docker:dev\n        action: dive\n        repositories:\n        - estafette\n\n      dive-gocd-agent:\n        image: extensions/docker:dev\n        action: dive\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n\n      trivy:\n        image: extensions/docker:dev\n        action: trivy\n        repositories:\n        - estafette\n\n      trivy-gocd-agent:\n        image: extensions/docker:dev\n        action: trivy\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n\n  clean-working-directory:\n    image: golang:1.14.2-alpine3.11\n    commands:\n    - rm -rf ..?* .[!.]* *\n\n  test:\n    image: estafette/estafette-ci-builder:${ESTAFETTE_BUILD_VERSION}\n    env:\n      BUILDER_CONFIG:\n        '{\n          \"action\":\"build\",\n          \"track\":\"dev\",\n          \"dindMtu\":\"1460\",\n          \"dindBip\":\"192.168.3.1/24\",\n          \"dindNetwork\":{\n            \"name\":\"estafette-integration\",\n            \"subnet\":\"192.168.4.1/24\",\n            \"gateway\":\"192.168.4.1\"\n          },\n          \"manifest\":{\n            \"Builder\":{\n              \"Track\":\"stable\",\n              \"OperatingSystem\":\"linux\"\n            },\n            \"Labels\":{\n              \"app\":\"estafette-ci-builder\",\n              \"app-group\":\"estafette-ci\",\n              \"language\":\"golang\",\n              \"team\":\"estafette-team\"\n            },\n            \"Version\":{\n              \"SemVer\":{\n                \"Major\":0,\n                \"Minor\":0,\n                \"Patch\":\"{{auto}}\",\n                \"LabelTemplate\":\"{{branch}}\",\n                \"ReleaseBranch\":\"master\"\n              },\n              \"Custom\":null\n            },\n            \"GlobalEnvVars\":null,\n            \"Stages\":[\n              {\n                \"Name\":\"services-test\",\n                \"ContainerImage\":\"alpine:latest\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\": [\n                  \"route\",\n                  \"ip addr show eth0\",\n                  \"cat /etc/hosts\",\n                  \"cat /etc/resolv.conf\",\n                  \"apk add curl\",\n                  \"curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused http://nginx:80/\"\n                ],\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":null,\n                \"AutoInjected\":false,\n                \"Retries\":0,\n                \"Services\": [\n                  {\n                    \"Name\": \"nginx\",\n                    \"ContainerImage\": \"nginx:alpine\",\n                    \"Shell\":\"/bin/sh\",\n                    \"When\":\"status == ''succeeded''\",\n                    \"Readiness\": {\n                      \"Path\": \"/\",\n                      \"TimeoutSeconds\": 30,\n                      \"Hostname\": \"nginx\",\n                      \"Port\": 80,\n                      \"Protocol\": \"http\"\n                    }\n                  },\n                  {\n                    \"Name\": \"cockroachdb\",\n                    \"ContainerImage\": \"cockroachdb/cockroach:v19.2.0\",\n                    \"Commands\":[\n                      \"/cockroach/cockroach start-single-node --insecure --advertise-addr cockroachdb\"\n                    ],\n                    \"EnvVars\":{\n                      \"COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING\":\"true\"\n                    },\n                    \"Shell\":\"/bin/sh\",\n                    \"When\":\"status == ''succeeded''\",\n                    \"Readiness\": {\n                      \"Path\": \"/health?ready=1\",\n                      \"TimeoutSeconds\": 30,\n                      \"Hostname\": \"cockroachdb\",\n                      \"Port\": 8080,\n                      \"Protocol\": \"http\"\n                    }\n                  }\n                ]\n              },\n              {\n                \"Name\":\"git-clone\",\n                \"ContainerImage\":\"extensions/git-clone:dev\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\":null,\n                \"shallow\": false,\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":null,\n                \"AutoInjected\":true,\n                \"Retries\":0,\n                \"CustomProperties\":null\n              },\n              {\n                \"Name\":\"parallel-builds\",\n                \"ContainerImage\":\"\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\":[],\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":{},\n                \"AutoInjected\":false,\n                \"Retries\":0,\n                \"CustomProperties\":null,\n                \"ParallelStages\":[\n                  {\n                    \"Name\":\"buildA\",\n                    \"ContainerImage\":\n                    \"golang:1.14.0-alpine3.11\",\n                    \"Shell\":\"/bin/sh\",\n                    \"WorkingDirectory\":\"/estafette-work\",\n                    \"Commands\":[\n                      \"go test ./...\",\n                      \"go build -v -ldflags \\\"-X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\\\" -o ./publish/${ESTAFETTE_GIT_NAME}\",\n                      \"echo $PWD\",\n                      \"ls -latr\",\n                      \"ls -latr ./publish\"\n                    ],\n                    \"When\":\"status == ''succeeded''\",\n                    \"EnvVars\":{\n                      \"CGO_ENABLED\":\"0\",\n                      \"GOOS\":\"linux\",\n                      \"GOARCH\":\"amd64\"\n                    },\n                    \"AutoInjected\":false,\n                    \"Retries\":0,\n                    \"CustomProperties\":null\n                  },\n                  {\n                    \"Name\":\"buildB\",\n                    \"ContainerImage\":\"alpine:3.10\",\n                    \"Shell\":\"/bin/sh\",\n                    \"WorkingDirectory\":\"/estafette-work\",\n                    \"Commands\":[\n                      \"echo hi\"\n                    ],\n                    \"When\":\"status == ''succeeded''\"\n                  }\n                ]\n              },\n              {\n                \"Name\":\"bake-estafette\",\n                \"ContainerImage\":\"extensions/docker:dev\",\n                \"Shell\":\"/bin/sh\",\n                \"WorkingDirectory\":\"/estafette-work\",\n                \"Commands\":null,\n                \"When\":\"status == ''succeeded''\",\n                \"EnvVars\":null,\n                \"AutoInjected\":false,\n                \"Retries\":0,\n                \"CustomProperties\":{\n                  \"action\":\"build\",\n                  \"no-cache\":true,\n                  \"tag\":\"testtag\",\n                  \"expand-variables\":false,\n                  \"path\":\"./publish\",\n                  \"repositories\":[\"estafette\"]\n                }\n              }\n            ],\n            \"Releases\":null\n          },\n          \"jobName\":\"build-estafette-estafette-ci-builder-391855387650326531\",\n          \"ciServer\":{\n            \"baseUrl\":\"https://httpstat.us/200\",\n            \"builderEventsUrl\":\"https://httpstat.us/200\",\n            \"postLogsUrl\":\"https://httpstat.us/200\",\n            \"apiKey\":\"\"\n          },\n          \"buildParams\":{\n            \"buildID\":391855387650326531\n          },\n          \"git\":{\n            \"repoSource\":\"github.com\",\n            \"repoOwner\":\"estafette\",\n            \"repoName\":\"estafette-ci-builder\",\n            \"repoBranch\":\"integration-test\",\n            \"repoRevision\":\"4ba7791566e3f6f69e8542183168ec9b1ad03ca7\"\n          },\n          \"buildVersion\":{\n            \"version\":\"0.0.0-integration-test\",\n            \"major\":0,\n            \"minor\":0,\n            \"patch\":\"0\",\n            \"autoincrement\":0\n          },\n          \"credentials\":null,\n          \"trustedImages\":[\n            {\n              \"path\":\"extensions/docker\",\n              \"runDocker\":true\n            },\n            {\n              \"path\":\"estafette/estafette-ci-builder\",\n              \"runPrivileged\":true\n            },\n            {\n              \"path\":\"golang\",\n              \"runDocker\":true,\n              \"allowCommands\":true\n            },\n            {\n              \"path\":\"extensions/git-clone\"\n            },\n            {\n              \"path\":\"bsycorp/kind\",\n              \"runPrivileged\":true\n            }\n          ]\n        }'\n      SECRET_DECRYPTION_KEY: \"8c6E5e7R8ameE2L6qxEcN5Yc3Q7P4Yd4\"\n      ESTAFETTE_LOG_FORMAT: console\n\n  push-all:\n    parallelStages:\n      push-to-docker-hub:\n        image: extensions/docker:dev\n        action: push\n        repositories:\n        - estafette\n\n      push-gocd-agent-to-docker-hub:\n        image: extensions/docker:dev\n        action: push\n        versionTagSuffix: gocd\n        repositories:\n        - estafette\n\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    workspace: estafette\n    channels:\n    - '#build-status'\n    when:\n      status == 'succeeded' ||\n      status == 'failed'\n\nreleases:\n  windows:\n    builder:\n      os: windows\n    clone: true\n    stages:\n      build:\n        image: golang:1.13.0-windowsservercore-1809\n        env:\n          CGO_ENABLED: 0\n          GOOS: windows\n          GOARCH: amd64\n        commands:\n        - go build -v -ldflags \"-X main.app=$env:ESTAFETTE_GIT_NAME -X main.version=$env:ESTAFETTE_BUILD_VERSION -X main.revision=$env:ESTAFETTE_GIT_REVISION -X main.branch=$env:ESTAFETTE_GIT_BRANCH -X main.buildDate=$env:ESTAFETTE_BUILD_DATETIME\" -o ./publish/$env:ESTAFETTE_GIT_NAME.exe\n\n      bake:\n        image: extensions/docker:windowsservercore-1809\n        action: build\n        no-cache: true\n        expand-variables: false\n        repositories:\n        - estafette\n        dockerfile: Dockerfile.windowsservercore-1809\n        path: ./publish\n\n      push-to-docker-hub:\n        image: extensions/docker:windowsservercore-1809\n        action: push\n        repositories:\n        - estafette\n        tags:\n        - windowsservercore-1809\n        pushVersionTag: false\n\n  dev:\n    triggers:\n    - pipeline:\n        name: self\n        branch: .+\n    stages:\n      tag-all:\n        parallelStages:\n          tag-container-image:\n            image: extensions/docker:dev\n            action: tag\n            repositories:\n            - estafette\n            tags:\n            - dev\n\n          tag-gocd-agent-container-image:\n            image: extensions/docker:dev\n            action: tag\n            versionTagSuffix: gocd\n            repositories:\n            - estafette\n            tags:\n            - dev-gocd\n\n  beta:\n    stages:\n      tag-all:\n        parallelStages:\n          tag-container-image:\n            image: extensions/docker:dev\n            action: tag\n            repositories:\n            - estafette\n            tags:\n            - beta\n\n          tag-gocd-agent-container-image:\n            image: extensions/docker:dev\n            action: tag\n            versionTagSuffix: gocd\n            repositories:\n            - estafette\n            tags:\n            - beta-gocd\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: estafette\n        channels:\n        - '#build-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'\n\n  stable:\n    stages:\n      tag-all:\n        parallelStages:\n          tag-container-image:\n            image: extensions/docker:dev\n            action: tag\n            repositories:\n            - estafette\n            tags:\n            - stable\n            - latest\n\n          tag-gocd-agent-container-image:\n            image: extensions/docker:dev\n            action: tag\n            versionTagSuffix: gocd\n            repositories:\n            - estafette\n            tags:\n            - stable-gocd\n            - latest-gocd\n\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        workspace: estafette\n        channels:\n        - '#build-status'\n        when:\n          status == 'succeeded' ||\n          status == 'failed'",
  "manifestWithDefaults": "builder:\n  track: stable\n  os: linux\nlabels:\n  app-group: estafette-ci\n  language: golang\n  team: estafette-team\nversion:\n  semver:\n    major: 0\n    minor: 0\n    patch: '{{auto}}'\n    labelTemplate: '{{branch}}'\n    releaseBranch: master\nstages:\n  build:\n    image: golang:1.14.2-alpine3.11\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - go test ./...\n    - go build -v -ldflags \"-X main.appgroup=${ESTAFETTE_LABEL_APP_GROUP} -X main.app=${ESTAFETTE_GIT_NAME}\n      -X main.version=${ESTAFETTE_BUILD_VERSION} -X main.revision=${ESTAFETTE_GIT_REVISION}\n      -X main.branch=${ESTAFETTE_GIT_BRANCH} -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\"\n      -o ./publish/${ESTAFETTE_GIT_NAME}\n    when: status == 'succeeded'\n    env:\n      CGO_ENABLED: \"0\"\n      GOARCH: amd64\n      GOOS: linux\n  bake-all:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: build\n      copy:\n      - builder/templates\n      dontExpand:\n      - ESTAFETTE_WORKDIR\n      no-cache: true\n      path: ./publish\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: build\n      copy:\n      - builder/templates\n      dockerfile: Dockerfile.gocd\n      no-cache: true\n      path: ./publish\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n  dive-and-trivy-all:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: dive\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: dive\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: trivy\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: trivy\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n  clean-working-directory:\n    image: golang:1.14.2-alpine3.11\n    shell: /bin/sh\n    workDir: /estafette-work\n    commands:\n    - rm -rf ..?* .[!.]* *\n    when: status == 'succeeded'\n  test:\n    image: estafette/estafette-ci-builder:${ESTAFETTE_BUILD_VERSION}\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded'\n    env:\n      BUILDER_CONFIG: '{ \"action\":\"build\", \"track\":\"dev\", \"dindMtu\":\"1460\", \"dindBip\":\"192.168.3.1/24\",\n        \"dindNetwork\":{ \"name\":\"estafette-integration\", \"subnet\":\"192.168.4.1/24\",\n        \"gateway\":\"192.168.4.1\" }, \"manifest\":{ \"Builder\":{ \"Track\":\"stable\", \"OperatingSystem\":\"linux\"\n        }, \"Labels\":{ \"app\":\"estafette-ci-builder\", \"app-group\":\"estafette-ci\", \"language\":\"golang\",\n        \"team\":\"estafette-team\" }, \"Version\":{ \"SemVer\":{ \"Major\":0, \"Minor\":0, \"Patch\":\"{{auto}}\",\n        \"LabelTemplate\":\"{{branch}}\", \"ReleaseBranch\":\"master\" }, \"Custom\":null },\n        \"GlobalEnvVars\":null, \"Stages\":[ { \"Name\":\"services-test\", \"ContainerImage\":\"alpine:latest\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\": [ \"route\",\n        \"ip addr show eth0\", \"cat /etc/hosts\", \"cat /etc/resolv.conf\", \"apk add curl\",\n        \"curl -v --connect-timeout 2 --retry 10 --retry-delay 2 --retry-connrefused\n        http://nginx:80/\" ], \"When\":\"status == ''succeeded''\", \"EnvVars\":null, \"AutoInjected\":false,\n        \"Retries\":0, \"Services\": [ { \"Name\": \"nginx\", \"ContainerImage\": \"nginx:alpine\",\n        \"Shell\":\"/bin/sh\", \"When\":\"status == ''succeeded''\", \"Readiness\": { \"Path\":\n        \"/\", \"TimeoutSeconds\": 30, \"Hostname\": \"nginx\", \"Port\": 80, \"Protocol\": \"http\"\n        } }, { \"Name\": \"cockroachdb\", \"ContainerImage\": \"cockroachdb/cockroach:v19.2.0\",\n        \"Commands\":[ \"/cockroach/cockroach start-single-node --insecure --advertise-addr\n        cockroachdb\" ], \"EnvVars\":{ \"COCKROACH_SKIP_ENABLING_DIAGNOSTIC_REPORTING\":\"true\"\n        }, \"Shell\":\"/bin/sh\", \"When\":\"status == ''succeeded''\", \"Readiness\": { \"Path\":\n        \"/health?ready=1\", \"TimeoutSeconds\": 30, \"Hostname\": \"cockroachdb\", \"Port\":\n        8080, \"Protocol\": \"http\" } } ] }, { \"Name\":\"git-clone\", \"ContainerImage\":\"extensions/git-clone:dev\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":null,\n        \"shallow\": false, \"When\":\"status == ''succeeded''\", \"EnvVars\":null, \"AutoInjected\":true,\n        \"Retries\":0, \"CustomProperties\":null }, { \"Name\":\"parallel-builds\", \"ContainerImage\":\"\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":[], \"When\":\"status\n        == ''succeeded''\", \"EnvVars\":{}, \"AutoInjected\":false, \"Retries\":0, \"CustomProperties\":null,\n        \"ParallelStages\":[ { \"Name\":\"buildA\", \"ContainerImage\": \"golang:1.14.0-alpine3.11\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":[ \"go\n        test ./...\", \"go build -v -ldflags \\\"-X main.version=${ESTAFETTE_BUILD_VERSION}\n        -X main.revision=${ESTAFETTE_GIT_REVISION} -X main.branch=${ESTAFETTE_GIT_BRANCH}\n        -X main.buildDate=${ESTAFETTE_BUILD_DATETIME}\\\" -o ./publish/${ESTAFETTE_GIT_NAME}\",\n        \"echo $PWD\", \"ls -latr\", \"ls -latr ./publish\" ], \"When\":\"status == ''succeeded''\",\n        \"EnvVars\":{ \"CGO_ENABLED\":\"0\", \"GOOS\":\"linux\", \"GOARCH\":\"amd64\" }, \"AutoInjected\":false,\n        \"Retries\":0, \"CustomProperties\":null }, { \"Name\":\"buildB\", \"ContainerImage\":\"alpine:3.10\",\n        \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\", \"Commands\":[ \"echo\n        hi\" ], \"When\":\"status == ''succeeded''\" } ] }, { \"Name\":\"bake-estafette\",\n        \"ContainerImage\":\"extensions/docker:dev\", \"Shell\":\"/bin/sh\", \"WorkingDirectory\":\"/estafette-work\",\n        \"Commands\":null, \"When\":\"status == ''succeeded''\", \"EnvVars\":null, \"AutoInjected\":false,\n        \"Retries\":0, \"CustomProperties\":{ \"action\":\"build\", \"no-cache\":true, \"tag\":\"testtag\",\n        \"expand-variables\":false, \"path\":\"./publish\", \"repositories\":[\"estafette\"]\n        } } ], \"Releases\":null }, \"jobName\":\"build-estafette-estafette-ci-builder-391855387650326531\",\n        \"ciServer\":{ \"baseUrl\":\"https://httpstat.us/200\", \"builderEventsUrl\":\"https://httpstat.us/200\",\n        \"postLogsUrl\":\"https://httpstat.us/200\", \"apiKey\":\"\" }, \"buildParams\":{ \"buildID\":391855387650326531\n        }, \"git\":{ \"repoSource\":\"github.com\", \"repoOwner\":\"estafette\", \"repoName\":\"estafette-ci-builder\",\n        \"repoBranch\":\"integration-test\", \"repoRevision\":\"4ba7791566e3f6f69e8542183168ec9b1ad03ca7\"\n        }, \"buildVersion\":{ \"version\":\"0.0.0-integration-test\", \"major\":0, \"minor\":0,\n        \"patch\":\"0\", \"autoincrement\":0 }, \"credentials\":null, \"trustedImages\":[ {\n        \"path\":\"extensions/docker\", \"runDocker\":true }, { \"path\":\"estafette/estafette-ci-builder\",\n        \"runPrivileged\":true }, { \"path\":\"golang\", \"runDocker\":true, \"allowCommands\":true\n        }, { \"path\":\"extensions/git-clone\" }, { \"path\":\"bsycorp/kind\", \"runPrivileged\":true\n        } ] }'\n      ESTAFETTE_LOG_FORMAT: console\n      SECRET_DECRYPTION_KEY: 8c6E5e7R8ameE2L6qxEcN5Yc3Q7P4Yd4\n  push-all:\n    when: status == 'succeeded'\n    parallelStages:\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: push\n      repositories:\n      - estafette\n    - image: extensions/docker:dev\n      shell: /bin/sh\n      workDir: /estafette-work\n      when: status == 'succeeded'\n      action: push\n      repositories:\n      - estafette\n      versionTagSuffix: gocd\n  slack-notify:\n    image: extensions/slack-build-status:dev\n    shell: /bin/sh\n    workDir: /estafette-work\n    when: status == 'succeeded' || status == 'failed'\n    channels:\n    - '#build-status'\n    workspace: estafette\nreleases:\n  windows:\n    stages:\n      build:\n        image: golang:1.13.0-windowsservercore-1809\n        shell: powershell\n        workDir: C:/estafette-work\n        commands:\n        - go build -v -ldflags \"-X main.app=$env:ESTAFETTE_GIT_NAME -X main.version=$env:ESTAFETTE_BUILD_VERSION\n          -X main.revision=$env:ESTAFETTE_GIT_REVISION -X main.branch=$env:ESTAFETTE_GIT_BRANCH\n          -X main.buildDate=$env:ESTAFETTE_BUILD_DATETIME\" -o ./publish/$env:ESTAFETTE_GIT_NAME.exe\n        when: status == 'succeeded'\n        env:\n          CGO_ENABLED: \"0\"\n          GOARCH: amd64\n          GOOS: windows\n      bake:\n        image: extensions/docker:windowsservercore-1809\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: build\n        dockerfile: Dockerfile.windowsservercore-1809\n        expand-variables: false\n        no-cache: true\n        path: ./publish\n        repositories:\n        - estafette\n      push-to-docker-hub:\n        image: extensions/docker:windowsservercore-1809\n        shell: powershell\n        workDir: C:/estafette-work\n        when: status == 'succeeded'\n        action: push\n        pushVersionTag: false\n        repositories:\n        - estafette\n        tags:\n        - windowsservercore-1809\n  dev:\n    stages:\n      tag-all:\n        when: status == 'succeeded'\n        parallelStages:\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - dev\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - dev-gocd\n          versionTagSuffix: gocd\n  beta:\n    stages:\n      tag-all:\n        when: status == 'succeeded'\n        parallelStages:\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - beta\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - beta-gocd\n          versionTagSuffix: gocd\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#build-status'\n        workspace: estafette\n  stable:\n    stages:\n      tag-all:\n        when: status == 'succeeded'\n        parallelStages:\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - stable\n          - latest\n        - image: extensions/docker:dev\n          shell: /bin/sh\n          workDir: /estafette-work\n          when: status == 'succeeded'\n          action: tag\n          repositories:\n          - estafette\n          tags:\n          - stable-gocd\n          - latest-gocd\n          versionTagSuffix: gocd\n      slack-notify:\n        image: extensions/slack-build-status:dev\n        shell: /bin/sh\n        workDir: /estafette-work\n        when: status == 'succeeded' || status == 'failed'\n        channels:\n        - '#build-status'\n        workspace: estafette\n",
  "commits": [
    {
      "message": "pass validate true to ReadManifestFromFile",
      "author": {
        "email": "me@estafette.io",
        "name": "Just Me",
        "username": "JustMe"
      }
    }
  ],
  "triggers": [
    {
      "pipeline": {
        "event": "finished",
        "status": "succeeded",
        "name": "github.com/estafette/estafette-ci-builder",
        "branch": ".+"
      },
      "releases": {
        "target": "dev",
        "version": "same"
      }
    }
  ],
  "triggerEvents": [
    {
      "git": {
        "event": "push",
        "repository": "github.com/estafette/estafette-ci-builder",
        "branch": "master"
      }
    }
  ],
  "insertedAt": "2020-05-20T08:03:46.291014Z",
  "updatedAt": "2020-05-20T08:07:42.145048Z",
  "duration": 235000000000,
  "pendingDuration": 0
}